{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/router.js","../../src/components/Sentence.svelte","../../src/global.js","../../src/components/Results.svelte","../../src/components/CorpusPicker.svelte","../../src/Search.svelte","../../src/Home.svelte","../../src/dictionary.js","../../src/commonwords.js","../../src/Word.svelte","../../src/components/Slider.svelte","../../src/Reader.svelte","../../src/Saved.svelte","../../src/Synonym.svelte","../../src/Quiz.svelte","../../src/Wordlist.svelte","../../src/components/Route.svelte","../../src/components/Link.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\r\n\r\nfunction encodeParams(p) {\r\n  let c_params = \"?\";\r\n  const keys = Object.keys(p);\r\n  if (keys) {\r\n    keys.forEach((x) => {\r\n      c_params += x + \"=\" + p[x] + \"&\";\r\n    });\r\n  }\r\n  return c_params.slice(0, c_params.length - 1);\r\n}\r\n\r\nconst Router = {\r\n  currentParams: writable({}),\r\n  currentPath: writable(\"#\"),\r\n  getPath: function() {\r\n    const l = window.location.href + \"/\";\r\n    let match = l.match(/\\/(#.*?)[\\?\\/]/);\r\n    return (match && match.length > 1) ? (match[1] ? match[1] : '') : '';\r\n  },\r\n  getFullPath: function() {\r\n    const l = window.location.href + \"?\";\r\n    let match = l.match(/\\/#(.*?)\\?/);\r\n    return match ? match[1].split(\"/\").map(x => decodeURI(x)) : '';\r\n  },\r\n  getParams: function() {\r\n    let parsed = {};\r\n    const l = window.location.href;\r\n    let match = l.match(/\\?(.*)/);\r\n    const str = (match ? match[1] : \"\")\r\n    if (!str) return {};\r\n    str.split(\"&\").forEach(x => {\r\n      const pair = x.split(\"=\");\r\n      parsed[pair[0]] = decodeURI(pair[1]);\r\n    });\r\n    return parsed;\r\n  },\r\n  goto: function(dest, params = 0) {\r\n    if (params == 0) {\r\n      let op = this.getParams();\r\n      if (op.corpus) {\r\n        params = {\r\n          corpus: op.corpus\r\n        };\r\n      }\r\n    }\r\n    let c_params = encodeParams(params);\r\n    window.location.href = window.location.origin + '/#' + dest + c_params;\r\n  },\r\n  setParam: function(param, value) {\r\n    let old_params = this.getParams();\r\n\r\n    old_params[param] = value;\r\n\r\n    let c_params = encodeParams(old_params);\r\n\r\n    let c_path = this.getPath();\r\n    if (c_path == \"\" || c_path == \"/\") {\r\n      return;\r\n    }\r\n\r\n    window.location.href = window.location.href.replace(/\\?(.*)$/, '') + c_params;\r\n  },\r\n  init: function() {\r\n    let router = this;\r\n    function updatePath() {\r\n      let c_path = router.getPath();\r\n      router.currentPath.set(c_path);\r\n      router.currentParams.set(router.getParams())\r\n    }\r\n    window.addEventListener('popstate', () => { \r\n      updatePath();\r\n    });\r\n    \r\n    if (this.getPath() == \"\") {\r\n      this.goto(\"\");\r\n    } else {\r\n      updatePath();\r\n    }\r\n    return 1;\r\n  }\r\n}\r\n\r\nexport default Router","<script lang=\"ts\">\r\n  import { createEventDispatcher, onMount } from 'svelte';\r\n\timport Navigation from \"../router\";\r\n  const dispatch = createEventDispatcher();\r\n\r\n\tconst punctuationRegex = /^([.,!?%*;:])$/;\r\n\tconst extraCharacterRegex = /^([\\/#$%^\\[\\]&\"'\\”\\‘\\’\\“\\-_()])$/;\r\n\r\n  export let sentence: sentenceObject, highlight = -1;\r\n\tlet pinned: any = false;\r\n\r\n  interface sentenceObject {\r\n\t\t_id: string,\r\n\t\ttitle: string,\r\n\t\tcontent: string[],\r\n\t\tlemma: string[]\r\n\t}\r\n\r\n\tfunction isPunctuation(word: string) {\r\n\t\treturn punctuationRegex.test(word);\r\n\t}\r\n\r\n\tfunction isExtraCharacter(word: string) {\r\n\t\treturn extraCharacterRegex.test(word);\r\n\t}\r\n\r\n  function handleEnter(e) {\r\n    dispatch('check_def', e.target);\r\n  }\r\n\r\n  function handleLeave(e) {\r\n    dispatch('check_def', 0);\r\n  }\r\n\r\n\tfunction copySentence() {\r\n\t\tnavigator.clipboard.writeText(sentence.content.join(\" \"));\r\n\t}\r\n\r\n\tfunction checkPin() {\r\n\t\tconst _pinned = window.localStorage.getItem(sentence._id);\r\n\t\tpinned = _pinned != undefined;\r\n\t}\r\n\r\n\tNavigation.currentPath.subscribe(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tcheckPin();\r\n\t\t}, 5)\r\n\t});\r\n\r\n\tonMount(() => {\r\n\t\tcheckPin();\r\n\t});\r\n</script>\r\n\r\n<main>\r\n  <div class=\"sentence\">\r\n    <div id=\"sent\">\r\n      <!--<div id=\"highlight-div\">{@html formatSentence(results.highlightLookup[i], res[2])}</div>-->\r\n      {#each sentence.content as word, j}\r\n        <span id=\"word\" on:click=\"{() => dispatch('word_click', (sentence.lemma[j] || word))}\" on:mouseleave=\"{handleLeave}\" on:mouseenter=\"{handleEnter}\" class={( isExtraCharacter(word) ? \"disabled \" : \"\" ) + ( isPunctuation(word) ? \"disabled punctuation \" : \"\" ) + ( highlight == j ? \"highlight\" : \"\" )}>\r\n          {word}\r\n        </span>\r\n      {/each}\r\n    </div>\r\n    <div class=\"unimportant\">\r\n      <div id=\"id\">ID: {sentence._id}</div>\r\n      <div id=\"source\">Från: {sentence.title}</div>\r\n    </div>\r\n    <span on:click={() => { dispatch('pin_sentence'); pinned ^= 1 }} id=\"pin\" class=\"clickable material-symbols-outlined {pinned ? \"symbol-filled\" : \"symbol-outlined\"}\">push_pin</span>\r\n\t\t<span on:click={() => { copySentence() }} id=\"copy\" class=\"clickable material-symbols-outlined\">content_copy</span>\r\n  </div>\r\n</main>\r\n\r\n<style>\r\n\tmain {\r\n\t\tbackground-color: var(--main-bg-second);\r\n\t\tborder-radius: 7px;\r\n\t\tmargin: 15px;\r\n\t\tpadding: 0px 10px;\r\n\t}\r\n\tmainwithshadow {\r\n\t\tbox-shadow: 0px 10px 10px 0px rgb(0 0 0 / 12%);\r\n\t}\r\n\t#word {\r\n\t\tdisplay: inline-block;\r\n\t\tpadding: 2px;\r\n\t\tborder-radius: 3px;\r\n\t}\r\n  .clickable {\r\n    cursor: pointer;\r\n  }\r\n\t#word:hover:not(.disabled) {\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: var(--main-bg-color);\r\n\t}\r\n\t.punctuation {\r\n\t\tpadding-right: 4px !important;\r\n\t\tmargin-left: -3px;\r\n\t}\r\n\t#sent {\r\n\t\tfont-size: 20px;\r\n\t}\r\n\t.unimportant {\r\n\t\tcolor: var(--main-dark);\r\n\t\tfont-size: 15px;\r\n\t}\r\n\t.sentence {\r\n\t\tpadding-top: 10px;\r\n\t}\r\n</style>","import { writable } from 'svelte/store';\r\n\r\nexport const currentWord = writable(-1);\r\nexport const queryWord = writable(\"\");\r\nexport let corpusList = [\"8sidor.se\", \"läsbart\", \"webbnyheter\"];\r\nexport let corpusEnabled = writable(0);","<script lang=\"ts\">\r\n\timport Sentence from \"./Sentence.svelte\";\r\n\timport { currentWord } from '../global.js';\r\n\timport { onMount } from \"svelte\";\r\n\t\r\n\t//import type { resArray, WorkerResult } from \"./worker\";\r\n\t//import { webWorker } from \"./worker\";\r\n\r\n\tinterface sentenceObject {\r\n\t\t_id: string,\r\n\t\ttitle: string,\r\n\t\tcontent: string[],\r\n\t\tlemma: string[]\r\n\t}\r\n\r\n\texport let results: Array<sentenceObject> = [];\r\n\texport let highlight: number[] = [];\r\n\r\n\tfunction handleClick(e) {\r\n\t\t//checkQuery(e.detail);\r\n\t\t//navigate('/word/' + e.detail);\r\n\t\t//window.open(window.location.origin + '/word/' + e.detail, '_blank')\r\n\t\tcurrentWord.set(e.detail);\r\n\t}\r\n\r\n\tfunction pinSentence(i: number) {\r\n\t\tconst sent = results[i];\r\n\r\n\t\tlet pinnedIds = window.localStorage.getItem(\"pinned-id\");\r\n\r\n\t\tif (pinnedIds) {\r\n\t\t\tlet a = pinnedIds.split(\",\");\r\n\t\t\tlet i = a.indexOf(sent._id);\r\n\t\t\tif (i != -1) {\r\n\t\t\t\twindow.localStorage.setItem(\"pinned-id\", a.filter(x => x != sent._id).join(\",\"));\r\n\t\t\t\twindow.localStorage.removeItem(sent._id);\r\n\t\t\t} else {\r\n\t\t\t\twindow.localStorage.setItem(\"pinned-id\", pinnedIds + \",\" + sent._id);\r\n\t\t\t\twindow.localStorage.setItem(sent._id, JSON.stringify(sent));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\twindow.localStorage.setItem(\"pinned-id\", sent._id);\r\n\t\t\twindow.localStorage.setItem(sent._id, JSON.stringify(sent));\r\n\t\t}\r\n\t}\r\n\t\r\n\tonMount(() => {\r\n\t\t\r\n\t})\r\n</script>\r\n\r\n<main>\r\n\t{#each results as res, i}\r\n\t\t<Sentence on:pin_sentence={() => pinSentence(i)} on:word_click={handleClick} sentence={res} highlight={highlight[i]}/>\r\n\t{/each}\r\n</main>\r\n\r\n<style>\r\n\tmain {\r\n\t\theight: 100%;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\toverflow: auto;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\tmain::-webkit-scrollbar-track {\r\n\t\tbackground: var(--main-complement); \r\n\t}\r\n</style>","<script lang=\"ts\">\r\n  import { corpusList, corpusEnabled } from \"../global\";\r\n  import Navigate from \"../router\";\r\n\r\n  let enabled = -1;\r\n  corpusEnabled.subscribe(v => {\r\n    enabled = v;\r\n    Navigate.setParam(\"corpus\", enabled);\r\n  });\r\n</script>\r\n\r\n<main>\r\n  {#each corpusList as c, i}\r\n    <div class=\"radio-container\">\r\n      <div style=\"margin-right: 7px;\"><div id=\"radio\" class={enabled == i ? \"checked\" : \"\"} on:click={() => { corpusEnabled.set(i) }} /></div>\r\n      {c}\r\n    </div>\r\n  {/each}\r\n</main>\r\n\r\n<style>\r\n  .checked {\r\n    background-color: var(--main-vivid) !important;\r\n  }\r\n  #radio {\r\n    cursor: pointer;\r\n    width: 15px;\r\n    height: 15px;\r\n    border-radius: 50px;\r\n    background-color: var(--main-complement);\r\n  }\r\n</style>","<script lang=\"ts\">\r\n\tconst queryLookupURL = \"https://data.mongodb-api.com/app/searchapi-pcnyg/endpoint/query\";\r\n\timport Results from \"./components/Results.svelte\";\r\n\timport CorpusPicker from \"./components/CorpusPicker.svelte\";\r\n\timport Checkbox from \"./components/Checkbox.svelte\";\r\n\timport { currentWord, queryWord, corpusEnabled } from './global.js';\r\n\timport Navigate from \"./router\";\r\n\timport { onMount } from \"svelte\";\r\n\t\r\n\t//import type { resArray, WorkerResult } from \"./worker\";\r\n\t//import { webWorker } from \"./worker\";\r\n\r\n\tlet enabled = -1;\r\n  corpusEnabled.subscribe(v => {\r\n    enabled = v;\r\n  });\r\n\r\n\tinterface sentenceObject {\r\n\t\t_id: string,\r\n\t\ttitle: string,\r\n\t\tcontent: string[],\r\n\t\tlemma: string[]\r\n\t}\r\n\r\n\tlet queryInput;\r\n\tlet searching: number = 2;\r\n\t//let shallow: boolean = true;\r\n\r\n\tlet results: Array<sentenceObject> = [];\r\n\tlet highlightLookup: number[] = [];\r\n\r\n\tlet query: string = \"\";\r\n\r\n\tqueryWord.subscribe(value => {\r\n\t\tif (value == \"\") return;\r\n\t\tcheckQuery(value);\r\n\t});\r\n\r\n\tfunction validateInput(e) {\r\n\t\te.preventDefault();\r\n\t\tquery = e.target.value = e.target.value.replace(/\\s/g, '');\r\n\t}\r\n\r\n\tasync function checkQuery(q: string) {\r\n\t\tif (q.length > 30) {\r\n\t\t\talert(\"Too long a query!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (q == \"\") return;\r\n\t\tqueryInput.value = query = q.trim();\r\n\t\tNavigate.goto(\"search/\" + query, {\r\n\t\t\tcorpus: enabled\r\n\t\t} as any);\r\n\t\tsearching = 1;\r\n\t\tresults = [];\r\n\r\n\t\tconst lookupQuery = query//.toLowerCase();\r\n\t\t\r\n\t\tconst response = await fetch(queryLookupURL, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tword: lookupQuery,\r\n\t\t\t\tcorpus: enabled\r\n\t\t\t})\r\n\t\t}).then((r) => r.json());\r\n\r\n\t\tif (results.length) return;\r\n\r\n\t\tif (response.length) {\r\n\t\t\tconst _q = query.toLowerCase();\r\n\r\n\t\t\tresponse.forEach((e: sentenceObject, i: number) => {\r\n\t\t\t\tfor (let i = 0; i < e.content.length; i++) {\r\n\t\t\t\t\tif (e.content[i] == \"&amp;\") e.content[i] = \"&\";\r\n\t\t\t\t}\r\n\t\t\t\tconst index = e.content.findIndex(f => f.toLowerCase() == _q);\r\n\t\t\t\thighlightLookup[i] = ((index != -1) ? index : e.lemma.findIndex(f => f == _q));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tresults = response;\r\n\t\tsearching = 0;\r\n\t}\r\n\t\r\n\tonMount(() => {\r\n\t\tconst fp = Navigate.getFullPath();\r\n\t\tlet q = fp[1];\r\n\r\n\t\tif (!q || fp[0] != \"search\") return;\r\n\r\n\t\tcheckQuery(q);\r\n\t})\r\n</script>\r\n\r\n<main>\r\n\t<form on:submit|preventDefault={() => { if (searching == 1) return; checkQuery(query) }} id=\"form\" autocomplete=\"off\">\r\n\t\t<div id=\"form-wrap\">\r\n\t\t\t<div id=\"input-wrap\">\r\n\t\t\t\t<input id=\"input\" bind:this={queryInput} on:input={validateInput}>\r\n\t\t\t\t<button class={searching ? \"disabled\" : \"\"} type=\"submit\" style=\"margin: 0 20px 0 5px;\">\r\n\t\t\t\t\tsök\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<!--<div id=\"shallow\">\r\n\t\t\t\t<span style=\"margin-right: 10px;\"><Checkbox bind:checked={shallow} /></span>\r\n\t\t\t\tbortse böjning\r\n\t\t\t</div>-->\r\n\t\t\t<div id=\"container\">\r\n\t\t\t\t<CorpusPicker />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</form>\r\n\t{#if !results.length}\r\n\t\t{#if searching == 0}\r\n\t\t\t<div id=\"missing\"><div>inga exempel hittades</div></div>\r\n\t\t{:else if searching == 1}\r\n\t\t\t<div id=\"glass-wrap\"><img src=\"svg/glass.svg\" width=\"150px\" id=\"mag-glass\"></div>\r\n\t\t{/if}\r\n\t{:else}\r\n\t\t<div id=\"results\">\r\n\t\t\t<Results results={results} highlight={highlightLookup}/>\r\n\t\t</div>\r\n\t{/if}\r\n</main>\r\n\r\n<style>\r\n\t#results {\r\n\t\theight: calc(100vh - 130px);\r\n\t}\r\n\t#input {\r\n\t\tflex: 1;\r\n\t}\r\n\t#missing {\r\n\t\twidth: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\t}\r\n\t#missing div {\r\n\t\tpadding: 30px;\r\n\t\tmargin: 100px auto;\r\n    font-size: 50px;\r\n    color: var(--main-bg-color);\r\n    font-family: 'Comfortaa', cursive;\r\n    font-weight: 700;\r\n  }\r\n\t#shallow {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\ttext-align: center;\r\n\t\tpadding: 0 10px;\r\n\t\theight: 50px;\r\n\t\tbackground-color: var(--main-bg-second);\r\n\t\tborder-radius: 5px;\r\n\t}\r\n\t@keyframes upDown {\r\n\t\tto { transform: translatey(100px);}\r\n\t}\r\n\t#input-wrap {\r\n\t\tflex: 1;\r\n\t\tdisplay: flex;\r\n\t\theight: 50px;\r\n\t}\r\n\t#glass-wrap {\r\n\t\tdisplay: flex;\r\n    justify-content: center;\r\n\t\tmargin-top: 100px;\r\n\t}\r\n\t#container {\r\n\t\tdisplay: flex;\r\n    flex-direction: column;\r\n    text-align: left;\r\n\t\tmargin-left: 20px;\r\n\t}\r\n\t#mag-glass {\r\n\t\tposition: absolute;\r\n\t\tanimation: upDown 1.5s alternate infinite ease-in-out;\r\n\t}\r\n\tmain {\r\n\t\theight: 100%;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\toverflow: hidden;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n</style>","<main>\r\n  <div id=\"main\">invenio</div>\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  #main {\r\n    padding: 100px;\r\n    font-size: 100px;\r\n    color: var(--main-bg-color);\r\n    font-family: 'Comfortaa', cursive;\r\n    font-weight: 700;\r\n  }\r\n</style>","import _common from \"./commonwords\";\r\n\r\nconst dictUrl = \"/kaikki.dict\";\r\nconst wordListUrl = \"/kaikki.list\"\r\nconst synonymUrl = \"/hogskoleprov.list\";\r\n\r\n/*\r\n\r\n{\r\n  word: --,\r\n  def: [\r\n    {\r\n      type,\r\n      etymology,\r\n      def: [{\r\n        examples,\r\n        thingy\r\n      }]\r\n    };\r\n  ]\r\n}\r\n\r\n*/\r\n\r\nconst Dictionary = {\r\n  mostCommon: _common,\r\n  loaded: 0,\r\n  db: {},\r\n  wordList: [],\r\n  synonymList: [],\r\n  fetchWordList: function() {\r\n    let wl = localStorage.getItem('wordlist');\r\n\r\n    if (!wl) {\r\n      this.writeWordList();\r\n      return;\r\n    }\r\n\r\n    const list = wl.split(\"\\n\");\r\n    list.forEach(x => {\r\n      this.wordList.push(x.replace(\"\\r\", \"\").split(\",\"));\r\n    })\r\n  },\r\n  fetchSynonymList: function() {\r\n    let wl = localStorage.getItem('hogskoleprov');\r\n\r\n    if (!wl) {\r\n      this.writeSynonymList();\r\n      return;\r\n    }\r\n\r\n    const list = wl.split(\"\\n\");\r\n    list.forEach(x => {\r\n      let d = x.split(\"|\");\r\n      this.synonymList.push({\r\n        word: d.shift(),\r\n        correct: d.shift(),\r\n        alternatives: d\r\n      });\r\n    })\r\n  },\r\n  initDb: async function () {\r\n    const request = indexedDB.open(\"Kaikki\");\r\n    let upgradeNeeded = 0;\r\n\r\n    request.onupgradeneeded = (event) => {\r\n      upgradeNeeded = 1;\r\n\r\n      const db = event.target.result;\r\n\r\n      const objectStore = db.createObjectStore(\"dictionary\", { keyPath: \"word\" });\r\n\r\n      //objectStore.createIndex(\"def\", \"def\", { unique: false });\r\n      \r\n    };\r\n\r\n    return await new Promise((proceed) => {\r\n      request.onerror = (e) => {\r\n        console.error(\"IndexedDB error!\");\r\n      };\r\n      request.onsuccess = (event) => {\r\n        this.db = event.target.result;\r\n        this.db.onerror = (event) => {\r\n          console.error(`Database error: ${event.target.errorCode}`);\r\n        };\r\n        proceed(upgradeNeeded);\r\n      };\r\n    });\r\n  },\r\n  fetchDb: async function (objectStore, key, callback) {\r\n    return await new Promise((p) => {\r\n      const request = objectStore.get(key);\r\n      request.onsuccess = async () => {\r\n        await callback(request.result);\r\n        p();\r\n      }\r\n    });\r\n  },\r\n  writeDb: async function (objectStore, value) {\r\n    return await new Promise((p) => {\r\n      const request = objectStore.put(value);\r\n      request.onsuccess = () => {\r\n        p();\r\n      }\r\n      request.onerror = (e) => {\r\n        console.error(e);\r\n      }\r\n    });\r\n  },\r\n  writeDictionary: async function() {\r\n    let raw = \"\";\r\n\r\n    await fetch(dictUrl)\r\n      .then(response => response.text())\r\n      .then((response) => {\r\n          raw = response;\r\n      })\r\n      .catch(err => alert(\"Error downloading dictionary: \" + err));\r\n\r\n    const transaction = this.db.transaction(\"dictionary\", \"readwrite\");\r\n    const objectStore = transaction.objectStore(\"dictionary\");\r\n\r\n    transaction.oncomplete = () => {\r\n      console.log(\"transaction closed.\");\r\n    };\r\n    \r\n    let t = 0;\r\n    let def = [];\r\n    const Buf = {\r\n      buf: [\"\", \"\", \"\"],\r\n      clear: function() {\r\n        this.buf = [\"\", \"\", \"\"];\r\n        def = [];\r\n      },\r\n      add: function(t, s) {\r\n        this.buf[t] += s;\r\n      },\r\n      get: function(t) {\r\n        return this.buf[t];\r\n      }\r\n    }\r\n    \r\n    for(let pos = 0; pos < raw.length; pos++) {\r\n      const current_symbol = raw[pos];\r\n      if (current_symbol == \"|\") {\r\n        switch (t) {\r\n          case 0:\r\n            break;\r\n          case 1:\r\n            try {\r\n              def = JSON.parse(Buf.get(1));\r\n            } catch(e) {\r\n              console.log(e);\r\n            }\r\n            break;\r\n        }\r\n        t++;\r\n      } else if (current_symbol == \"\\n\") {\r\n        const key = Buf.get(0);\r\n        if (key == \"\") continue;\r\n\r\n        await this.writeDb(objectStore, {\r\n          word: key,\r\n          etymology: Buf.get(2),\r\n          def: def\r\n        });\r\n\r\n        t = 0;\r\n        Buf.clear();\r\n      } else {\r\n        Buf.add(t, current_symbol);\r\n      }\r\n    }\r\n  },\r\n  writeWordList: async function () {\r\n    await fetch(wordListUrl)\r\n      .then(response => response.text())\r\n      .then((response) => {\r\n          localStorage.setItem('wordlist', response);\r\n          this.fetchWordList();\r\n      })\r\n      .catch(err => alert(\"Error downloading wordlist: \" + err));\r\n    return 1;\r\n  },\r\n  writeSynonymList: async function () {\r\n    await fetch(synonymUrl)\r\n      .then(response => response.text())\r\n      .then((response) => {\r\n          localStorage.setItem('hogskoleprov', response);\r\n          this.fetchSynonymList();\r\n      })\r\n      .catch(err => alert(\"Error downloading hogskoleprov: \" + err));\r\n    return 1;\r\n  },\r\n  init: async function() {\r\n    const empty = await this.initDb();\r\n\r\n    if (empty) {\r\n      console.log(\"writing dict...\");\r\n      await this.writeDictionary();\r\n      await this.writeWordList();\r\n      await this.writeSynonymList();\r\n    } else {\r\n      this.fetchWordList();\r\n      this.fetchSynonymList();\r\n    }\r\n\r\n    return 1;\r\n  },\r\n  getTypeName(t) {\r\n    switch (t) {\r\n      case \"noun\":\r\n        return \"substantiv\";\r\n      case \"verb\":\r\n        return \"verb\";\r\n      case \"adj\":\r\n        return \"adjektiv\";\r\n      case \"intj\":\r\n        return \"interjektion\";\r\n      case \"conj\":\r\n        return \"konjunktion\";\r\n      case \"det\":\r\n        return \"artikel\";\r\n      case \"pron\":\r\n        return \"pronomen\";\r\n      case \"num\":\r\n        return \"nummer\";\r\n      case \"name\":\r\n        return \"namn\";\r\n      case \"adv\":\r\n        return \"adverb\";\r\n      default:\r\n        return t;\r\n    }\r\n  },\r\n  getLemma: function(word) {\r\n    const lemmas = [word];\r\n    for (let i = 0; i < this.wordList.length; i++) {\r\n      for (let j = 0; j < this.wordList[i].length; j++) {\r\n        let c = this.wordList[i][j];\r\n        if (c.toLowerCase() == word) {\r\n          lemmas.push(this.wordList[i][0]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (lemmas.length > 1) {\r\n      lemmas.shift();\r\n    }\r\n    lemmas.sort((a, b) => b.length - a.length);\r\n\r\n    return lemmas[0];\r\n  },\r\n  matchParts: function(text) {\r\n    let bestMatch = [text[0], 0];\r\n    let longest = 1;\r\n    let realLongest = 1;\r\n\r\n    for (let i = 0; i < this.wordList.length; i++) {\r\n      for (let j = 0; j < this.wordList[i].length; j++) {\r\n        let c = this.wordList[i][j];\r\n        const fix = (c.length > 1 && (c[0] == \"-\" || c[c.length - 1] == \"-\"))\r\n        if (fix) {\r\n          c = c.replace(\"-\", \"\");\r\n        }\r\n  \r\n        if (c.length > text.length) continue;\r\n        let matching = (() => {\r\n          let k = 0;\r\n          while (k < c.length) {\r\n            if (c[k] != text[k]) {\r\n              if (k > 9) {\r\n                break;\r\n              } else {\r\n                return 0;\r\n              }\r\n            }\r\n            k++;\r\n          }\r\n          return k;\r\n        })();\r\n  \r\n        if (matching > longest || (matching >= longest && (fix || c == \"bo\"))) {\r\n          longest = matching;\r\n          realLongest = longest;\r\n          bestMatch = [this.wordList[i][j], this.wordList[i][0]];\r\n\r\n          const last = c[c.length - 1];\r\n          if ((j > 0 && !fix && (last == \"s\" || last == \"t\") && c.length > 3)) {\r\n            realLongest = longest - 1;\r\n            bestMatch = [this.wordList[i][0], this.wordList[i][0]]\r\n          }\r\n          if (c.indexOf(\" \") != - 1|| c == \"bo\" || (c == \"be\" && fix)) {\r\n            longest += 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return [realLongest, bestMatch];\r\n  },\r\n  getQuestion: function() {\r\n    return this.synonymList[Math.floor(Math.random() * this.synonymList.length)];\r\n  },\r\n  getCompound: function(w) {\r\n    if (w.indexOf(\" \") != -1) return w.split(\" \");\r\n\r\n    let compounds = [];\r\n\r\n    let remaining = w;\r\n\r\n    while(remaining.length) {\r\n      let bestMatch = this.matchParts(remaining);\r\n      const c = bestMatch[1][0];\r\n\r\n      if (remaining == w) {\r\n        if (c.length <= 2) {\r\n          return [];\r\n        }\r\n        if (bestMatch[0] == w.length) {\r\n          return [bestMatch[1][1]];\r\n        }\r\n      }\r\n\r\n      remaining = remaining.slice(bestMatch[0]);\r\n      \r\n      if (c.length >= 3) {\r\n        compounds.push(c);\r\n      }\r\n    }\r\n\r\n    if (compounds.length > 1 && compounds[0][0] == \"-\") return [];\r\n\r\n    return compounds;\r\n  },\r\n  lookup: function(w) {\r\n    const transaction = this.db.transaction(\"dictionary\", \"readwrite\");\r\n    const objectStore = transaction.objectStore(\"dictionary\");\r\n\r\n    return new Promise((finish) => {\r\n      this.fetchDb(objectStore, w, (result) => {\r\n        if (!result) finish(0);\r\n        finish(result);\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport default Dictionary;","export default [\"och\", \"jag\", \"är\", \"det\", \"i\", \"på\", \"en\", \"att\", \"inte\", \"som\", \"har\", \"med\", \"för\", \"så\", \"till\", \"av\", \"var\", \"ett\", \"the\", \"ska\", \"men\", \"vi\", \"man\", \"om\", \"kan\", \"lite\", \"den\", \"nu\", \"från\", \"när\", \"de\", \"han\", \"mig\", \"bara\", \"eller\", \"min\", \"du\", \"of\", \"kommer\", \"to\", \"ju\", \"vara\", \"skulle\", \"and\", \"får\", \"hade\", \"blir\", \"också\", \"vill\", \"ha\", \"här\", \"idag\", \"is\", \"få\", \"mycket\", \"hon\", \"hur\", \"vad\", \"bli\", \"in\", \"finns\", \"that\", \"a\", \"under\", \"efter\", \"då\", \"alla\", \"mer\", \"göra\", \"bra\", \"fick\", \"blev\", \"måste\", \"varit\", \"helt\", \"kanske\", \"se\", \"vet\", \"än\", \"dem\", \"över\", \"gör\", \"där\", \"två\", \"sedan\", \"nog\", \"sen\", \"sin\", \"mot\", \"mina\", \"även\", \"allt\", \"något\", \"sig\", \"ni\", \"mitt\", \"verkligen\", \"några\", \"denna\", \"själv\", \"hela\", \"detta\", \"dag\", \"tycker\", \"väl\", \"igen\", \"vid\", \"många\", \"någon\", \"går\", \"on\", \"this\", \"be\", \"was\", \"riktigt\", \"innan\", \"tror\", \"faktiskt\", \"dom\", \"honom\", \"aldrig\", \"andra\", \"säger\", \"sverige\", \"it\", \"år\", \"fått\", \"alltid\", \"entry\", \"sina\", \"ändå\", \"kunna\", \"fall\", \"gå\", \"haha\", \"oss\", \"känns\", \"väldigt\", \"for\", \"människor\", \"bilder\", \"hos\", \"igår\", \"hans\", \"utan\", \"ta\", \"redan\", \"will\", \"första\", \"par\", \"snart\", \"säga\", \"not\", \"tid\", \"kunde\", \"god\", \"hemma\", \"dock\", \"liten\", \"at\", \"upp\", \"can\", \"are\", \"varje\", \"ingen\", \"eftersom\", \"as\", \"we\", \"precis\", \"börjar\", \"gjort\", \"genom\", \"sitter\", \"kom\", \"olika\", \"s\", \"behöver\", \"ut\", \"dessa\", \"liv\", \"haft\", \"gick\", \"lika\", \"ser\", \"have\", \"samma\", \"köpa\", \"kul\", \"blogg\", \"gjorde\", \"just\", \"henne\", \"deras\", \"sitt\", \"både\", \"åt\", \"ganska\", \"tre\", \"massa\", \"saker\", \"you\", \"ja\", \"vilket\", \"alltså\", \"dig\", \"skall\", \"dagen\", \"nästan\", \"with\", \"del\", \"typ\", \"bättre\", \"nya\", \"ny\", \"dagar\", \"stor\", \"står\", \"borde\", \"bästa\", \"hem\", \"through\", \"any\", \"imorgon\", \"blivit\", \"mest\", \"mamma\", \"bild\", \"sätt\", \"skriver\", \"vår\", \"ligger\", \"fortfarande\", \"skolan\", \"ens\", \"egentligen\", \"ville\", \"veckan\", \"sa\", \"timmar\", \"alls\", \"komma\", \"mellan\", \"skriva\", \"sista\", \"jobbet\", \"barn\", \"började\", \"din\", \"folk\", \"vecka\", \"läsa\", \"hennes\", \"känner\", \"gärna\", \"stan\", \"börja\", \"follow\", \"ännu\", \"varför\", \"from\", \"rss\", \"posted\", \"bloggen\", \"feed\", \"responses\", \"filed\", \"sjukt\", \"enda\", \"pengar\", \"åka\", \"försöka\", \"lilla\", \"gäller\", \"älskar\", \"ofta\", \"mat\", \"ur\", \"gud\", \"gånger\", \"ute\", \"senaste\", \"but\", \"nästa\", \"sova\", \"bilden\", \"flera\", \"heller\", \"hoppas\", \"ner\", \"foto\", \"lucka\", \"glad\", \"annat\", \"tag\", \"inför\", \"direkt\", \"hel\", \"by\", \"kvällen\", \"äta\", \"våra\", \"guds\", \"dessutom\", \"längre\", \"kr\", \"svenska\", \"sak\", \"tills\", \"tänker\", \"små\", \"brukar\", \"världen\", \"iväg\", \"there\", \"allmänt\", \"såg\", \"tidigare\", \"skönt\", \"svårt\", \"ibland\", \"tog\", \"dags\", \"tillsammans\", \"verkar\", \"israel\", \"helst\", \"stockholm\", \"they\", \"senare\", \"stund\", \"egen\", \"tar\", \"inom\", \"er\", \"alldeles\", \"handlar\", \"gillar\", \"åkte\", \"länge\", \"fler\", \"himla\", \"klockan\", \"kväll\", \"all\", \"tiden\", \"först\", \"vänner\", \"trött\", \"tänkte\", \"istället\", \"one\", \"postat\", \"hitta\", \"fram\", \"stora\", \"sett\", \"ikväll\", \"helgen\", \"kvar\", \"enkelt\", \"jobb\", \"gång\", \"jesus\", \"our\", \"inlägg\", \"nytt\", \"pappa\", \"nej\", \"or\", \"veckor\", \"veta\", \"större\", \"plats\", \"hittar\", \"gått\", \"heter\", \"he\", \"jobba\", \"what\", \"sitta\", \"otroligt\", \"liksom\", \"an\", \"bland\", \"runt\", \"förra\", \"personer\", \"läs\", \"which\", \"johannes\", \"fanns\", \"säkert\", \"köpte\", \"fin\", \"rätt\", \"livet\", \"enligt\", \"skrev\", \"fyra\", \"sånt\", \"ca\", \"samtidigt\", \"skrivit\", \"film\", \"kläder\", \"fast\", \"händer\", \"samt\", \"lång\", \"has\", \"who\", \"o\", \"more\", \"fort\", \"varandra\", \"kronor\", \"kolla\", \"ernst\", \"äntligen\", \"låter\", \"inget\", \"fina\", \"håller\", \"fixa\", \"därför\", \"läser\", \"ditt\", \"satt\", \"annan\", \"sängen\", \"ger\", \"ge\", \"massor\", \"förstår\", \"månader\", \"året\", \"minuter\", \"been\", \"vårt\", \"his\", \"nämligen\", \"their\", \"hjälp\", \"its\", \"tur\", \"datorn\", \"åker\", \"vem\", \"använda\", \"stort\", \"ord\", \"fem\", \"kyrkan\", \"dit\", \"annars\", \"tyckte\", \"ungefär\", \"skrivet\", \"flesta\", \"trots\", \"nöjd\", \"inlägget\", \"landet\", \"kommentarer\", \"land\", \"inga\", \"london\", \"hulda\", \"sån\", \"visar\", \"sida\", \"vanligt\", \"hittade\", \"trodde\", \"klar\", \"sådan\", \"egna\", \"gott\", \"minst\", \"dagarna\", \"frågan\", \"william\", \"visa\", \"vilken\", \"dagens\", \"tänka\", \"so\", \"fortsätta\", \"världens\", \"börjat\", \"tillbaka\", \"frågor\", \"them\", \"vore\", \"usa\", \"familjen\", \"snabbt\", \"person\", \"själva\", \"roligt\", \"hit\", \"menar\", \"bor\", \"osv\", \"försöker\", \"out\", \"framför\", \"vissa\", \"kommit\", \"namn\", \"bloggar\", \"berättar\", \"us\", \"bok\", \"höra\", \"leva\", \"had\", \"php\", \"månad\", \"rum\", \"vilja\", \"would\", \"float:left\", \"overflow:hidden\", \"text-align:center\", \"margin:0\", \"soffan\", \"fb\", \"långt\", \"träffa\", \"vägen\", \"gamla\", \"via\", \"betyder\", \"no\", \"sidan\", \"känna\", \"sommaren\", \"fredag\", \"stod\", \"emot\", \"up\", \"bort\", \"inne\", \"ingenting\", \"people\", \"vidare\", \"gången\", \"persson\", \"va\", \"antal\", \"timme\", \"lär\", \"jätte\", \"natten\", \"do\", \"t\", \"stå\", \"använder\", \"bilderna\", \"prata\", \"tro\", \"givetvis\", \"knappt\", \"time\", \"väntar\", \"barnen\", \"litet\", \"vaknade\", \"berätta\", \"kroppen\", \"förstå\", \"familj\", \"innebär\", \"skor\", \"låta\", \"kvinnor\", \"frukost\", \"hemsida\", \"bör\", \"kände\", \"män\", \"utanför\", \"resten\", \"dess\", \"väg\", \"hålla\", \"vän\", \"skit\", \"jo\", \"lord\", \"göran\", \"helg\", \"sveriges\", \"plugga\", \"when\", \"fråga\", \"tyvärr\", \"kring\", \"blogga\", \"halv\", \"hör\", \"saknar\", \"gammal\", \"me\", \"ej\", \"kärlek\", \"största\", \"european\", \"lever\", \"fel\", \"orkar\", \"sådant\", \"endast\", \"behöva\", \"kändes\", \"undrar\", \"tänkt\", \"dina\", \"möjligt\", \"följa\", \"solen\", \"mindre\", \"than\", \"boken\", \"lätt\", \"sluta\", \"sjuk\", \"your\", \"now\", \"tidigt\", \"medan\", \"huvudet\", \"göteborg\", \"jobbar\", \"were\", \"fint\", \"like\", \"tio\", \"bakom\", \"okategoriserade\", \"herren\", \"människa\", \"my\", \"very\", \"vatten\", \"hjälpa\", \"hår\", \"förstås\", \"anna\", \"sex\", \"trevligt\", \"absolut\", \"träning\", \"fan\", \"tydligen\", \"klart\", \"about\", \"hjärta\", \"åren\", \"kunnat\", \"ringde\", \"någonting\", \"låg\", \"only\", \"eu\", \"puss\", \"någonsin\", \"nyss\", \"svar\", \"lära\", \"new\", \"morgonen\", \"regeringen\", \"middag\", \"vart\", \"sugen\", \"läsare\", \"arbete\", \"vänta\", \"artikel\", \"speciellt\", \"talar\", \"extra\", \"see\", \"säng\", \"go\", \"storlek\", \"problem\", \"anser\", \"spännande\", \"hinner\", \"come\", \"kommentar\", \"church\", \"betala\", \"söndag\", \"titta\", \"svensk\", \"ensam\", \"länder\", \"tagit\", \"over\", \"bilen\", \"följer\", \"visst\", \"miljoner\", \"kostar\", \"tankar\", \"låt\", \"super\", \"visste\", \"sagt\", \"musik\", \"eget\", \"kille\", \"tjej\", \"jönköping\", \"köpt\", \"känsla\", \"information\", \"snygga\", \"lägenheten\", \"mars\", \"fungerar\", \"love\", \"passar\", \"nån\", \"then\", \"funderar\", \"ihop\", \"also\", \"iaf\", \"aftonbladet\", \"way\", \"sade\", \"välja\", \"grejer\", \"köra\", \"september\", \"kompis\", \"nedan\", \"dålig\", \"life\", \"snygg\", \"viktigt\", \"minns\", \"okej\", \"totalt\", \"kl\", \"föräldrar\", \"mår\", \"förbi\", \"kaffe\", \"ena\", \"tt\", \"procent\", \"own\", \"lugn\", \"m\", \"sväng\", \"bussen\", \"text\", \"fullt\", \"vann\", \"lämna\", \"jobbigt\", \"some\", \"före\", \"nåt\", \"igång\", \"måndag\", \"samhället\", \"hunnit\", \"morgon\", \"fortsätter\", \"december\", \"nä\", \"uppger\", \"kropp\", \"grund\", \"förmodligen\", \"lunch\", \"kristus\", \"oktober\", \"sommar\", \"other\", \"ligga\", \"bäst\", \"anledning\", \"maj\", \"knappast\", \"hittat\", \"per\", \"båda\", \"st\", \"lägga\", \"these\", \"world\", \"skull\", \"hänt\", \"behövs\", \"form\", \"läst\", \"fotboll\", \"meritwager\", \"böcker\", \"hört\", \"särskilt\", \"allra\", \"kort\", \"president\", \"europe\", \"valet\", \"sover\", \"juni\", \"polisen\", \"ögon\", \"svenskar\", \"fota\", \"kristenheten\", \"längtar\", \"bush\", \"ifrån\", \"lördag\", \"those\", \"vardag\", \"tala\", \"söt\", \"hämta\", \"dricka\", \"vilka\", \"träna\", \"mattias\", \"johanna\", \"iallafall\", \"uppe\", \"thailand\", \"färg\", \"irak\", \"slutet\", \"läste\", \"poäng\", \"underbar\", \"fängelse\", \"finnas\", \"know\", \"tidningen\", \"kvinna\", \"ihåg\", \"jävla\", \"håret\", \"skapa\", \"spela\", \"mysigt\", \"döda\", \"nere\", \"matchen\", \"magen\", \"trevlig\", \"ordförande\", \"passa\", \"ätit\", \"svara\", \"unga\", \"bl.a.\", \"plötsligt\", \"städa\", \"arafat\", \"tanke\", \"lyssna\", \"bil\", \"äter\", \"dra\", \"viktor\", \"riktig\", \"svt\", \"hihi\", \"full\", \"liknande\", \"thomas\", \"glädje\", \"väntas\", \"kameran\", \"dåligt\", \"handla\", \"början\", \"november\", \"ange\", \"mannen\", \"saken\", \"förresten\", \"jessica\", \"icke\", \"mera\", \"staden\", \"dator\", \"slutar\", \"jusjtjenko\", \"usa:s\", \"must\", \"slutade\", \"åh\", \"lyckades\", \"ovan\", \"premiärminister\", \"april\", \"ifall\", \"ukraina\", \"januari\", \"igenom\", \"day\", \"beror\", \"johansson\", \"arafats\", \"exakt\", \"nilsson\", \"bo\", \"historia\", \"johan\", \"center\", \"f\", \"match\", \"janukovitj\", \"hej\", \"juli\", \"åtta\", \"mormor\", \"elin\", \"dödades\", \"värsta\", \"sådär\", \"uppgifter\", \"förutom\", \"hus\", \"filmen\", \"malmö\", \"rapporterar\", \"tips\", \"seger\", \"ordet\", \"ella\", \"underbart\", \"hatar\", \"följande\", \"energi\", \"nå\", \"falluja\", \"delen\", \"much\", \"peter\", \"stanna\", \"borta\", \"strax\", \"andersson\", \"nätet\", \"mål\", \"pratade\", \"things\", \"sådana\", \"kör\", \"tjejer\", \"tredje\", \"samband\", \"oftast\", \"intressant\", \"nio\", \"tänk\", \"morse\", \"kyrka\", \"skadades\", \"rädd\", \"ringa\", \"väljer\", \"meter\", \"slut\", \"hinna\", \"års\", \"hög\", \"saknas\", \"daniel\", \"moderskeppet\", \"reuters\", \"kompisar\", \"gymmet\", \"augusti\", \"jonas\", \"stöd\", \"folket\", \"vinna\", \"lars\", \"svarta\", \"jul\", \"sov\", \"because\", \"rolig\", \"önskar\", \"publik\", \"politik\", \"eriksson\", \"svd\", \"södra\", \"should\", \"landets\", \"någonstans\", \"tvungen\", \"räcker\", \"soldater\", \"anders\", \"make\", \"suttit\", \"nyhetsbyrån\", \"miljarder\", \"frågade\", \"kina\", \"ledde\", \"nått\", \"presidentvalet\", \"tittar\", \"delar\", \"afp\", \"regering\", \"most\", \"svart\", \"syster\", \"sju\", \"into\", \"karlsson\", \"illa\", \"kräver\", \"binta\", \"sjukhus\", \"funkar\", \"träffade\", \"eu:s\", \"jäkla\", \"kristna\", \"phuket\", \"here\", \"how\", \"förhoppningsvis\", \"förut\", \"beslut\", \"drygt\", \"danmark\", \"kerry\", \"somnade\", \"slag\", \"proc\", \"sant\", \"ytterligare\", \"fredrik\", \"björn\", \"gav\", \"värre\", \"mikael\", \"sidor\", \"cirka\", \"tyskland\", \"lägenhet\", \"laget\", \"köper\", \"auto\", \"klara\", \"stefan\", \"sävehof\", \"ont\", \"media\", \"natt\", \"goda\", \"frankrike\", \"torsdag\", \"t.ex.\", \"spelare\", \"design\", \"slipper\", \"död\", \"sent\", \"ud\", \"if\", \"could\", \"pratar\", \"köket\", \"kommande\", \"svt:s\", \"tweet\", \"kollade\", \"rosa\", \"värt\", \"hittades\", \"title=\", \"behövde\", \"fn:s\", \"lyckats\", \"exempel\", \"yassir\", \"stället\", \"hammarby\", \"him\", \"antalet\", \"present\", \"området\", \"li\", \"höll\", \"list-style:none\", \"socialbuttonnav\", \"the_title\", \"dömdes\", \"line-height:30px\", \"width:90\", \"border:none\", \"width:65px\", \"förslag\", \"margin-right:2px\", \"padding:0\", \"misstänks\", \"segern\", \"text-align\", \"möte\", \"height:80px\", \"the_permalink\", \"john\", \"iframe\", \"background:none\", \"ul\", \"spelade\", \"amerikanska\", \"kl.\", \"chans\", \"sri\", \"princip\", \"promenad\", \"hif\", \"hittills\", \"olsson\", \"anställda\", \"gäng\", \"ukrainas\", \"överallt\", \"misstänkt\", \"vanlig\", \"lag\", \"företag\", \"myndigheterna\", \"tillbaks\", \"magnus\", \"nära\", \"greps\", \"idé\", \"naturligtvis\", \"jeans\", \"hända\", \"besök\", \"somna\", \"good\", \"finland\", \"anhöriga\", \"talesman\", \"äldre\", \"sätta\", \"larsson\", \"place\", \"säsongen\", \"flytta\", \"lanka\", \"norge\", \"artikeln\", \"tränare\", \"kallar\", \"varmt\", \"värld\", \"matcher\", \"tycka\", \"tittade\", \"tycks\", \"leder\", \"hanna\", \"polis\", \"årets\", \"where\", \"vanliga\", \"därmed\", \"fundera\", \"springa\", \"kiev\", \"berättade\", \"turkiet\", \"fira\", \"klubben\", \"klicka\", \"lagom\", \"martin\", \"bagdad\", \"dotter\", \"möjlighet\", \"ishockey\", \"nation\", \"sist\", \"stycken\", \"brott\", \"khao\", \"färger\", \"hoppa\", \"internet\", \"känslor\", \"slags\", \"såhär\", \"jorden\", \"vm\", \"david\", \"favorit\", \"era\", \"skola\", \"grej\", \"lak\", \"stil\", \"galet\", \"europa\", \"being\", \"mordet\", \"säker\", \"jai\", \"arg\", \"afrika\", \"paris\", \"vågar\", \"fn\", \"expressen\", \"tingsrätt\", \"självklart\", \"uppges\", \"nikon\", \"dn\", \"hävdar\", \"uppgav\", \"söta\", \"onsdag\", \"spelar\", \"meddelade\", \"hand\", \"say\", \"tröja\", \"lyckas\", \"skadade\", \"kallt\", \"mission\", \"fjol\", \"utrikesminister\", \"tillräckligt\", \"ryssland\", \"ledig\", \"lugnt\", \"slog\", \"allting\", \"mord\", \"konstigt\", \"george\", \"förklara\", \"åsikter\", \"förbundskapten\", \"ställe\", \"ekot\", \"ordentligt\", \"oklart\", \"said\", \"männen\", \"utredning\", \"tusen\", \"e\", \"förslaget\", \"ögonen\", \"hösten\", \"skador\", \"imorse\", \"vädret\", \"sörenstam\", \"work\", \"dödats\", \"duktig\", \"njuta\", \"varm\", \"norrköping\", \"hjälper\", \"rösterna\", \"sker\", \"even\", \"beslutet\", \"inträffade\", \"försökte\", \"parlamentet\", \"mesta\", \"son\", \"grupp\", \"issue\", \"tros\", \"minsann\", \"chef\", \"slippa\", \"nåja\", \"spel\", \"enbart\", \"hårt\", \"bad\", \"norra\", \"tack\", \"presidenten\", \"innehåller\", \"kamera\", \"ljus\", \"omkom\", \"her\", \"röst\", \"iran\", \"palestinske\", \"huset\", \"ökar\", \"need\", \"saknade\", \"nummer\", \"partiet\", \"rösta\", \"drar\", \"os\", \"länk\", \"ledning\", \"politiker\", \"byta\", \"röster\", \"staten\", \"em\", \"paul\", \"tv\", \"cup\", \"stark\", \"ledaren\", \"palestinska\", \"riksdagen\", \"lät\", \"vård\", \"vunnit\", \"regeringens\", \"inser\", \"klänning\", \"snö\", \"fjärde\", \"bygga\", \"utländska\", \"väder\", \"gratis\", \"medlemmar\", \"kutjma\", \"krav\", \"träningen\", \"framåt\", \"skicka\", \"kvinnan\", \"grader\", \"erik\", \"högre\", \"tåget\", \"hörde\", \"dagbladet\", \"varken\", \"elva\", \"bit\", \"edsbyn\", \"svarar\", \"kommuner\", \"beställa\", \"sällan\", \"prova\", \"freivalds\", \"glass\", \"däremot\", \"skövde\", \"helena\", \"lagen\", \"dö\", \"sandviken\", \"ledsen\", \"centrala\", \"velat\", \"less\", \"outfit\", \"krävs\", \"down\", \"ledare\", \"debatten\", \"våren\", \"sällskap\", \"södertälje\", \"texten\", \"val\", \"canon\", \"pres@live.se\", \"söndagen\", \"omkommit\", \"hände\", \"viss\", \"pass\", \"kalla\", \"sköt\", \"levande\", \"uppgift\", \"ökat\", \"grovt\", \"högsta\", \"rätten\", \"rapport\", \"omkring\", \"godis\", \"sömn\", \"mijailovic\", \"antingen\", \"amerikansk\", \"before\", \"sport\", \"finalen\", \"klarar\", \"jansson\", \"körde\", \"robert\", \"oppositionen\", \"h&m\", \"lämnar\", \"såklart\", \"söka\", \"långa\", \"drabbats\", \"michael\", \"nyheter\", \"dog\", \"oerhört\", \"franska\", \"might\", \"final\", \"part\", \"vice\", \"arbeta\", \"fördes\", \"undersökning\", \"rummet\", \"ingemar\", \"straff\", \"jan\", \"rättegången\", \"sämre\", \"indien\", \"varav\", \"målet\", \"tummarna\", \"riskerar\", \"dollar\", \"photoshop\", \"advokat\", \"ringer\", \"tanken\", \"övriga\", \"bilar\", \"emma\", \"j\", \"going\", \"katastrofen\", \"februari\", \"åklagaren\", \"kraft\", \"förlorade\", \"paket\", \"skapar\", \"samarbete\", \"östra\", \"vars\", \"läkare\", \"känslan\", \"antagligen\", \"plannja\", \"främst\", \"sol\", \"uppdrag\", \"semester\", \"ombord\", \"bror\", \"union\", \"poliser\", \"personal\", \"djurgården\", \"tävling\", \"satte\", \"vackra\", \"skåne\", \"same\", \"produkter\", \"våld\", \"myndigheter\", \"syns\", \"back\", \"shall\", \"testa\", \"patrik\", \"månaden\", \"besked\", \"visade\", \"somras\", \"gisslan\", \"tillstånd\", \"solna\", \"förr\", \"blair\", \"handlade\", \"troligen\", \"ledningen\", \"kallas\", \"säsong\", \"henrik\", \"roliga\", \"guif\", \"rubriken\", \"länderna\", \"made\", \"öka\", \"anhängare\", \"fritt\", \"leo\", \"abbas\", \"tolv\", \"samhälle\", \"drabbade\", \"ljungberg\", \"domen\", \"försvaret\", \"beroende\", \"killar\", \"hann\", \"västerås\", \"mötet\", \"dör\", \"choklad\", \"tvåa\", \"arbetar\", \"parti\", \"lättare\", \"inspiration\", \"fri\", \"fika\", \"fredags\", \"eftermiddag\", \"stockholms\", \"omfattande\", \"asylsökande\", \"kontakt\", \"omgången\", \"redo\", \"enhet\", \"jannica\", \"svarade\", \"ingår\", \"verkligheten\", \"jonsson\", \"something\", \"spirit\", \"stad\", \"dödade\", \"frisk\", \"femte\", \"ung\", \"misstänkta\", \"aning\", \"iraks\", \"maria\", \"passade\", \"höst\", \"norr\", \"vita\", \"roll\", \"å\", \"väska\", \"irakiska\", \"rakt\", \"hittats\", \"resultatet\", \"power\", \"beslutat\", \"underbara\", \"numera\", \"anses\", \"förlust\", \"halvlek\", \"death\", \"föll\", \"really\", \"presskonferens\", \"närmare\", \"powell\", \"such\", \"stolt\", \"svensson\", \"humör\", \"nyligen\", \"mail\", \"gruppen\", \"ångest\", \"domstol\", \"sovit\", \"sättet\", \"synd\", \"närmaste\", \"valde\", \"håll\", \"maten\", \"pengarna\", \"lycklig\", \"röstade\", \"träffat\", \"söker\", \"räknar\", \"antar\", \"hotar\", \"valt\", \"morden\", \"mats\", \"kristi\", \"rad\", \"tråkigt\", \"skön\", \"dagis\", \"verksamhet\", \"torsdagen\", \"intresserad\", \"resenärer\", \"konstaterar\", \"kram\", \"minskar\", \"get\", \"bestämde\", \"leda\", \"kritik\", \"bredvid\", \"tingsrätten\", \"företaget\", \"avgörande\", \"helsingborgs\", \"risken\", \"bryr\", \"domstolen\", \"uppgifterna\", \"sweden\", \"martinson\", \"migrationsverket\", \"andreas\", \"uppsala\", \"misshandel\", \"besegrade\", \"trivs\", \"kär\", \"beräknas\", \"platser\", \"försökt\", \"personen\", \"lördagen\", \"want\", \"dörren\", \"tomas\", \"orsakade\", \"hjärtat\", \"dömts\", \"tags\", \"svenskarna\", \"perfekt\", \"västbanken\", \"lista\", \"joakim\", \"insåg\", \"laila\", \"klass\", \"putin\", \"rent\", \"marcus\", \"important\", \"för-\", \"dl\", \"helén\", \"fest\", \"allafall\", \"tusentals\", \"halva\", \"two\", \"dött\", \"does\", \"majoritet\", \"raka\", \"ansvar\", \"beslutade\", \"politiska\", \"tony\", \"förre\", \"lust\", \"inatt\", \"utredningen\", \"snarare\", \"allvarligt\", \"vd\", \"pris\", \"ungdomar\", \"ekblad\", \"trollhättan\", \"toppen\", \"förhandlingar\", \"vit\", \"ohly\", \"ohio\", \"august\", \"hd\", \"statsminister\", \"göras\", \"carlsson\", \"viktig\", \"start\", \"google\", \"extremt\", \"woods\", \"christ\", \"notiser\", \"mitten\", \"take\", \"too\", \"fortsatte\", \"upon\", \"makt\", \"åtminstone\", \"höga\", \"last\", \"allvar\", \"every\", \"jämfört\", \"respektive\", \"resa\", \"pga\", \"nations\", \"grupper\", \"motala\", \"lillebror\", \"möter\", \"därifrån\", \"siffror\", \"many\", \"miljon\", \"lärt\", \"passagerare\", \"between\", \"härlig\", \"minister\", \"indonesien\", \"minska\", \"elfenbenskusten\", \"york\", \"tidningar\", \"resultat\", \"hörs\", \"varenda\", \"herrens\", \"sjukhuset\", \"sara\", \"ren\", \"premiärministern\", \"jerusalem\", \"lämnade\", \"användas\", \"glory\", \"both\", \"basket\", \"veckorna\", \"högt\", \"flodvågorna\", \"tommy\", \"ladda\", \"krävde\", \"tävlingen\", \"avled\", \"bengtsson\", \"fallet\", \"hundra\", \"halsen\", \"egypten\", \"political\", \"sekunder\", \"intresse\", \"bushs\", \"cm\", \"inledde\", \"foton\", \"valfusk\", \"hälften\", \"snyggt\", \"sundsvall\", \"orsaken\", \"annika\", \"video\", \"försvinner\", \"kunder\", \"koll\", \"madrid\", \"tidning\", \"leonid\", \"fattar\", \"sydostasien\", \"tisdag\", \"hopp\", \"tvingades\", \"regler\", \"betydligt\", \"spanien\", \"ändra\", \"pressmeddelande\", \"jews\", \"arbetet\", \"sprang\", \"danska\", \"älska\", \"stoppa\", \"washington\", \"mys\", \"glada\", \"mil\", \"vattnet\", \"jonathan\", \"bloggare\", \"hållas\", \"medlem\", \"utomlands\", \"listan\", \"arlanda\", \"jaja\", \"grov\", \"elitserien\", \"falun\", \"flickan\", \"end\", \"faktist\", \"inleddes\", \"planerat\", \"tvingas\", \"stranden\", \"shopping\", \"linköping\", \"planer\", \"björkman\", \"annorlunda\", \"roligare\", \"nådde\", \"motsvarande\", \"håkan\", \"minsta\", \"ön\", \"kandidat\", \"eftermiddagen\", \"platsen\", \"skillnad\", \"saab\", \"ifk\", \"afghanistan\", \"filmer\", \"christian\", \"steg\", \"turister\", \"pågår\", \"framförallt\", \"till-\", \"program\", \"vacker\", \"ansåg\", \"laga\", \"party\", \"åtalas\", \"lillhage\", \"hellre\", \"onsdagen\", \"åkt\", \"lov\", \"nye\", \"vin\", \"kontroll\", \"bär\", \"åter\", \"spiderman\", \"spelarna\", \"ryggen\", \"må\", \"thing\", \"planen\", \"lyssnar\", \"drabbades\", \"ledande\", \"vintern\", \"utbildning\", \"ske\", \"situation\", \"australien\", \"debatt\", \"försvann\", \"bodström\", \"församlingen\", \"sälja\", \"olyckan\", \"ekonomiska\", \"mej\", \"avtal\", \"vaknar\", \"lämnat\", \"priset\", \"artiklar\", \"diskutera\", \"namnet\", \"ton\", \"vitt\", \"kraftigt\", \"kollar\", \"huvudstaden\", \"buddy\", \"ap\", \"utveckling\", \"viktiga\", \"reinfeldt\", \"områden\", \"plus\", \"gett\", \"dec\", \"läget\", \"situationen\", \"tyska\", \"dels\", \"ersättning\", \"framtiden\", \"skogen\", \"människan\", \"delta\", \"gustafsson\", \"israels\", \"issues\", \"radio\", \"utav\", \"söndags\", \"våras\", \"kyrkor\", \"studie\", \"verkade\", \"landslaget\", \"hamnar\", \"säpo\", \"rebeller\", \"tal\", \"sk\", \"great\", \"schyman\", \"mysig\", \"hälsa\", \"omkomna\", \"jobbat\", \"mor\", \"styrelsen\", \"darfur\", \"packa\", \"röda\", \"dusch\", \"livstids\", \"jessika\", \"skäl\", \"såna\", \"far\", \"baryard\", \"omöjligt\", \"villa\", \"give\", \"anklagas\", \"utifrån\", \"släpptes\", \"himlen\", \"ockelbo\", \"elfsborg\", \"italien\", \"finner\", \"risk\", \"tillhör\", \"färre\", \"ansiktet\", \"hovrätten\", \"regerande\", \"live\", \"palestinier\", \"jävligt\", \"pierre\", \"seen\", \"brittiska\", \"ande\", \"talade\", \"utsatts\", \"säljer\", \"dagbok\", \"dömas\", \"rather\", \"avgående\"];","<script lang=\"ts\">\r\n  import { currentWord, queryWord } from './global.js';\r\n  import Navigate from \"./router\";\r\n  import Dictionary from \"./dictionary\";\r\n\r\n\t//const params = useParams();\r\n\r\n  let word: string | -1 = -1;\r\n  let compound = [];\r\n  let queryInput;\r\n  let query = \"\";\r\n\r\n  let definition: 0 | {\r\n    word: string,\r\n    def: Array<{\r\n      t: string, // type\r\n      s: Array<{  // senses\r\n        e?: Array<{\r\n          text: string,\r\n          english: string\r\n        }>,\r\n        r?: string[]\r\n      }>;\r\n    }>,\r\n    etymology: string | null\r\n  } = 0;\r\n\r\n  function searchWord(w) {\r\n    queryWord.set(w);\r\n  }\r\n\r\n  currentWord.subscribe(async value => {\r\n\t\tword = (value as -1 | string);\r\n    if (word && word != -1) {\r\n      const _def = await Dictionary.lookup(word); \r\n      if (!_def) {\r\n        compound = Dictionary.getCompound(word);\r\n        definition = 0;\r\n      } else {\r\n        compound = [];\r\n        definition = _def;\r\n      }\r\n    } else {\r\n      word = -1;\r\n    }\r\n\t});\r\n\r\n  function openDictionary() {\r\n    window.open(`https://svenska.se/tre/?sok=${word}`, '_blank');\r\n  }\r\n</script>\r\n\r\n<main id=\"main\">\r\n  {#if word != -1}\r\n    <div id=\"wrap\">\r\n      <div id=\"ww\">\r\n        <div id=\"header\">\r\n          <div id=\"word-wrap\">\r\n            <div id=\"word\">{word}</div>\r\n          </div>\r\n          <div style=\"width: 130px;\"><button id=\"external\" on:click={() => openDictionary()}>Slå upp</button></div>\r\n        </div>\r\n        {#if definition != 0}\r\n          {#each definition.def as defEntry}\r\n            <div id=\"def-wrap\" class=\"wrap\">\r\n              {Dictionary.getTypeName(defEntry.t)}\r\n              <hr>\r\n              {#each defEntry.s as def}\r\n                <div id=\"definition\">\r\n                  {#each def.r as gloss}\r\n                    <div id=\"translation\">\r\n                      {gloss}\r\n                    </div>\r\n                  {/each}\r\n                  {#if def.e}\r\n                    <details>\r\n                      <summary>exempel</summary>\r\n                      {#each def.e as ex}\r\n                        <span id=\"dot\">•</span>\r\n                        <div id=\"example\">\r\n                          <div>{ex.text}</div>\r\n                          <div style=\"color: var(--main-dark)\">{ex.english || \"\"}</div>\r\n                        </div>\r\n                      {/each}\r\n                    </details>\r\n                  {/if}\r\n                </div>\r\n              {/each}\r\n            </div>\r\n          {/each}\r\n          {#if definition.etymology}\r\n            <details id=\"ety-wrap\" class=\"wrap\">\r\n              <summary>historik</summary>\r\n              <div id=\"etymology\">\r\n                {definition.etymology}\r\n              </div>\r\n            </details>\r\n          {/if}\r\n          <button id=\"ex-btn\" on:click={() => searchWord(word)}>Se exempel</button>\r\n        {:else if !compound.length}\r\n          <div id=\"missing\">\r\n            <button style=\"position: absolute; top: 113px;\" id=\"ex-btn\" on:click={() => searchWord(word)}>Se exempel</button>\r\n            <div style=\"margin: auto; padding: 20px;\">text saknas</div>\r\n          </div>\r\n        {:else}\r\n          {#each compound as c_word}\r\n            <div id=\"compound\" on:click={() => currentWord.set(c_word)}>{c_word}</div>\r\n          {/each}\r\n          <button id=\"ex-btn\" on:click={() => searchWord(word)}>Se exempel</button>\r\n        {/if}\r\n      </div>\r\n    </div>\r\n  {:else}\r\n    <div id=\"wrap\" class=\"fake\">\r\n      <div id=\"ww\">\r\n        <div id=\"header\">\r\n          <div style=\"display: flex;\"></div>\r\n          <div style=\"flex: 1;\"><button id=\"external\">Slå upp</button></div>\r\n        </div>\r\n        <div id=\"def-wrap\" class=\"wrap\"></div>\r\n        <div id=\"ety-wrap\" class=\"wrap\"></div>\r\n        <button id=\"ex-btn\">Se exempel</button>\r\n      </div>\r\n    </div>\r\n  {/if}\r\n</main>\r\n\r\n<style>\r\n  #word-wrap {\r\n    display: flex; \r\n    flex: 1;\r\n    text-align: left;\r\n  }\r\n  #ex-btn {\r\n    margin-left: 5px;\r\n  }\r\n  .fake button {\r\n    cursor: default;\r\n    color: var(--main-bg-second);\r\n  }\r\n  .fake button:focus {\r\n    background-color: var(--main-bg-second) !important;\r\n  }\r\n  .fake #def-wrap {\r\n    height: 200px;\r\n  }\r\n  .fake #ety-wrap {\r\n    height: 50px;\r\n  }\r\n  #compound {\r\n    padding: 20px;\r\n    margin: 5px;\r\n    border-radius: 6px;\r\n    font-size: 30px;\r\n    background-color: var(--main-bg-second);\r\n    font-family: 'Comfortaa', cursive;\r\n    cursor: pointer;\r\n    font-weight: 700;\r\n    transition: 0.1s background-color ease-in;\r\n  }\r\n  #compound:hover {\r\n    background-color: var(--main-complement);\r\n  }\r\n  #ww {\r\n    height: 100%;\r\n    overflow: auto;\r\n  }\r\n  #missing {\r\n    width: 100%;\r\n    height: 80%;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  #missing div {\r\n    font-size: 50px;\r\n    color: var(--main-complement);\r\n    font-family: 'Comfortaa', cursive;\r\n    font-weight: 700;\r\n  }\r\n  #main {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: var(--main-dark);\r\n    display: flex;\r\n  }\r\n  .wrap {\r\n    padding: 5px 10px;\r\n    margin: 5px;\r\n    border-radius: 5px;\r\n    background-color: var(--main-bg-second);\r\n  }\r\n  #etymology {\r\n    padding-left: 21px;\r\n  }\r\n  #dot {\r\n    position: absolute; \r\n    font-size: 25px; \r\n    margin-left: 12px;\r\n  }\r\n  details {\r\n    position: relative;\r\n  }\r\n  details[open] summary {\r\n    margin-bottom: 5px;\r\n  }\r\n  #header {\r\n    display: flex;\r\n    padding: 5px;\r\n  }\r\n  #external {\r\n    float: right;\r\n  }\r\n  #wrap {\r\n    max-height: 90vh;\r\n    background-color: var(--main-bg-color);\r\n    border-radius: 8px;\r\n    padding: 5px;\r\n    min-width: 300px;\r\n    width: 100%;\r\n    margin: 50px;\r\n  }\r\n  #def-wrap {\r\n    overflow: auto;\r\n  }\r\n  #definition:not(:last-child) {\r\n    \r\n  }\r\n  #translation {\r\n    font-weight: bold;\r\n  }\r\n  #example {\r\n    border: solid 1px var(--main-dark);\r\n    padding: 5px;\r\n    padding-left: 27px;\r\n    border-radius: 5px;\r\n  }\r\n  #example:not(:last-child) {\r\n    margin-bottom: 5px;\r\n  }\r\n  #wrap {\r\n    text-align: left;\r\n  }\r\n  #word {\r\n    margin: auto 0;\r\n    font-size: 30px;\r\n    font-family: 'Comfortaa', cursive;\r\n    padding-left: 3px;\r\n    white-space: nowrap;\r\n    overflow: auto;\r\n  }\r\n  #word::-webkit-scrollbar {\r\n    height: 5px;\r\n  }\r\n\r\n  #word::-webkit-scrollbar-track {\r\n    background: var(--main-bg-second); \r\n  }\r\n\r\n  #word::-webkit-scrollbar-thumb {\r\n    border-radius: 40px;\r\n    background: var(--main-complement); \r\n  }\r\n\r\n  #word::-webkit-scrollbar-thumb:hover {\r\n    background: var(--main-vivid); \r\n  }\r\n</style>","<script lang=\"ts\">\r\n  export let value, max;\r\n</script>\r\n\r\n<input bind:value type=\"range\" min=0 max={max} class=\"slider\">\r\n\r\n<style>\r\n.slider {\r\n  -webkit-appearance: none;\r\n  width: 100%;\r\n  height: 5px;\r\n  border-radius: 400px;\r\n  background: var(--main-vivid);\r\n  outline: none;\r\n  opacity: 0.8;\r\n  transition: opacity .2s ease-out;\r\n}\r\n\r\n.slider:hover {\r\n  opacity: 1;\r\n}\r\n\r\n.slider::-webkit-slider-thumb {\r\n  border-radius: 400px;\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  width: 25px;\r\n  height: 25px;\r\n  background: var(--main-vivid-dark);\r\n  cursor: pointer;\r\n}\r\n\r\n.slider::-moz-range-thumb {\r\n  border-radius: 400px;\r\n  width: 25px;\r\n  height: 25px;\r\n  background: var(--main-vivid-dark);\r\n  cursor: pointer;\r\n}\r\n</style>","<script lang=\"ts\">\r\n\t//export let onactive;\r\n\tconst MAX_WORD_INDEX = 2000;\r\n\r\n\timport Results from \"./components/Results.svelte\";\r\n\timport Slider from \"./components/Slider.svelte\";\r\n\timport Dictionary from \"./dictionary\";\r\n\t\r\n\t//import type { resArray, WorkerResult } from \"./worker\";\r\n\timport Navigate from \"./router\";\r\n\r\n\tlet editing = -1;\r\n\tlet value;\r\n\tlet toFilter = MAX_WORD_INDEX;\r\n\tlet words = [];\r\n\tconst pCL = 'a-zA-ZáàâäãåçéèêëíìîïñóòôöõúùûüýÿæœÁÀÂÄÃÅÇÉÈÊËÍÌÎÏÑÓÒÔÖÕÚÙÛÜÝŸÆŒ';\r\n\tconst reg = new RegExp(`(^[^${pCL}]*)|([^${pCL}]*$)`, \"g\");\r\n\r\n\tfunction cleanWord(w: string) {\r\n\t\tlet clean = w.replace(reg, \"\");\r\n\t\treturn clean;\r\n\t}\r\n\r\n\tfunction saveList() {\r\n\t\tNavigate.goto(\"wordlist\", {\r\n\t\t\tlist: words.filter(x => x[1] != \"\").map(x => x[1]).join(\",\")\r\n\t\t} as any);\r\n\t}\r\n\r\n\tfunction handleFormat() {\r\n\t\tlet filterList = Dictionary.mostCommon.slice(0, toFilter);\r\n\t\tif (!value || value == \"\") return;\r\n\t\tlet unique = [];\r\n\t\twords = [];\r\n\r\n\t\tconst a = value.split(/[\\s]+/);\r\n\t\ta.forEach(x => {\r\n\t\t\tconst raw = x.trim();\r\n\t\t\tif (raw != \"\" && raw.length > 1 && raw.length < 30) {\r\n\t\t\t\tlet _b = cleanWord(raw);\r\n\t\t\t\tlet b = _b.toLowerCase();\r\n\r\n\t\t\t\tif (b != \"\" && b.length > 1 && filterList.indexOf(b) == -1) {\r\n\t\t\t\t\tlet stem = Dictionary.getLemma(b);\r\n\t\t\t\t\tif (unique.indexOf(stem) == -1 && filterList.indexOf(stem) == -1) {\r\n\t\t\t\t\t\tunique.push(stem);\r\n\t\t\t\t\t\twords.push([_b, stem]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\twords = words;\r\n\t}\r\n\r\n\tinterface sentenceObject {\r\n\t\t_id: string,\r\n\t\ttitle: string,\r\n\t\tcontent: string[],\r\n\t\tlemma: string[]\r\n\t}\r\n</script>\r\n\r\n<main>\r\n\t<form on:submit|preventDefault={() => { }} id=\"form\" autocomplete=\"off\">\r\n\t\t<div id=\"form-wrap\">\r\n\t\t\t<div id=\"control-wrap\">\r\n\t\t\t\t<button id=\"format\" on:click={() => {handleFormat()}}>\r\n\t\t\t\t\tskapa lista\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</form>\r\n\t<div id=\"div\">\r\n\t\t<textarea id=\"input\" bind:value></textarea>\r\n\t\t<div id=\"words\">\r\n\t\t\t<div id=\"controls\">\r\n\t\t\t\t<div id=\"filtertext\">ta bort # vanligaste ord:</div>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"filter\">\r\n\t\t\t\t<input id=\"fin\" type=number bind:value={toFilter} min=0 max={MAX_WORD_INDEX}>\r\n\t\t\t\t<div id=\"sin\"><Slider bind:value={toFilter} max={MAX_WORD_INDEX} /></div>\r\n\t\t\t</div>\r\n\t\t\t{#if words.length}\r\n\t\t\t\t<div id=\"filtertext\">{words.length} ord</div>\r\n\t\t\t\t{#each words as word, i}\r\n\t\t\t\t\t<div id=\"word\">\r\n\t\t\t\t\t\t{#if editing == i}\r\n\t\t\t\t\t\t\t<form on:submit|preventDefault={() => { editing = -1 }}><input id=\"input\" bind:value={word[1]}></form>\r\n\t\t\t\t\t\t{:else}\r\n\t\t\t\t\t\t\t{word[1]} \r\n\t\t\t\t\t\t\t{#if (word[0] != word[1] && word[0] != \"\")}\r\n\t\t\t\t\t\t\t\t({word[0]})\r\n\t\t\t\t\t\t\t{/if}\r\n\t\t\t\t\t\t{/if}\r\n\t\t\t\t\t\t<span on:click={() => {editing = i}} id=\"editbtn\" class=\"btn material-symbols-outlined\">\r\n\t\t\t\t\t\t\tedit\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span on:click={() => {words.splice(i, 1); words = words;}} id=\"closebtn\" class=\"btn material-symbols-outlined\">\r\n\t\t\t\t\t\t\tclose\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t{/each}\r\n\t\t\t\t<span on:click={() => {words.push([\"\", \"\"]); words = words;}} id=\"addmark\" class=\"material-symbols-outlined\">\r\n\t\t\t\t\tadd\r\n\t\t\t\t</span>\r\n\t\t\t\t<button style=\"margin-top: 10px;\" on:click={() => {saveList()}}>\r\n\t\t\t\t\tspara\r\n\t\t\t\t</button>\r\n\t\t\t{/if}\r\n\t\t</div>\r\n\t</div>\r\n</main>\r\n\r\n<style>\r\n\t#addmark {\r\n\t\tmargin: 0 auto;\r\n    height: 30px;\r\n    width: 30px;\r\n    border-radius: 100px;\r\n    cursor: pointer;\r\n    background-color: var(--main-bg-color);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\t}\r\n\t#controls {\r\n\t\tbackground-color: var(--main-bg-second);\r\n    padding: 0px 10px;\r\n    border-radius: 5px;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n    align-items: center;\r\n\t\theight: 50px;\r\n\t}\r\n\t#control-wrap {\r\n\t\tdisplay: flex;\r\n    align-items: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\t#input {\r\n\t\tcursor: text;\r\n\t}\r\n\t.btn {\r\n\t\tcursor: pointer;\r\n\t\tmargin-left: 5px;\r\n\t}\r\n\t#filtertext {\r\n\t\tfont-family: 'Comfortaa', cursive;\r\n\t\tfont-weight: 700;\r\n\t\tpadding: 10px;\r\n\t}\r\n\t#filter { \r\n\t\tmin-width: 200px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tborder-radius: 5px;\r\n\t}\r\n\t#filter input:global() {\r\n\t\tbackground-color: var(--main-bg-second);\r\n\t\theight: 40px;\r\n\t\tmargin-left: 0px;\r\n\t\tborder-radius: 4px;\r\n\t\tflex: 0;\r\n\t}\r\n\t#sin {\r\n\t\tpadding: 0 10px;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tdisplay: flex;\r\n\t\tbackground-color: var(--main-bg-color);\r\n\t\theight: 40px;\r\n\t\tborder-radius: 4px;\r\n    flex: 1;\r\n\t}\r\n\t#word {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 5px;\r\n\t\tbackground-color: var(--main-bg-second);\r\n\t\tborder-radius: 5px;\r\n\t\theight: 35px;\r\n\t}\r\n\t#word form {\r\n\t\tflex: 1;\r\n\t}\r\n\t#word input {\r\n\t\twidth: 100%;\r\n\t\tmargin: 0px;\r\n\t\theight: 35px;\r\n\t}\r\n\tinput { \r\n\t\tcursor: pointer;\r\n\t\tmargin: 6px;\r\n\t\tbackground-color: var(--main-bg-color);\r\n\t}\r\n\t#format {\r\n\t\theight: 50px;\r\n\t}\r\n\t#words {\r\n\t\tflex-direction: column;\r\n\t\tmin-width: 300px;\r\n\t\toverflow: auto;\r\n\t\tmargin: 15px;\r\n\t\tmargin-left: 0px;\r\n\t}\r\n\t#words::-webkit-scrollbar-track {\r\n    border-radius: 100px;\r\n  }\r\n\t#div {\r\n\t\tdisplay: flex;\r\n\t\theight: calc(100vh - 130px);\r\n\t}\r\n\ttextarea {\r\n\t\tresize: none;\r\n\t\tbackground-color: var(--main-bg-second);\r\n\t\tborder-radius: 7px;\r\n\t}\r\n\t#input {\r\n\t\tmargin: 15px;\r\n\t\tflex: 1;\r\n\t}\r\n\t@keyframes upDown {\r\n\t\tto { transform: translatey(100px);}\r\n\t}\r\n\tmain {\r\n\t\theight: 100%;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\toverflow: hidden;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n</style>","<script lang=\"ts\">\r\n\timport { onMount } from \"svelte\";\r\n\r\n\timport Results from \"./components/Results.svelte\";\r\n\timport Navigate from \"./router\";\r\n\t\r\n\texport let onactive;\r\n\t\r\n\t//import type { resArray, WorkerResult } from \"./worker\";\r\n\t//import { webWorker } from \"./worker\";\r\n\r\n\tinterface sentenceObject {\r\n\t\t_id: string,\r\n\t\ttitle: string,\r\n\t\tcontent: string[],\r\n\t\tlemma: string[]\r\n\t}\r\n\r\n  let init = 0;\r\n\tlet results: Array<sentenceObject> = [];\r\n\t\r\n\tonactive.callback = () => {\r\n\t\tresults = [];\r\n\r\n\t\tconst pinned = window.localStorage.getItem(\"pinned-id\");\r\n\r\n    if (pinned) {\r\n      let list = pinned.split(\",\");\r\n      list.forEach((id) => {\r\n        const sent = window.localStorage.getItem(id);\r\n        if (!sent) console.error(\"Issue reading saved sentences!\");\r\n        results.push(JSON.parse(sent));\r\n      });\r\n      results = results;\r\n    }\r\n\r\n    init = 1;\r\n\t}\r\n\r\n\tonMount(() => {\r\n\t\tonactive.callback();\r\n\t});\r\n</script>\r\n\r\n<main>\r\n  <div id=\"header\"></div>\r\n\t{#if !results.length && init}\r\n\t\t<div id=\"missing\"><div>du har inte sparat något!</div></div>\r\n  {:else if !init}\r\n    <div></div>\r\n\t{:else}\r\n\t\t<div id=\"results\">\r\n\t\t\t<Results results={results}/>\r\n\t\t</div>\r\n\t{/if}\r\n</main>\r\n\r\n<style>\r\n  #header {\r\n\t\theight: 90px;\r\n\t\tbackground-color: var(--main-bg-color);\r\n\t\tpadding: 20px;\r\n\t}\r\n\t#results {\r\n\t\theight: calc(100vh - 130px);\r\n\t}\r\n\t#missing {\r\n\t\twidth: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\t}\r\n\t#missing div {\r\n\t\tpadding: 30px;\r\n\t\tmargin: 100px auto;\r\n    font-size: 50px;\r\n    color: var(--main-bg-color);\r\n    font-family: 'Comfortaa', cursive;\r\n    font-weight: 700;\r\n  }\r\n\tmain {\r\n\t\theight: 100%;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\toverflow: hidden;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n</style>","<script lang=\"ts\">\r\n\timport { onMount } from \"svelte\";\r\n\timport Dictionary from \"./dictionary\";\r\n\timport { currentWord } from \"./global\";\r\n\r\n  let init = 0;\r\n\tlet question: any = 0;\r\n\tlet answered = 0;\r\n\tlet highlight = [-1, -1];\r\n\t\r\n\tfunction fetchRandom() {\r\n\t\tanswered = 0;\r\n\t\thighlight = [-1, -1];\r\n\t\tquestion = Dictionary.getQuestion();\r\n\t\tif (!question) question = 0;\r\n\r\n    init = 1;\r\n\t}\r\n\r\n\tfunction handleAnswer(i: number) {\r\n\t\tif (answered) {\r\n\t\t\tcurrentWord.set(question.alternatives[i]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (i == question.correct) {\r\n\t\t\thighlight = [question.correct, -1];\r\n\t\t} else {\r\n\t\t\thighlight = [question.correct, i];\r\n\t\t}\r\n\t\t\r\n\t\tcurrentWord.set(question.word);\r\n\t\tanswered = 1;\r\n\t}\r\n\r\n\tonMount(() => {\r\n\t\tfetchRandom();\r\n\t});\r\n</script>\r\n\r\n<main>\r\n  <form on:submit|preventDefault={() => { fetchRandom() }} id=\"form\" autocomplete=\"off\">\r\n\t\t<div id=\"form-wrap\">\r\n\t\t\t<div id=\"input-wrap\">\r\n\t\t\t\t<button type=\"submit\" style=\"height: 50px; margin: 0 20px 0 0px;\">\r\n\t\t\t\t\tny fråga\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</form>\r\n  {#if !init || question == 0}\r\n    <div></div>\r\n\t{:else}\r\n\t\t<div id=\"question\">\r\n\t\t\t<div id=\"word\" on:click={() => { if (answered) currentWord.set(question.word); }}>{question.word}</div>\r\n\t\t\t<div id=\"alts\">\r\n\t\t\t\t{#each question.alternatives as alt, i}\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button class={(answered && i == highlight[0] ? \"right\" : \"\") + (answered && i == highlight[1] ? \"wrong\" : \"\")} on:click={() => handleAnswer(i)}>\r\n\t\t\t\t\t\t\t{alt}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<span id=\"checkmark\" class=\"material-symbols-outlined\">\r\n\t\t\t\t\t\t\tdone\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span id=\"errormark\" class=\"material-symbols-outlined\">\r\n\t\t\t\t\t\t\tclose\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t{/each}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t{/if}\r\n</main>\r\n\r\n<style>\r\n\t#form-wrap {\r\n\t\tjustify-content: left;\r\n\t}\r\n\t#word {\r\n\t\t/*box-shadow: 0 10px 5px 0px rgba(0,0,0,0.1);*/\r\n\t\tmargin: 10px;\r\n\t\tpadding: 20px;\r\n\t\tfont-size: 40px;\r\n\t\tborder-radius: 5px;\r\n    color: var(--main-dark);\r\n    font-family: 'Comfortaa', cursive;\r\n\t\tbackground-color: var(--main-bg-color);\r\n\t}\r\n\t.wrong {\r\n\t\tbackground-color: var(--color-wrong) !important;\r\n\t}\r\n\t.right {\r\n\t\tbackground-color: var(--color-correct) !important;\r\n\t}\r\n\t.right + #checkmark {\r\n\t\tdisplay: flex !important;\r\n\t}\r\n\t.wrong ~ #errormark {\r\n\t\tdisplay: flex !important;\r\n\t}\r\n\t#question {\r\n\t\tmargin: 15px;\r\n\t\tbackground-color: var(--main-bg-second);\r\n\t\tborder-radius: 7px;\r\n\t\tpadding: 10px;\r\n\t}\r\n\t#errormark,\r\n\t#checkmark {\r\n\t\tdisplay: none;\r\n\t\tmargin-left: 10px;\r\n    height: 30px;\r\n    width: 30px;\r\n    border-radius: 100px;\r\n    background-color: var(--main-bg-color);\r\n    justify-content: center;\r\n    align-items: center;\r\n\t}\r\n\t#form button {\r\n\t\tmargin: 0px !important;\r\n\t}\r\n\t#alts {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\tjustify-content: center;\r\n\t}\r\n\t#alts div {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tpadding: 10px 5px;\r\n\t}\r\n\t#alts button {\r\n\t\tbackground-color: var(--main-bg-color);\r\n\t\ttransition: 0.4s ease-out background-color !important;\r\n\t}\r\n\tmain {\r\n\t\theight: 100%;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\toverflow: hidden;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n</style>","<script lang=\"ts\">\r\n\t//export let onactive;\r\n\r\n\tconst queryLookupURL = \"https://data.mongodb-api.com/app/searchapi-pcnyg/endpoint/random\";\r\n\timport Results from \"./components/Results.svelte\";\r\n\timport CorpusPicker from \"./components/CorpusPicker.svelte\";\r\n\timport { corpusEnabled } from \"./global\";\r\n\timport { onMount } from \"svelte\";\r\n\t\r\n\t//import type { resArray, WorkerResult } from \"./worker\";\r\n\t//import { webWorker } from \"./worker\";\r\n\r\n\tlet enabled = -1;\r\n  corpusEnabled.subscribe(v => {\r\n    enabled = v;\r\n  });\r\n\r\n\tinterface sentenceObject {\r\n\t\t_id: string,\r\n\t\ttitle: string,\r\n\t\tcontent: string[],\r\n\t\tlemma: string[]\r\n\t}\r\n\r\n\tlet searching: number = 1;\r\n\r\n\tlet results: Array<sentenceObject> = [];\r\n\r\n\tasync function getRandom() {\r\n\t\tsearching = 1;\r\n\t\tresults = [];\r\n\t\t\r\n\t\tconst response = await fetch(queryLookupURL, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tcorpus: enabled\r\n\t\t\t})\r\n\t\t}).then((r) => r.json());\r\n\r\n\t\tif (results.length) return;\r\n\r\n\t\tresults = response;\r\n\t\tsearching = 0;\r\n\t}\r\n\t\r\n \tonMount(() => {\r\n\t\tgetRandom();\r\n\t});\r\n</script>\r\n\r\n<main>\r\n\t<form on:submit|preventDefault={() => { if (searching == 1) return; getRandom() }} id=\"form\" autocomplete=\"off\">\r\n\t\t<div id=\"form-wrap\">\r\n\t\t\t<div id=\"input-wrap\">\r\n\t\t\t\t<button class={searching ? \"disabled\" : \"\"} type=\"submit\" style=\"margin: 0 20px 0 0px;\">\r\n\t\t\t\t\tta slumpmässigt\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"container\">\r\n\t\t\t\t<CorpusPicker />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</form>\r\n\t{#if !results.length}\r\n\t\t<div id=\"glass-wrap\"><img src=\"svg/glass.svg\" width=\"150px\" id=\"mag-glass\"></div>\r\n\t{:else}\r\n\t\t<div id=\"results\">\r\n\t\t\t<Results results={results} />\r\n\t\t</div>\r\n\t{/if}\r\n</main>\r\n\r\n<style>\r\n\t#results {\r\n\t\theight: calc(100vh - 130px);\r\n\t}\r\n\t#missing {\r\n\t\twidth: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\t}\r\n\t@keyframes upDown {\r\n\t\tto { transform: translatey(100px);}\r\n\t}\r\n\t#input-wrap {\r\n\t\tflex: 1;\r\n\t\tdisplay: flex;\r\n\t\theight: 50px;\r\n\t}\r\n\t#glass-wrap {\r\n\t\tdisplay: flex;\r\n    justify-content: center;\r\n\t\tmargin-top: 100px;\r\n\t}\r\n\t#container {\r\n\t\tdisplay: flex;\r\n    flex-direction: column;\r\n    text-align: left;\r\n\t\tmargin-left: 10px;\r\n\t}\r\n\t#mag-glass {\r\n\t\tposition: absolute;\r\n\t\tanimation: upDown 1.5s alternate infinite ease-in-out;\r\n\t}\r\n\tmain {\r\n\t\theight: 100%;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\toverflow: hidden;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n</style>","<script lang=\"ts\">\r\n\timport { onMount } from \"svelte\";\r\n\timport { currentWord } from \"./global\";\r\n\r\n\timport Results from \"./components/Results.svelte\";\r\n\timport Navigate from \"./router\";\r\n\r\n\t//import type { resArray, WorkerResult } from \"./worker\";\r\n\t//import { webWorker } from \"./worker\";\r\n\tlet params;\r\n\r\n  let init = 0;\r\n\tlet list = [];\r\n\r\n\tNavigate.currentParams.subscribe((v) => {\r\n\t\tparams = v;\r\n\t\tupdateList();\r\n\t});\r\n\r\n\tfunction updateList() {\r\n\t\tif (params.list) {\r\n\t\t\tinit = 1;\r\n\t\t\tlist = params.list.split(\",\");\r\n\t\t}\r\n\t}\r\n\r\n\tonMount(() => {\r\n\t\tparams = Navigate.getParams();\r\n\t\tupdateList();\r\n\t});\r\n</script>\r\n\r\n<main>\r\n  <div id=\"header\"></div>\r\n\t{#if !init}\r\n\t\t<div></div>\r\n\t{:else}\r\n\t\t<div id=\"results\">\r\n\t\t\t{#each list as word, i}\r\n\t\t\t\t<div id=\"word\">\r\n\t\t\t\t\t<span id=\"fonttext\">{i + 1}.</span>\r\n\t\t\t\t\t<button on:click={() => { currentWord.set(word) }} id=\"word\">\r\n\t\t\t\t\t\t{word}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t{/each}\r\n\t\t</div>\r\n\t{/if}\r\n</main>\r\n\r\n<style>\r\n  #header {\r\n\t\theight: 90px;\r\n\t\tbackground-color: var(--main-bg-color);\r\n\t\tpadding: 20px;\r\n\t}\r\n\t#results {\r\n\t\toverflow: auto;\r\n\t\ttext-align: left;\r\n\t\theight: calc(100vh - 130px);\r\n\t}\r\n\t#word {\r\n\t\tmargin: 10px;\r\n\t\tmargin-bottom: 0px;\r\n\t}\r\n\tmain {\r\n\t\theight: 100%;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\toverflow: hidden;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n</style>","<script lang=\"ts\">\r\n  import Navigate from \"../router\";\r\n  export let path, component;\r\n\r\n  let active = {\r\n    callback: () => {}\r\n  }\r\n\r\n  let c_path = \"\";\r\n\r\n\tNavigate.currentPath.subscribe(value => {\r\n\t\tc_path = value;\r\n\r\n    if (\"#\" + path == c_path) {\r\n      active.callback();\r\n    }\r\n\t});\r\n</script>\r\n\r\n<main class={\"#\" + path != c_path ? \"hidden\" : \"\"}>\r\n  <svelte:component this={component} onactive={active}/>\r\n</main>\r\n\r\n<style>\r\n  .hidden {\r\n    display: none;\r\n  }\r\n  main {\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n</style>","<script lang=\"ts\">\r\n  import Navigate from \"../router\";\r\n  export let to: string;\r\n\r\n  function handleClick() {\r\n    Navigate.goto(to);\r\n  }\r\n</script>\r\n\r\n<main on:mousedown={handleClick}>\r\n  <slot></slot>\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    cursor: pointer;\r\n  }\r\n</style>","<script lang=\"ts\">\r\n\timport Search from \"./Search.svelte\";\r\n\timport Home from \"./Home.svelte\";\r\n\timport Word from \"./Word.svelte\";\r\n\timport Reader from \"./Reader.svelte\";\r\n\timport Saved from \"./Saved.svelte\";\r\n\timport Synonym from \"./Synonym.svelte\";\r\n\timport Quiz from \"./Quiz.svelte\";\r\n\timport Wordlist from \"./Wordlist.svelte\";\r\n\r\n\timport Navigate from \"./router\";\r\n\timport Route from \"./components/Route.svelte\";\r\n\timport Link from \"./components/Link.svelte\";\r\n\timport Dictionary from \"./dictionary\";\r\n\timport { onMount } from \"svelte\";\r\n\timport { corpusEnabled } from \"./global\";\r\n\r\n\tif (!window.indexedDB) {\r\n\t\talert(\"Your browser doesn't support a stable version of IndexedDB!\");\r\n\t}\r\n\r\n\tlet closed = 0;\r\n\r\n\tconst routes = [\r\n\t\t[\"\", \"home\"],\r\n\t\t[\"search\", \"manage_search\"],\r\n\t\t[\"saved\", \"folder_open\"],\r\n\t\t[\"text\", \"subject\"],\r\n\t\t[\"quiz\", \"quiz\"],\r\n\t\t[\"synonym\", \"drive_file_rename_outline\"]\r\n\t]\r\n\r\n\tlet path = \"\";\r\n\tNavigate.currentPath.subscribe(value => {\r\n\t\tpath = value;\r\n\t})\r\n\r\n\tlet init = Dictionary.init();\r\n\r\n\tlet resizer;\r\n\tlet leftSide;\r\n\tlet rightSide;\r\n\r\n\tlet x = 0;\r\n\r\n\tlet leftSideWidth = 60;\r\n\tlet leftWidth = 0;\r\n\r\n\tfunction handleDrag(e) {\r\n\t\tresizer = e.target;\r\n\t\tleftSide = resizer.previousElementSibling;\r\n\t\trightSide = resizer.nextElementSibling;\r\n\r\n\t\tx = e.clientX;\r\n    leftWidth = leftSide.getBoundingClientRect().width;\r\n\r\n    // Attach the listeners to `document`\r\n    document.addEventListener('mousemove', mouseMoveHandler);\r\n    document.addEventListener('mouseup', mouseUpHandler);\r\n\t}\r\n\r\n\tconst mouseMoveHandler = function(e) {\r\n\t\tresizer.style.cursor = 'col-resize';\r\n\t\tdocument.body.style.cursor = 'col-resize';\r\n\r\n\t\tconst dx = e.clientX - x;\r\n\r\n\t\tconst newLeftWidth = Math.max(10, Math.min(90, ((leftWidth + dx) * 100) / resizer.parentNode.getBoundingClientRect().width));\r\n\t\tleftSideWidth = newLeftWidth;\r\n\r\n\t\tleftSide.style.userSelect = 'none';\r\n    leftSide.style.pointerEvents = 'none';\r\n\r\n    rightSide.style.userSelect = 'none';\r\n    rightSide.style.pointerEvents = 'none';\r\n\t};\r\n\r\n\tconst mouseUpHandler = function () {\r\n\t\tresizer.style.removeProperty('cursor');\r\n    document.body.style.removeProperty('cursor');\r\n\r\n    leftSide.style.removeProperty('user-select');\r\n    leftSide.style.removeProperty('pointer-events');\r\n\r\n    rightSide.style.removeProperty('user-select');\r\n    rightSide.style.removeProperty('pointer-events');\r\n\r\n    document.removeEventListener('mousemove', mouseMoveHandler);\r\n    document.removeEventListener('mouseup', mouseUpHandler);\r\n\t};\r\n\r\n\tonMount(() => {\r\n\t\tNavigate.init();\r\n\t\tconst params = Navigate.getParams();\r\n\r\n\t\tif (params.corpus != undefined && !isNaN(Number(params.corpus))) {\r\n\t\t\tcorpusEnabled.set(Number(params.corpus));\r\n\t\t}\r\n\t});\r\n</script>\r\n\r\n<div id=\"body\">\r\n\t<div id=\"sidebar\">\r\n\t\t<div id=\"top\"></div>\r\n\t\t{#each routes as route}\r\n\t\t\t<div id=\"link\" class={path == (\"#\" + route[0]) ? \"active\" : \"\"}><Link to={route[0]}><span class=\"logo material-symbols-outlined\">{route[1]}</span></Link></div>\r\n\t\t{/each}\r\n\t\t<div id=\"bottom\"></div>\r\n\t</div>\r\n\t<main id=\"main\">\r\n\t\t{#await init}\r\n\t\t\t<div id=\"missing\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\tladdar...\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t{:then}\r\n\t\t\t<div id={closed ? \"fullview\" : \"view\"} style=\"width: {leftSideWidth}%\">\r\n\t\t\t\t<Route path=\"\" component={Home} />\r\n\t\t\t\t<Route path=\"search\" component={Search} />\r\n\t\t\t\t<Route path=\"saved\" component={Saved} />\r\n\t\t\t\t<Route path=\"quiz\" component={Quiz} />\r\n\t\t\t\t<Route path=\"text\" component={Reader} />\r\n\t\t\t\t<Route path=\"synonym\" component={Synonym} />\r\n\t\t\t\t<Route path=\"wordlist\" component={Wordlist} />\r\n\t\t\t</div>\r\n\r\n\t\t\t{#if !closed}\r\n\t\t\t\t<div id=\"pane-divider\" on:mousedown={handleDrag}></div>\r\n\r\n\t\t\t\t<div id=\"dict\" style=\"flex: 1;\">\r\n\t\t\t\t\t<div id=\"close\" class=\"dictbtn\" on:click={() => { closed = 1 }}>\r\n\t\t\t\t\t\t<span class=\"material-symbols-outlined\">\r\n\t\t\t\t\t\t\tclose\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Word />\r\n\t\t\t\t</div>\r\n\t\t\t{:else}\r\n\t\t\t\t<div id=\"open\" class=\"dictbtn\" on:click={() => { closed = 0 }}>\r\n\t\t\t\t\t<span class=\"material-symbols-outlined\">\r\n\t\t\t\t\t\tmenu_book\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t{/if}\r\n\t\t{/await}\r\n\t</main>\r\n</div>\r\n\r\n<style>\r\n\t.dictbtn {\r\n\t\tposition: absolute;\r\n\t\theight: 30px;\r\n\t\twidth: 30px;\r\n\t\tborder-radius: 100px;\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: var(--main-bg-color);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t}\r\n\t#open span {\r\n\t\tfont-size: 30px !important;\r\n\t}\r\n\t#close {\r\n\t\tright: 15px;\r\n\t\ttop: 15px;\r\n\t}\r\n\t#open {\r\n\t\theight: 50px;\r\n\t\twidth: 50px;\r\n\t\tright: 15px;\r\n\t\ttop: 145px;\r\n\t}\r\n\t@media (max-width: 750px) {\r\n\t\t#dict {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t\t#pane-divider {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t\t#view {\r\n\t\t\twidth: 100% !important;\r\n\t\t}\r\n\t}\r\n\t#fullview {\r\n\t\twidth: 100% !important;\r\n\t}\r\n\t#missing {\r\n\t\twidth: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\t}\r\n\t#missing div {\r\n\t\tmargin: auto;\r\n    font-size: 50px;\r\n    color: var(--main-bg-color);\r\n    font-family: 'Comfortaa', cursive;\r\n    font-weight: 700;\r\n  }\r\n\t#main {\r\n\t\toverflow: auto;\r\n\t\tflex: 1;\r\n\t\tbackground-color: var(--main-complement);\r\n\t\tdisplay: flex;\r\n\t}\r\n\t#top {\r\n\t\twidth: 100%; \r\n\t\theight: 25px; \r\n\t}\r\n\t#pane-divider {\r\n\t\tcursor: ew-resize;\r\n\t\theight: 100%;\r\n\t\twidth: 10px;\r\n\t\tbackground-color: var(--main-bg-color);\r\n\t}\r\n\t#bottom {\r\n\t\tflex: 1;\r\n\t}\r\n\t.logo {\r\n\t\tcolor: var(--main-dark);\r\n\t\tfont-size: 60px !important;\r\n\t\tuser-select: none;\r\n\t\tmargin-top: 13px;\r\n\t}\r\n\t#link {\r\n\t\theight: 90px;\r\n\t\ttext-align: center;\r\n\t\tmargin: 5px;\r\n\t\tpadding: 0px;\r\n\t\ttransition: 0.06s all ease-in;\r\n\t}\r\n\t#link span {\r\n\t\ttransition: 0.1s color ease-in !important;\r\n\t}\r\n\t#link:not(.active):hover {\r\n\t\tbackground-color: var(--main-bg-second);\r\n\t\tborder-radius: 20px;\r\n\t}\r\n\t.active {\r\n\t\tborder-radius: 20px 0 0 20px !important;\r\n\t\tmargin-right: 0px !important;\r\n\t\tpadding-right: 5px !important;\r\n\t\tbackground-color: var(--main-complement) !important;\r\n\t\ttransition: 0.1s all ease-in !important;\r\n\t}\r\n\t.active span {\r\n\t\tcolor: var(--main-bg-color);\r\n\t}\r\n\t#sidebar {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100px;\r\n\t\theight: 100vh;\r\n\t\tbackground: var(--main-bg-color);\r\n\t}\r\n\t#body {\r\n\t\tdisplay: flex;\r\n\t}\r\n</style>","import App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body,\r\n    props: {\r\n        name: 'world'\r\n    }\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","createEventDispatcher","type","detail","cancelable","callbacks","bubbles","e","createEvent","initCustomEvent","custom_event","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","subscribe","invalidate","size","encodeParams","c_params","x","Router","currentParams","currentPath","getPath","match","window","location","href","getFullPath","split","decodeURI","getParams","parsed","str","pair","goto","dest","params","op","corpus","origin","setParam","param","old_params","c_path","replace","router","updatePath","isExtraCharacter","isPunctuation","span","t0","t0_value","t2_value","_id","t5_value","title","each_value","content","main","div4","div0","div3","div1","div2","span0","span1","t2","t5","punctuationRegex","extraCharacterRegex","word","test","dispatch","sentence","highlight","pinned","copySentence","navigator","clipboard","writeText","join","checkPin","_pinned","localStorage","getItem","undefined","Navigation","setTimeout","lemma","j","$$invalidate","currentWord","queryWord","corpusList","corpusEnabled","sentence_changes","each_blocks","results","pinSentence","sent","pinnedIds","setItem","removeItem","JSON","stringify","div0_class_value","enabled","v","Navigate","div","create_if_block_1","create_if_block_2","form","button","queryInput","searching","highlightLookup","query","async","checkQuery","q","alert","trim","lookupQuery","response","fetch","method","headers","body","json","_q","toLowerCase","findIndex","f","fp","$$value","Dictionary","mostCommon","loaded","db","wordList","synonymList","fetchWordList","wl","writeWordList","fetchSynonymList","writeSynonymList","shift","correct","alternatives","initDb","request","indexedDB","open","upgradeNeeded","onupgradeneeded","result","createObjectStore","keyPath","proceed","onerror","console","error","onsuccess","errorCode","fetchDb","objectStore","get","writeDb","put","writeDictionary","raw","catch","err","transaction","oncomplete","log","t","def","Buf","buf","s","pos","current_symbol","parse","etymology","getTypeName","getLemma","lemmas","sort","matchParts","bestMatch","longest","realLongest","fix","matching","last","getQuestion","Math","floor","random","getCompound","w","compounds","remaining","lookup","finish","div6","create_if_block_4","div5","if_block","t_value","each_value_2","details","summary","english","t4","t4_value","each_value_3","create_if_block_3","each_value_1","hr","create_if_block","compound","searchWord","openDictionary","_def","c_word","max","t1_value","t1","MAX_WORD_INDEX","div7","textarea","pCL","editing","toFilter","words","reg","RegExp","saveList","list","handleFormat","filterList","unique","_b","stem","onactive","id","button_class_value","question","answered","fetchRandom","handleAnswer","getRandom","t3","t3_value","updateList","path","active","slot_ctx","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","merged","len","to","div_class_value","current","Home","Search","Saved","Quiz","Reader","Synonym","Wordlist","promise","info","token","resolved","child_ctx","needs_flush","blocks","mount","hasCatch","pending","closed","resizer","leftSide","rightSide","leftSideWidth","leftWidth","mouseMoveHandler","cursor","dx","clientX","newLeftWidth","min","getBoundingClientRect","width","userSelect","pointerEvents","mouseUpHandler","isNaN","Number","previousElementSibling","nextElementSibling"],"mappings":"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"}