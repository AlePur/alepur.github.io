{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/router.js","../../src/components/Sentence.svelte","../../src/global.js","../../src/components/Results.svelte","../../src/components/CorpusPicker.svelte","../../src/Search.svelte","../../src/Home.svelte","../../src/dictionary.js","../../src/Word.svelte","../../src/Saved.svelte","../../src/Synonym.svelte","../../src/Quiz.svelte","../../src/components/Route.svelte","../../src/components/Link.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\r\n\r\nfunction encodeParams(p) {\r\n  let c_params = \"?\";\r\n  const keys = Object.keys(p);\r\n  if (keys) {\r\n    keys.forEach((x) => {\r\n      c_params += x + \"=\" + p[x] + \"&\";\r\n    });\r\n  }\r\n  return c_params.slice(0, c_params.length - 1);\r\n}\r\n\r\nconst Router = {\r\n  currentPath: writable(\"#\"),\r\n  getPath: function() {\r\n    const l = window.location.href + \"/\";\r\n    let match = l.match(/\\/(#.*?)[\\?\\/]/);\r\n    return (match && match.length > 1) ? (match[1] ? match[1] : '') : '';\r\n  },\r\n  getFullPath: function() {\r\n    const l = window.location.href + \"?\";\r\n    let match = l.match(/\\/#(.*?)\\?/);\r\n    return match ? match[1].split(\"/\").map(x => decodeURI(x)) : '';\r\n  },\r\n  getParams: function() {\r\n    let parsed = {};\r\n    const l = window.location.href;\r\n    let match = l.match(/\\?(.*)/);\r\n    const str = (match ? match[1] : \"\")\r\n    if (!str) return {};\r\n    str.split(\"&\").forEach(x => {\r\n      const pair = x.split(\"=\");\r\n      parsed[pair[0]] = pair[1];\r\n    });\r\n    return parsed;\r\n  },\r\n  goto: function(dest, params = 0) {\r\n    if (params == 0) {\r\n      params = this.getParams();\r\n    }\r\n    let c_params = encodeParams(params);\r\n    window.location.href = window.location.origin + '/#' + dest + c_params;\r\n  },\r\n  setParam: function(param, value) {\r\n    let old_params = this.getParams();\r\n\r\n    old_params[param] = value;\r\n\r\n    let c_params = encodeParams(old_params);\r\n\r\n    let c_path = this.getPath();\r\n    if (c_path == \"\" || c_path == \"/\") {\r\n      return;\r\n    }\r\n\r\n    window.location.href = window.location.href.replace(/\\?(.*)$/, '') + c_params;\r\n  },\r\n  init: function() {\r\n    let router = this;\r\n    function updatePath() {\r\n      let c_path = router.getPath();\r\n      router.currentPath.set(c_path);\r\n    }\r\n    window.addEventListener('popstate', () => { \r\n      updatePath();\r\n    });\r\n    \r\n    if (this.getPath() == \"\") {\r\n      this.goto(\"\");\r\n    } else {\r\n      updatePath();\r\n    }\r\n    return 1;\r\n  }\r\n}\r\n\r\nexport default Router","<script lang=\"ts\">\r\n  import { createEventDispatcher, onMount } from 'svelte';\r\n\timport Navigation from \"../router\";\r\n  const dispatch = createEventDispatcher();\r\n\r\n\tconst punctuationRegex = /^([.,!?%*;:])$/;\r\n\tconst extraCharacterRegex = /^([\\/#$%^\\[\\]&\"'\\”\\‘\\’\\“\\-_()])$/;\r\n\r\n  export let sentence: sentenceObject, highlight = -1;\r\n\tlet pinned: any = false;\r\n\r\n  interface sentenceObject {\r\n\t\t_id: string,\r\n\t\ttitle: string,\r\n\t\tcontent: string[],\r\n\t\tlemma: string[]\r\n\t}\r\n\r\n\tfunction isPunctuation(word: string) {\r\n\t\treturn punctuationRegex.test(word);\r\n\t}\r\n\r\n\tfunction isExtraCharacter(word: string) {\r\n\t\treturn extraCharacterRegex.test(word);\r\n\t}\r\n\r\n  function handleEnter(e) {\r\n    dispatch('check_def', e.target);\r\n  }\r\n\r\n  function handleLeave(e) {\r\n    dispatch('check_def', 0);\r\n  }\r\n\r\n\tfunction copySentence() {\r\n\t\tnavigator.clipboard.writeText(sentence.content.join(\" \"));\r\n\t}\r\n\r\n\tfunction checkPin() {\r\n\t\tconst _pinned = window.localStorage.getItem(sentence._id);\r\n\t\tpinned = _pinned != undefined;\r\n\t}\r\n\r\n\tNavigation.currentPath.subscribe(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tcheckPin();\r\n\t\t}, 5)\r\n\t});\r\n\r\n\tonMount(() => {\r\n\t\tcheckPin();\r\n\t});\r\n</script>\r\n\r\n<main>\r\n  <div class=\"sentence\">\r\n    <div id=\"sent\">\r\n      <!--<div id=\"highlight-div\">{@html formatSentence(results.highlightLookup[i], res[2])}</div>-->\r\n      {#each sentence.content as word, j}\r\n        <span id=\"word\" on:click=\"{() => dispatch('word_click', (sentence.lemma[j] || word))}\" on:mouseleave=\"{handleLeave}\" on:mouseenter=\"{handleEnter}\" class={( isExtraCharacter(word) ? \"disabled \" : \"\" ) + ( isPunctuation(word) ? \"disabled punctuation \" : \"\" ) + ( highlight == j ? \"highlight\" : \"\" )}>\r\n          {word}\r\n        </span>\r\n      {/each}\r\n    </div>\r\n    <div class=\"unimportant\">\r\n      <div id=\"id\">ID: {sentence._id}</div>\r\n      <div id=\"source\">Från: {sentence.title}</div>\r\n    </div>\r\n    <span on:click={() => { dispatch('pin_sentence'); pinned ^= 1 }} id=\"pin\" class=\"clickable material-symbols-outlined {pinned ? \"symbol-filled\" : \"symbol-outlined\"}\">push_pin</span>\r\n\t\t<span on:click={() => { copySentence() }} id=\"copy\" class=\"clickable material-symbols-outlined\">content_copy</span>\r\n  </div>\r\n</main>\r\n\r\n<style>\r\n\tmain {\r\n\t\tbackground-color: var(--main-bg-second);\r\n\t\tborder-radius: 7px;\r\n\t\tmargin: 15px;\r\n\t\tpadding: 0px 10px;\r\n\t}\r\n\tmainwithshadow {\r\n\t\tbox-shadow: 0px 10px 10px 0px rgb(0 0 0 / 12%);\r\n\t}\r\n\t#word {\r\n\t\tdisplay: inline-block;\r\n\t\tpadding: 2px;\r\n\t\tborder-radius: 3px;\r\n\t}\r\n  .clickable {\r\n    cursor: pointer;\r\n  }\r\n\t#word:hover:not(.disabled) {\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: var(--main-bg-color);\r\n\t}\r\n\t.punctuation {\r\n\t\tpadding-right: 4px !important;\r\n\t\tmargin-left: -3px;\r\n\t}\r\n\t#sent {\r\n\t\tfont-size: 20px;\r\n\t}\r\n\t.unimportant {\r\n\t\tcolor: var(--main-dark);\r\n\t\tfont-size: 15px;\r\n\t}\r\n\t.sentence {\r\n\t\tpadding-top: 10px;\r\n\t}\r\n</style>","import { writable } from 'svelte/store';\r\n\r\nexport const currentWord = writable(-1);\r\nexport const queryWord = writable(\"\");\r\nexport let corpusList = [\"8sidor.se\", \"läsbart\", \"webbnyheter\"];\r\nexport let corpusEnabled = writable(0);","<script lang=\"ts\">\r\n\timport Sentence from \"./Sentence.svelte\";\r\n\timport { currentWord } from '../global.js';\r\n\timport { onMount } from \"svelte\";\r\n\t\r\n\t//import type { resArray, WorkerResult } from \"./worker\";\r\n\t//import { webWorker } from \"./worker\";\r\n\r\n\tinterface sentenceObject {\r\n\t\t_id: string,\r\n\t\ttitle: string,\r\n\t\tcontent: string[],\r\n\t\tlemma: string[]\r\n\t}\r\n\r\n\texport let results: Array<sentenceObject> = [];\r\n\texport let highlight: number[] = [];\r\n\r\n\tfunction handleClick(e) {\r\n\t\t//checkQuery(e.detail);\r\n\t\t//navigate('/word/' + e.detail);\r\n\t\t//window.open(window.location.origin + '/word/' + e.detail, '_blank')\r\n\t\tcurrentWord.set(e.detail);\r\n\t}\r\n\r\n\tfunction pinSentence(i: number) {\r\n\t\tconst sent = results[i];\r\n\r\n\t\tlet pinnedIds = window.localStorage.getItem(\"pinned-id\");\r\n\r\n\t\tif (pinnedIds) {\r\n\t\t\tlet a = pinnedIds.split(\",\");\r\n\t\t\tlet i = a.indexOf(sent._id);\r\n\t\t\tif (i != -1) {\r\n\t\t\t\twindow.localStorage.setItem(\"pinned-id\", a.filter(x => x != sent._id).join(\",\"));\r\n\t\t\t\twindow.localStorage.removeItem(sent._id);\r\n\t\t\t} else {\r\n\t\t\t\twindow.localStorage.setItem(\"pinned-id\", pinnedIds + \",\" + sent._id);\r\n\t\t\t\twindow.localStorage.setItem(sent._id, JSON.stringify(sent));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\twindow.localStorage.setItem(\"pinned-id\", sent._id);\r\n\t\t\twindow.localStorage.setItem(sent._id, JSON.stringify(sent));\r\n\t\t}\r\n\t}\r\n\t\r\n\tonMount(() => {\r\n\t\t\r\n\t})\r\n</script>\r\n\r\n<main>\r\n\t{#each results as res, i}\r\n\t\t<Sentence on:pin_sentence={() => pinSentence(i)} on:word_click={handleClick} sentence={res} highlight={highlight[i]}/>\r\n\t{/each}\r\n</main>\r\n\r\n<style>\r\n\tmain {\r\n\t\theight: 100%;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\toverflow: auto;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\tmain::-webkit-scrollbar-track {\r\n\t\tbackground: var(--main-complement); \r\n\t}\r\n\t@media (min-width: 640px) {\r\n\t\tmain {\r\n\t\t\tmax-width: none;\r\n\t\t}\r\n\t}\r\n</style>","<script lang=\"ts\">\r\n  import { corpusList, corpusEnabled } from \"../global\";\r\n  import Navigate from \"../router\";\r\n\r\n  let enabled = -1;\r\n  corpusEnabled.subscribe(v => {\r\n    enabled = v;\r\n    Navigate.setParam(\"corpus\", enabled);\r\n  });\r\n</script>\r\n\r\n<main>\r\n  {#each corpusList as c, i}\r\n    <div class=\"radio-container\">\r\n      <div style=\"margin-right: 7px;\"><div id=\"radio\" class={enabled == i ? \"checked\" : \"\"} on:click={() => { corpusEnabled.set(i) }} /></div>\r\n      {c}\r\n    </div>\r\n  {/each}\r\n</main>\r\n\r\n<style>\r\n  .checked {\r\n    background-color: var(--main-vivid) !important;\r\n  }\r\n  #radio {\r\n    cursor: pointer;\r\n    width: 15px;\r\n    height: 15px;\r\n    border-radius: 50px;\r\n    background-color: var(--main-complement);\r\n  }\r\n</style>","<script lang=\"ts\">\r\n\tconst queryLookupURL = \"https://data.mongodb-api.com/app/searchapi-pcnyg/endpoint/query\";\r\n\timport Results from \"./components/Results.svelte\";\r\n\timport CorpusPicker from \"./components/CorpusPicker.svelte\";\r\n\timport Checkbox from \"./components/Checkbox.svelte\";\r\n\timport { currentWord, queryWord, corpusEnabled } from './global.js';\r\n\timport Navigate from \"./router\";\r\n\timport { onMount } from \"svelte\";\r\n\t\r\n\t//import type { resArray, WorkerResult } from \"./worker\";\r\n\t//import { webWorker } from \"./worker\";\r\n\r\n\tlet enabled = -1;\r\n  corpusEnabled.subscribe(v => {\r\n    enabled = v;\r\n  });\r\n\r\n\tinterface sentenceObject {\r\n\t\t_id: string,\r\n\t\ttitle: string,\r\n\t\tcontent: string[],\r\n\t\tlemma: string[]\r\n\t}\r\n\r\n\tlet queryInput;\r\n\tlet searching: number = 2;\r\n\t//let shallow: boolean = true;\r\n\r\n\tlet results: Array<sentenceObject> = [];\r\n\tlet highlightLookup: number[] = [];\r\n\r\n\tlet query: string = \"\";\r\n\r\n\tqueryWord.subscribe(value => {\r\n\t\tif (value == \"\") return;\r\n\t\tcheckQuery(value);\r\n\t});\r\n\r\n\tfunction validateInput(e) {\r\n\t\te.preventDefault();\r\n\t\tquery = e.target.value = e.target.value.replace(/\\s/g, '');\r\n\t}\r\n\r\n\tasync function checkQuery(q: string) {\r\n\t\tif (q.length > 30) {\r\n\t\t\talert(\"Too long a query!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (q == \"\") return;\r\n\t\tqueryInput.value = query = q.trim();\r\n\t\tNavigate.goto(\"search/\" + query, {\r\n\t\t\tcorpus: enabled\r\n\t\t} as any);\r\n\t\tsearching = 1;\r\n\t\tresults = [];\r\n\r\n\t\tconst lookupQuery = query//.toLowerCase();\r\n\t\t\r\n\t\tconst response = await fetch(queryLookupURL, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tword: lookupQuery,\r\n\t\t\t\tcorpus: enabled\r\n\t\t\t})\r\n\t\t}).then((r) => r.json());\r\n\r\n\t\tif (results.length) return;\r\n\r\n\t\tif (response.length) {\r\n\t\t\tconst _q = query.toLowerCase();\r\n\r\n\t\t\tresponse.forEach((e: sentenceObject, i: number) => {\r\n\t\t\t\tfor (let i = 0; i < e.content.length; i++) {\r\n\t\t\t\t\tif (e.content[i] == \"&amp;\") e.content[i] = \"&\";\r\n\t\t\t\t}\r\n\t\t\t\tconst index = e.content.findIndex(f => f.toLowerCase() == _q);\r\n\t\t\t\thighlightLookup[i] = ((index != -1) ? index : e.lemma.findIndex(f => f == _q));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tresults = response;\r\n\t\tsearching = 0;\r\n\t}\r\n\t\r\n\tonMount(() => {\r\n\t\tconst fp = Navigate.getFullPath();\r\n\t\tlet q = fp[1];\r\n\r\n\t\tif (!q || fp[0] != \"search\") return;\r\n\r\n\t\tconst params = Navigate.getParams();\r\n\t\tcheckQuery(q);\r\n\t})\r\n</script>\r\n\r\n<main>\r\n\t<form on:submit|preventDefault={() => { if (searching == 1) return; checkQuery(query) }} id=\"form\" autocomplete=\"off\">\r\n\t\t<div id=\"form-wrap\">\r\n\t\t\t<div id=\"input-wrap\">\r\n\t\t\t\t<input id=\"input\" bind:this={queryInput} on:input={validateInput}>\r\n\t\t\t\t<button class={searching ? \"disabled\" : \"\"} type=\"submit\" style=\"margin: 0 20px 0 5px;\">\r\n\t\t\t\t\tsök\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<!--<div id=\"shallow\">\r\n\t\t\t\t<span style=\"margin-right: 10px;\"><Checkbox bind:checked={shallow} /></span>\r\n\t\t\t\tbortse böjning\r\n\t\t\t</div>-->\r\n\t\t\t<div id=\"container\">\r\n\t\t\t\t<CorpusPicker />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</form>\r\n\t{#if !results.length}\r\n\t\t{#if searching == 0}\r\n\t\t\t<div id=\"missing\"><div>Inga exempel hittades</div></div>\r\n\t\t{:else if searching == 1}\r\n\t\t\t<div id=\"glass-wrap\"><img src=\"svg/glass.svg\" width=\"150px\" id=\"mag-glass\"></div>\r\n\t\t{/if}\r\n\t{:else}\r\n\t\t<div id=\"results\">\r\n\t\t\t<Results results={results} highlight={highlightLookup}/>\r\n\t\t</div>\r\n\t{/if}\r\n</main>\r\n\r\n<style>\r\n\t#results {\r\n\t\theight: calc(100vh - 130px);\r\n\t}\r\n\t#input {\r\n\t\tflex: 1;\r\n\t}\r\n\t#missing {\r\n\t\twidth: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\t}\r\n\t#missing div {\r\n\t\tpadding: 30px;\r\n\t\tmargin: 100px auto;\r\n    font-size: 50px;\r\n    color: var(--main-bg-color);\r\n    font-family: 'Comfortaa', cursive;\r\n    font-weight: 700;\r\n  }\r\n\t#shallow {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\ttext-align: center;\r\n\t\tpadding: 0 10px;\r\n\t\theight: 50px;\r\n\t\tbackground-color: var(--main-bg-second);\r\n\t\tborder-radius: 5px;\r\n\t}\r\n\t@keyframes upDown {\r\n\t\tto { transform: translatey(100px);}\r\n\t}\r\n\t#input-wrap {\r\n\t\tflex: 1;\r\n\t\tdisplay: flex;\r\n\t\theight: 50px;\r\n\t}\r\n\t#glass-wrap {\r\n\t\tdisplay: flex;\r\n    justify-content: center;\r\n\t\tmargin-top: 100px;\r\n\t}\r\n\t#container {\r\n\t\tdisplay: flex;\r\n    flex-direction: column;\r\n    text-align: left;\r\n\t\tmargin-left: 20px;\r\n\t}\r\n\t#mag-glass {\r\n\t\tposition: absolute;\r\n\t\tanimation: upDown 1.5s alternate infinite ease-in-out;\r\n\t}\r\n\tmain {\r\n\t\theight: 100%;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\toverflow: hidden;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\t@media (min-width: 640px) {\r\n\t\tmain {\r\n\t\t\tmax-width: none;\r\n\t\t}\r\n\t}\r\n</style>","<main>\r\n  <div id=\"main\">ab initio</div>\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  #main {\r\n    padding: 100px;\r\n    font-size: 100px;\r\n    color: var(--main-bg-color);\r\n    font-family: 'Comfortaa', cursive;\r\n    font-weight: 700;\r\n  }\r\n</style>","const dictUrl = \"/kaikki.dict\";\r\nconst wordListUrl = \"/kaikki.list\"\r\nconst synonymUrl = \"/hogskoleprov.list\";\r\n\r\n/*\r\n\r\n{\r\n  word: --,\r\n  def: [\r\n    {\r\n      type,\r\n      etymology,\r\n      def: [{\r\n        examples,\r\n        thingy\r\n      }]\r\n    };\r\n  ]\r\n}\r\n\r\n*/\r\n\r\nconst Dictionary = {\r\n  loaded: 0,\r\n  db: {},\r\n  wordList: [],\r\n  synonymList: [],\r\n  fetchWordList: function() {\r\n    let wl = localStorage.getItem('wordlist');\r\n\r\n    if (!wl) {\r\n      this.writeWordList();\r\n      return;\r\n    }\r\n\r\n    const list = wl.replace(\"\\r\", \"\").split(\"\\n\");\r\n    list.forEach(x => {\r\n      this.wordList.push(x.split(\",\"));\r\n    })\r\n  },\r\n  fetchSynonymList: function() {\r\n    let wl = localStorage.getItem('hogskoleprov');\r\n\r\n    if (!wl) {\r\n      this.writeSynonymList();\r\n      return;\r\n    }\r\n\r\n    const list = wl.split(\"\\n\");\r\n    list.forEach(x => {\r\n      let d = x.split(\"|\");\r\n      this.synonymList.push({\r\n        word: d.shift(),\r\n        correct: d.shift(),\r\n        alternatives: d\r\n      });\r\n    })\r\n  },\r\n  initDb: async function () {\r\n    const request = indexedDB.open(\"Kaikki\");\r\n    let upgradeNeeded = 0;\r\n\r\n    request.onupgradeneeded = (event) => {\r\n      upgradeNeeded = 1;\r\n\r\n      const db = event.target.result;\r\n\r\n      const objectStore = db.createObjectStore(\"dictionary\", { keyPath: \"word\" });\r\n\r\n      //objectStore.createIndex(\"def\", \"def\", { unique: false });\r\n      \r\n    };\r\n\r\n    return await new Promise((proceed) => {\r\n      request.onerror = (e) => {\r\n        console.error(\"IndexedDB error!\");\r\n      };\r\n      request.onsuccess = (event) => {\r\n        this.db = event.target.result;\r\n        this.db.onerror = (event) => {\r\n          console.error(`Database error: ${event.target.errorCode}`);\r\n        };\r\n        proceed(upgradeNeeded);\r\n      };\r\n    });\r\n  },\r\n  fetchDb: async function (objectStore, key, callback) {\r\n    return await new Promise((p) => {\r\n      const request = objectStore.get(key);\r\n      request.onsuccess = async () => {\r\n        await callback(request.result);\r\n        p();\r\n      }\r\n    });\r\n  },\r\n  writeDb: async function (objectStore, value) {\r\n    return await new Promise((p) => {\r\n      const request = objectStore.put(value);\r\n      request.onsuccess = () => {\r\n        p();\r\n      }\r\n      request.onerror = (e) => {\r\n        console.error(e);\r\n      }\r\n    });\r\n  },\r\n  writeDictionary: async function() {\r\n    let raw = \"\";\r\n\r\n    await fetch(dictUrl)\r\n      .then(response => response.text())\r\n      .then((response) => {\r\n          raw = response;\r\n      })\r\n      .catch(err => alert(\"Error downloading dictionary: \" + err));\r\n\r\n    const transaction = this.db.transaction(\"dictionary\", \"readwrite\");\r\n    const objectStore = transaction.objectStore(\"dictionary\");\r\n\r\n    transaction.oncomplete = () => {\r\n      console.log(\"transaction closed.\");\r\n    };\r\n    \r\n    let t = 0;\r\n    let def = [];\r\n    const Buf = {\r\n      buf: [\"\", \"\", \"\"],\r\n      clear: function() {\r\n        this.buf = [\"\", \"\", \"\"];\r\n        def = [];\r\n      },\r\n      add: function(t, s) {\r\n        this.buf[t] += s;\r\n      },\r\n      get: function(t) {\r\n        return this.buf[t];\r\n      }\r\n    }\r\n    \r\n    for(let pos = 0; pos < raw.length; pos++) {\r\n      const current_symbol = raw[pos];\r\n      if (current_symbol == \"|\") {\r\n        switch (t) {\r\n          case 0:\r\n            break;\r\n          case 1:\r\n            try {\r\n              def = JSON.parse(Buf.get(1));\r\n            } catch(e) {\r\n              console.log(e);\r\n            }\r\n            break;\r\n        }\r\n        t++;\r\n      } else if (current_symbol == \"\\n\") {\r\n        const key = Buf.get(0);\r\n        if (key == \"\") continue;\r\n\r\n        await this.writeDb(objectStore, {\r\n          word: key,\r\n          etymology: Buf.get(2),\r\n          def: def\r\n        });\r\n\r\n        t = 0;\r\n        Buf.clear();\r\n      } else {\r\n        Buf.add(t, current_symbol);\r\n      }\r\n    }\r\n  },\r\n  writeWordList: async function () {\r\n    await fetch(wordListUrl)\r\n      .then(response => response.text())\r\n      .then((response) => {\r\n          localStorage.setItem('wordlist', response);\r\n          this.fetchWordList();\r\n      })\r\n      .catch(err => alert(\"Error downloading wordlist: \" + err));\r\n    return 1;\r\n  },\r\n  writeSynonymList: async function () {\r\n    await fetch(synonymUrl)\r\n      .then(response => response.text())\r\n      .then((response) => {\r\n          localStorage.setItem('hogskoleprov', response);\r\n          this.fetchSynonymList();\r\n      })\r\n      .catch(err => alert(\"Error downloading hogskoleprov: \" + err));\r\n    return 1;\r\n  },\r\n  init: async function() {\r\n    const empty = await this.initDb();\r\n\r\n    if (empty) {\r\n      console.log(\"writing dict...\");\r\n      await this.writeDictionary();\r\n      await this.writeWordList();\r\n      await this.writeSynonymList();\r\n    } else {\r\n      this.fetchWordList();\r\n      this.fetchSynonymList();\r\n    }\r\n\r\n    return 1;\r\n  },\r\n  getTypeName(t) {\r\n    switch (t) {\r\n      case \"noun\":\r\n        return \"substantiv\";\r\n      case \"verb\":\r\n        return \"verb\";\r\n      case \"adj\":\r\n        return \"adjektiv\";\r\n      case \"intj\":\r\n        return \"interjektion\";\r\n      case \"conj\":\r\n        return \"konjunktion\";\r\n      case \"det\":\r\n        return \"artikel\";\r\n      case \"pron\":\r\n        return \"pronomen\";\r\n      case \"num\":\r\n        return \"nummer\";\r\n      case \"name\":\r\n        return \"namn\";\r\n      case \"adv\":\r\n        return \"adverb\";\r\n      default:\r\n        return t;\r\n    }\r\n  },\r\n  matchParts: function(text) {\r\n    let bestMatch = [text[0], 0];\r\n    let longest = 1;\r\n    let realLongest = 1;\r\n\r\n    for (let i = 0; i < this.wordList.length; i++) {\r\n      for (let j = 0; j < this.wordList[i].length; j++) {\r\n        let c = this.wordList[i][j];\r\n        const fix = (c.length > 1 && (c[0] == \"-\" || c[c.length - 1] == \"-\"))\r\n        if (fix) {\r\n          c = c.replace(\"-\", \"\");\r\n        }\r\n  \r\n        if (c.length > text.length) continue;\r\n        let matching = (() => {\r\n          let k = 0;\r\n          while (k < c.length) {\r\n            if (c[k] != text[k]) {\r\n              if (k > 9) {\r\n                break;\r\n              } else {\r\n                return 0;\r\n              }\r\n            }\r\n            k++;\r\n          }\r\n          return k;\r\n        })();\r\n  \r\n        if (matching > longest || (matching >= longest && (fix || c == \"bo\"))) {\r\n          longest = matching;\r\n          realLongest = longest;\r\n          bestMatch = [this.wordList[i][j], this.wordList[i][0]];\r\n\r\n          const last = c[c.length - 1];\r\n          if ((j > 0 && !fix && (last == \"s\" || last == \"t\") && c.length > 3)) {\r\n            realLongest = longest - 1;\r\n            bestMatch = [this.wordList[i][0], this.wordList[i][0]]\r\n          }\r\n          if (c.indexOf(\" \") != - 1|| c == \"bo\" || (c == \"be\" && fix)) {\r\n            longest += 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return [realLongest, bestMatch];\r\n  },\r\n  getQuestion: function() {\r\n    return this.synonymList[Math.floor(Math.random() * this.synonymList.length)];\r\n  },\r\n  getCompound: function(w) {\r\n    if (w.indexOf(\" \") != -1) return w.split(\" \");\r\n\r\n    let compounds = [];\r\n\r\n    let remaining = w;\r\n\r\n    while(remaining.length) {\r\n      let bestMatch = this.matchParts(remaining);\r\n      const c = bestMatch[1][0];\r\n\r\n      if (remaining == w) {\r\n        if (c.length <= 2) {\r\n          return [];\r\n        }\r\n        if (bestMatch[0] == w.length) {\r\n          return [bestMatch[1][1]];\r\n        }\r\n      }\r\n\r\n      remaining = remaining.slice(bestMatch[0]);\r\n      \r\n      if (c.length >= 3) {\r\n        compounds.push(c);\r\n      }\r\n    }\r\n\r\n    if (compounds.length > 1 && compounds[0][0] == \"-\") return [];\r\n\r\n    return compounds;\r\n  },\r\n  lookup: function(w) {\r\n    const transaction = this.db.transaction(\"dictionary\", \"readwrite\");\r\n    const objectStore = transaction.objectStore(\"dictionary\");\r\n\r\n    return new Promise((finish) => {\r\n      this.fetchDb(objectStore, w, (result) => {\r\n        if (!result) finish(0);\r\n        finish(result);\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport default Dictionary;","<script lang=\"ts\">\r\n  import { currentWord, queryWord } from './global.js';\r\n  import Navigate from \"./router\";\r\n  import Dictionary from \"./dictionary\";\r\n\r\n\t//const params = useParams();\r\n\r\n  let word: string | -1 = -1;\r\n  let compound = [];\r\n  let queryInput;\r\n  let query = \"\";\r\n\r\n  let definition: 0 | {\r\n    word: string,\r\n    def: Array<{\r\n      t: string, // type\r\n      s: Array<{  // senses\r\n        e?: Array<{\r\n          text: string,\r\n          english: string\r\n        }>,\r\n        r?: string[]\r\n      }>;\r\n    }>,\r\n    etymology: string | null\r\n  } = 0;\r\n\r\n  function searchWord(w) {\r\n    queryWord.set(w);\r\n  }\r\n\r\n  currentWord.subscribe(async value => {\r\n\t\tword = (value as -1 | string);\r\n    if (word && word != -1) {\r\n      const _def = await Dictionary.lookup(word); \r\n      if (!_def) {\r\n        compound = Dictionary.getCompound(word);\r\n        definition = 0;\r\n      } else {\r\n        compound = [];\r\n        definition = _def;\r\n      }\r\n    } else {\r\n      word = -1;\r\n    }\r\n\t});\r\n\r\n  function openDictionary() {\r\n    window.open(`https://svenska.se/tre/?sok=${word}`, '_blank');\r\n  }\r\n</script>\r\n\r\n<main id=\"main\">\r\n  {#if word != -1}\r\n    <div id=\"wrap\">\r\n      <div id=\"ww\">\r\n        <div id=\"header\">\r\n          <div id=\"word-wrap\">\r\n            <div id=\"word\">{word}</div>\r\n          </div>\r\n          <div style=\"width: 130px;\"><button id=\"external\" on:click={() => openDictionary()}>Slå upp</button></div>\r\n        </div>\r\n        {#if definition != 0}\r\n          {#each definition.def as defEntry}\r\n            <div id=\"def-wrap\" class=\"wrap\">\r\n              {Dictionary.getTypeName(defEntry.t)}\r\n              <hr>\r\n              {#each defEntry.s as def}\r\n                <div id=\"definition\">\r\n                  {#each def.r as gloss}\r\n                    <div id=\"translation\">\r\n                      {gloss}\r\n                    </div>\r\n                  {/each}\r\n                  {#if def.e}\r\n                    <details>\r\n                      <summary>exempel</summary>\r\n                      {#each def.e as ex}\r\n                        <span id=\"dot\">•</span>\r\n                        <div id=\"example\">\r\n                          <div>{ex.text}</div>\r\n                          <div style=\"color: var(--main-dark)\">{ex.english || \"\"}</div>\r\n                        </div>\r\n                      {/each}\r\n                    </details>\r\n                  {/if}\r\n                </div>\r\n              {/each}\r\n            </div>\r\n          {/each}\r\n          {#if definition.etymology}\r\n            <details id=\"ety-wrap\" class=\"wrap\">\r\n              <summary>historik</summary>\r\n              <div id=\"etymology\">\r\n                {definition.etymology}\r\n              </div>\r\n            </details>\r\n          {/if}\r\n        {:else if !compound.length}\r\n          <div id=\"missing\">\r\n            <div>text saknas</div>\r\n          </div>\r\n        {:else}\r\n          {#each compound as c_word}\r\n            <div id=\"compound\" on:click={() => currentWord.set(c_word)}>{c_word}</div>\r\n          {/each}\r\n        {/if}\r\n        <button id=\"ex-btn\" on:click={() => searchWord(word)}>Se exempel</button>\r\n      </div>\r\n    </div>\r\n  {:else}\r\n    <div id=\"wrap\" class=\"fake\">\r\n      <div id=\"ww\">\r\n        <div id=\"header\">\r\n          <div style=\"display: flex;\"></div>\r\n          <div style=\"flex: 1;\"><button id=\"external\">Slå upp</button></div>\r\n        </div>\r\n        <div id=\"def-wrap\" class=\"wrap\"></div>\r\n        <div id=\"ety-wrap\" class=\"wrap\"></div>\r\n        <button id=\"ex-btn\">Se exempel</button>\r\n      </div>\r\n    </div>\r\n  {/if}\r\n</main>\r\n\r\n<style>\r\n  #word-wrap {\r\n    display: flex; \r\n    flex: 1;\r\n    text-align: left;\r\n  }\r\n  #ex-btn {\r\n    margin-left: 5px;\r\n  }\r\n  .fake button {\r\n    cursor: default;\r\n    color: var(--main-bg-second);\r\n  }\r\n  .fake button:focus {\r\n    background-color: var(--main-bg-second) !important;\r\n  }\r\n  .fake #def-wrap {\r\n    height: 200px;\r\n  }\r\n  .fake #ety-wrap {\r\n    height: 50px;\r\n  }\r\n  #compound {\r\n    padding: 20px;\r\n    margin: 5px;\r\n    border-radius: 6px;\r\n    font-size: 30px;\r\n    background-color: var(--main-bg-second);\r\n    font-family: 'Comfortaa', cursive;\r\n    cursor: pointer;\r\n    font-weight: 700;\r\n    transition: 0.1s background-color ease-in;\r\n  }\r\n  #compound:hover {\r\n    background-color: var(--main-complement);\r\n  }\r\n  #ww {\r\n    height: 100%;\r\n    overflow: auto;\r\n  }\r\n  #missing {\r\n    width: 100%;\r\n    height: 80%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  #missing div {\r\n    font-size: 50px;\r\n    color: var(--main-complement);\r\n    font-family: 'Comfortaa', cursive;\r\n    font-weight: 700;\r\n  }\r\n  #main {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: var(--main-dark);\r\n    display: flex;\r\n  }\r\n  .wrap {\r\n    padding: 5px 10px;\r\n    margin: 5px;\r\n    border-radius: 5px;\r\n    background-color: var(--main-bg-second);\r\n  }\r\n  #etymology {\r\n    padding-left: 21px;\r\n  }\r\n  #dot {\r\n    position: absolute; \r\n    font-size: 25px; \r\n    margin-left: 12px;\r\n  }\r\n  details {\r\n    position: relative;\r\n  }\r\n  details[open] summary {\r\n    margin-bottom: 5px;\r\n  }\r\n  #header {\r\n    display: flex;\r\n    padding: 5px;\r\n  }\r\n  #external {\r\n    float: right;\r\n  }\r\n  #wrap {\r\n    max-height: 90vh;\r\n    background-color: var(--main-bg-color);\r\n    border-radius: 8px;\r\n    padding: 5px;\r\n    min-width: 300px;\r\n    width: 100%;\r\n    margin: 50px;\r\n  }\r\n  #def-wrap {\r\n    overflow: auto;\r\n  }\r\n  #definition:not(:last-child) {\r\n    \r\n  }\r\n  #translation {\r\n    font-weight: bold;\r\n  }\r\n  #example {\r\n    border: solid 1px var(--main-dark);\r\n    padding: 5px;\r\n    padding-left: 27px;\r\n    border-radius: 5px;\r\n  }\r\n  #example:not(:last-child) {\r\n    margin-bottom: 5px;\r\n  }\r\n  #wrap {\r\n    text-align: left;\r\n  }\r\n  #word {\r\n    margin: auto 0;\r\n    font-size: 30px;\r\n    font-family: 'Comfortaa', cursive;\r\n    padding-left: 3px;\r\n    white-space: nowrap;\r\n    overflow: auto;\r\n  }\r\n  #word::-webkit-scrollbar {\r\n    height: 5px;\r\n  }\r\n\r\n  #word::-webkit-scrollbar-track {\r\n    background: var(--main-bg-second); \r\n  }\r\n\r\n  #word::-webkit-scrollbar-thumb {\r\n    border-radius: 40px;\r\n    background: var(--main-complement); \r\n  }\r\n\r\n  #word::-webkit-scrollbar-thumb:hover {\r\n    background: var(--main-vivid); \r\n  }\r\n  .additional {\r\n    color: var(--main-dark);\r\n  }\r\n</style>","<script lang=\"ts\">\r\n\timport { onMount } from \"svelte\";\r\n\r\n\timport Results from \"./components/Results.svelte\";\r\n\timport Navigate from \"./router\";\r\n\t\r\n\texport let onactive;\r\n\t\r\n\t//import type { resArray, WorkerResult } from \"./worker\";\r\n\t//import { webWorker } from \"./worker\";\r\n\r\n\tinterface sentenceObject {\r\n\t\t_id: string,\r\n\t\ttitle: string,\r\n\t\tcontent: string[],\r\n\t\tlemma: string[]\r\n\t}\r\n\r\n  let init = 0;\r\n\tlet results: Array<sentenceObject> = [];\r\n\t\r\n\tonactive.callback = () => {\r\n\t\tresults = [];\r\n\r\n\t\tconst pinned = window.localStorage.getItem(\"pinned-id\");\r\n\r\n    if (pinned) {\r\n      let list = pinned.split(\",\");\r\n      list.forEach((id) => {\r\n        const sent = window.localStorage.getItem(id);\r\n        if (!sent) console.error(\"Issue reading saved sentences!\");\r\n        results.push(JSON.parse(sent));\r\n      });\r\n      results = results;\r\n    }\r\n\r\n    init = 1;\r\n\t}\r\n\r\n\tonMount(() => {\r\n\t\tonactive.callback();\r\n\t});\r\n</script>\r\n\r\n<main>\r\n  <div id=\"header\"></div>\r\n\t{#if !results.length && init}\r\n\t\t<div id=\"missing\"><div>Du har inte sparat något!</div></div>\r\n  {:else if !init}\r\n    <div></div>\r\n\t{:else}\r\n\t\t<div id=\"results\">\r\n\t\t\t<Results results={results}/>\r\n\t\t</div>\r\n\t{/if}\r\n</main>\r\n\r\n<style>\r\n  #header {\r\n\t\theight: 90px;\r\n\t\tbackground-color: var(--main-bg-color);\r\n\t\tpadding: 20px;\r\n\t}\r\n\t#results {\r\n\t\theight: calc(100vh - 130px);\r\n\t}\r\n\t#missing {\r\n\t\twidth: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\t}\r\n\t#missing div {\r\n\t\tpadding: 30px;\r\n\t\tmargin: 100px auto;\r\n    font-size: 50px;\r\n    color: var(--main-bg-color);\r\n    font-family: 'Comfortaa', cursive;\r\n    font-weight: 700;\r\n  }\r\n\tmain {\r\n\t\theight: 100%;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\toverflow: hidden;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\t@media (min-width: 640px) {\r\n\t\tmain {\r\n\t\t\tmax-width: none;\r\n\t\t}\r\n\t}\r\n</style>","<script lang=\"ts\">\r\n\timport { onMount } from \"svelte\";\r\n\timport Dictionary from \"./dictionary\";\r\n\timport { currentWord } from \"./global\";\r\n\r\n  let init = 0;\r\n\tlet question;\r\n\tlet answered = 0;\r\n\tlet highlight = [-1, -1];\r\n\t\r\n\tfunction fetchRandom() {\r\n\t\tanswered = 0;\r\n\t\thighlight = [-1, -1];\r\n\t\tquestion = Dictionary.getQuestion();\r\n\r\n    init = 1;\r\n\t}\r\n\r\n\tfunction handleAnswer(i: number) {\r\n\t\tif (answered) {\r\n\t\t\tcurrentWord.set(question.alternatives[i]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (i == question.correct) {\r\n\t\t\thighlight = [question.correct, -1];\r\n\t\t} else {\r\n\t\t\thighlight = [question.correct, i];\r\n\t\t}\r\n\t\t\r\n\t\tcurrentWord.set(question.word);\r\n\t\tanswered = 1;\r\n\t}\r\n\r\n\tonMount(() => {\r\n\t\tfetchRandom();\r\n\t});\r\n</script>\r\n\r\n<main>\r\n  <form on:submit|preventDefault={() => { fetchRandom() }} id=\"form\" autocomplete=\"off\">\r\n\t\t<div id=\"form-wrap\">\r\n\t\t\t<div id=\"input-wrap\">\r\n\t\t\t\t<button type=\"submit\" style=\"margin: 0 20px 0 0px;\">\r\n\t\t\t\t\tny fråga\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</form>\r\n  {#if !init}\r\n    <div></div>\r\n\t{:else}\r\n\t\t<div id=\"question\">\r\n\t\t\t<div id=\"word\" on:click={() => { if (answered) currentWord.set(question.word); }}>{question.word}</div>\r\n\t\t\t<div id=\"alts\">\r\n\t\t\t\t{#each question.alternatives as alt, i}\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button class={(answered && i == highlight[0] ? \"right\" : \"\") + (answered && i == highlight[1] ? \"wrong\" : \"\")} on:click={() => handleAnswer(i)}>\r\n\t\t\t\t\t\t\t{alt}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<span id=\"checkmark\" class=\"material-symbols-outlined\">\r\n\t\t\t\t\t\t\tdone\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span id=\"errormark\" class=\"material-symbols-outlined\">\r\n\t\t\t\t\t\t\tclose\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t{/each}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t{/if}\r\n</main>\r\n\r\n<style>\r\n\t#word {\r\n\t\tmargin: 10px;\r\n\t\tpadding: 20px;\r\n\t\tfont-size: 40px;\r\n\t\tborder-radius: 10px;\r\n    color: var(--main-dark);\r\n    font-family: 'Comfortaa', cursive;\r\n\t\tbackground-color: var(--main-complement);\r\n\t\ttext-decoration: underline;\r\n\t\ttext-decoration-color: yellow;\r\n\t\ttext-decoration-thickness: 4px;\r\n\t}\r\n\t.wrong {\r\n\t\tbackground-color: var(--color-wrong) !important;\r\n\t}\r\n\t.right {\r\n\t\tbackground-color: var(--color-correct) !important;\r\n\t}\r\n\t.right + #checkmark {\r\n\t\tdisplay: block !important;\r\n\t}\r\n\t.wrong ~ #errormark {\r\n\t\tdisplay: block !important;\r\n\t}\r\n\t#question {\r\n\t\tmargin: 20px auto;\r\n\t\tbackground-color: var(--main-bg-color);\r\n\t\tborder-radius: 20px;\r\n\t\tpadding: 10px;\r\n\t\tmax-width: 530px;\r\n\t}\r\n\t#errormark,\r\n\t#checkmark {\r\n\t\tdisplay: none;\r\n\t\tpadding-left: 10px;\r\n\t}\r\n\t#form button {\r\n\t\tmargin: 0px !important;\r\n\t}\r\n\t#alts {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100%;\r\n\t\tjustify-content: center;\r\n\t}\r\n\t#alts div {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tpadding: 10px 5px;\r\n\t}\r\n\t#alts button {\r\n\t\ttransition: 0.4s ease-out background-color !important;\r\n\t}\r\n\tmain {\r\n\t\theight: 100%;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\toverflow: hidden;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\t@media (min-width: 640px) {\r\n\t\tmain {\r\n\t\t\tmax-width: none;\r\n\t\t}\r\n\t}\r\n</style>","<script lang=\"ts\">\r\n\t//export let onactive;\r\n\r\n\tconst queryLookupURL = \"https://data.mongodb-api.com/app/searchapi-pcnyg/endpoint/random\";\r\n\timport Results from \"./components/Results.svelte\";\r\n\timport CorpusPicker from \"./components/CorpusPicker.svelte\";\r\n\timport { corpusEnabled } from \"./global\";\r\n\timport { onMount } from \"svelte\";\r\n\t\r\n\t//import type { resArray, WorkerResult } from \"./worker\";\r\n\t//import { webWorker } from \"./worker\";\r\n\r\n\tlet enabled = -1;\r\n  corpusEnabled.subscribe(v => {\r\n    enabled = v;\r\n  });\r\n\r\n\tinterface sentenceObject {\r\n\t\t_id: string,\r\n\t\ttitle: string,\r\n\t\tcontent: string[],\r\n\t\tlemma: string[]\r\n\t}\r\n\r\n\tlet searching: number = 1;\r\n\r\n\tlet results: Array<sentenceObject> = [];\r\n\r\n\tasync function getRandom() {\r\n\t\tsearching = 1;\r\n\t\tresults = [];\r\n\t\t\r\n\t\tconst response = await fetch(queryLookupURL, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tcorpus: enabled\r\n\t\t\t})\r\n\t\t}).then((r) => r.json());\r\n\r\n\t\tif (results.length) return;\r\n\r\n\t\tresults = response;\r\n\t\tsearching = 0;\r\n\t}\r\n\t\r\n \tonMount(() => {\r\n\t\tgetRandom();\r\n\t});\r\n</script>\r\n\r\n<main>\r\n\t<form on:submit|preventDefault={() => { if (searching == 1) return; getRandom() }} id=\"form\" autocomplete=\"off\">\r\n\t\t<div id=\"form-wrap\">\r\n\t\t\t<div id=\"input-wrap\">\r\n\t\t\t\t<button class={searching ? \"disabled\" : \"\"} type=\"submit\" style=\"margin: 0 20px 0 0px;\">\r\n\t\t\t\t\tta slumpmässigt\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"container\">\r\n\t\t\t\t<CorpusPicker />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</form>\r\n\t{#if !results.length}\r\n\t\t<div id=\"glass-wrap\"><img src=\"svg/glass.svg\" width=\"150px\" id=\"mag-glass\"></div>\r\n\t{:else}\r\n\t\t<div id=\"results\">\r\n\t\t\t<Results results={results} />\r\n\t\t</div>\r\n\t{/if}\r\n</main>\r\n\r\n<style>\r\n\t#results {\r\n\t\theight: calc(100vh - 130px);\r\n\t}\r\n\t#missing {\r\n\t\twidth: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\t}\r\n\t@keyframes upDown {\r\n\t\tto { transform: translatey(100px);}\r\n\t}\r\n\t#input-wrap {\r\n\t\tflex: 1;\r\n\t\tdisplay: flex;\r\n\t\theight: 50px;\r\n\t}\r\n\t#glass-wrap {\r\n\t\tdisplay: flex;\r\n    justify-content: center;\r\n\t\tmargin-top: 100px;\r\n\t}\r\n\t#container {\r\n\t\tdisplay: flex;\r\n    flex-direction: column;\r\n    text-align: left;\r\n\t\tmargin-left: 10px;\r\n\t}\r\n\t#mag-glass {\r\n\t\tposition: absolute;\r\n\t\tanimation: upDown 1.5s alternate infinite ease-in-out;\r\n\t}\r\n\tmain {\r\n\t\theight: 100%;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\toverflow: hidden;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\t@media (min-width: 640px) {\r\n\t\tmain {\r\n\t\t\tmax-width: none;\r\n\t\t}\r\n\t}\r\n</style>","<script lang=\"ts\">\r\n  import Navigate from \"../router\";\r\n  export let path, component;\r\n\r\n  let active = {\r\n    callback: () => {}\r\n  }\r\n\r\n  let c_path = \"\";\r\n\r\n\tNavigate.currentPath.subscribe(value => {\r\n\t\tc_path = value;\r\n\r\n    if (\"#\" + path == c_path) {\r\n      active.callback();\r\n    }\r\n\t});\r\n</script>\r\n\r\n<main class={\"#\" + path != c_path ? \"hidden\" : \"\"}>\r\n  <svelte:component this={component} onactive={active}/>\r\n</main>\r\n\r\n<style>\r\n  .hidden {\r\n    display: none;\r\n  }\r\n  main {\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n</style>","<script lang=\"ts\">\r\n  import Navigate from \"../router\";\r\n  export let to: string;\r\n\r\n  function handleClick() {\r\n    Navigate.goto(to);\r\n  }\r\n</script>\r\n\r\n<main on:mousedown={handleClick}>\r\n  <slot></slot>\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    cursor: pointer;\r\n  }\r\n</style>","<script lang=\"ts\">\r\n\timport Search from \"./Search.svelte\";\r\n\timport Home from \"./Home.svelte\";\r\n\timport Word from \"./Word.svelte\";\r\n\timport Saved from \"./Saved.svelte\";\r\n\timport Synonym from \"./Synonym.svelte\";\r\n\timport Quiz from \"./Quiz.svelte\";\r\n\r\n\timport Navigate from \"./router\";\r\n\timport Route from \"./components/Route.svelte\";\r\n\timport Link from \"./components/Link.svelte\";\r\n\timport Dictionary from \"./dictionary\";\r\n\timport { onMount } from \"svelte\";\r\n\timport { corpusEnabled } from \"./global\";\r\n\r\n\tif (!window.indexedDB) {\r\n\t\talert(\"Your browser doesn't support a stable version of IndexedDB!\");\r\n\t}\r\n\r\n\tconst routes = [\r\n\t\t[\"\", \"home\"],\r\n\t\t[\"search\", \"manage_search\"],\r\n\t\t[\"saved\", \"folder_open\"],\r\n\t\t[\"reader\", \"subject\"],\r\n\t\t[\"quiz\", \"quiz\"],\r\n\t\t[\"synonym\", \"drive_file_rename_outline\"]\r\n\t]\r\n\r\n\tlet path = \"\";\r\n\tNavigate.currentPath.subscribe(value => {\r\n\t\tpath = value;\r\n\t})\r\n\r\n\tlet init = Dictionary.init();\r\n\r\n\tlet resizer;\r\n\tlet leftSide;\r\n\tlet rightSide;\r\n\r\n\tlet x = 0;\r\n\r\n\tlet leftSideWidth = 60;\r\n\tlet leftWidth = 0;\r\n\r\n\tfunction handleDrag(e) {\r\n\t\tresizer = e.target;\r\n\t\tleftSide = resizer.previousElementSibling;\r\n\t\trightSide = resizer.nextElementSibling;\r\n\r\n\t\tx = e.clientX;\r\n    leftWidth = leftSide.getBoundingClientRect().width;\r\n\r\n    // Attach the listeners to `document`\r\n    document.addEventListener('mousemove', mouseMoveHandler);\r\n    document.addEventListener('mouseup', mouseUpHandler);\r\n\t}\r\n\r\n\tconst mouseMoveHandler = function(e) {\r\n\t\tresizer.style.cursor = 'col-resize';\r\n\t\tdocument.body.style.cursor = 'col-resize';\r\n\r\n\t\tconst dx = e.clientX - x;\r\n\r\n\t\tconst newLeftWidth = Math.max(10, Math.min(90, ((leftWidth + dx) * 100) / resizer.parentNode.getBoundingClientRect().width));\r\n\t\tleftSideWidth = newLeftWidth;\r\n\r\n\t\tleftSide.style.userSelect = 'none';\r\n    leftSide.style.pointerEvents = 'none';\r\n\r\n    rightSide.style.userSelect = 'none';\r\n    rightSide.style.pointerEvents = 'none';\r\n\t};\r\n\r\n\tconst mouseUpHandler = function () {\r\n\t\tresizer.style.removeProperty('cursor');\r\n    document.body.style.removeProperty('cursor');\r\n\r\n    leftSide.style.removeProperty('user-select');\r\n    leftSide.style.removeProperty('pointer-events');\r\n\r\n    rightSide.style.removeProperty('user-select');\r\n    rightSide.style.removeProperty('pointer-events');\r\n\r\n    document.removeEventListener('mousemove', mouseMoveHandler);\r\n    document.removeEventListener('mouseup', mouseUpHandler);\r\n\t};\r\n\r\n\tonMount(() => {\r\n\t\tNavigate.init();\r\n\t\tconst params = Navigate.getParams();\r\n\r\n\t\tif (params.corpus != undefined && !isNaN(Number(params.corpus))) {\r\n\t\t\tcorpusEnabled.set(Number(params.corpus));\r\n\t\t}\r\n\t});\r\n</script>\r\n\r\n<div id=\"body\">\r\n\t<div id=\"sidebar\">\r\n\t\t<div id=\"top\"></div>\r\n\t\t{#each routes as route}\r\n\t\t\t<div id=\"link\" class={path == (\"#\" + route[0]) ? \"active\" : \"\"}><Link to={route[0]}><span class=\"logo material-symbols-outlined\">{route[1]}</span></Link></div>\r\n\t\t{/each}\r\n\t\t<div id=\"bottom\"></div>\r\n\t</div>\r\n\t<main id=\"main\">\r\n\t\t{#await init}\r\n\t\t\t<div id=\"missing\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\tladdar...\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t{:then}\r\n\t\t\t<div style=\"width: {leftSideWidth}%\">\r\n\t\t\t\t<Route path=\"\" component={Home} />\r\n\t\t\t\t<Route path=\"search\" component={Search} />\r\n\t\t\t\t<Route path=\"saved\" component={Saved} />\r\n\t\t\t\t<Route path=\"quiz\" component={Quiz} />\r\n\t\t\t\t<Route path=\"synonym\" component={Synonym} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"pane-divider\" on:mousedown={handleDrag}></div>\r\n\r\n\t\t\t<div style=\"flex: 1;\">\r\n\t\t\t\t<Word />\r\n\t\t\t</div>\r\n\t\t{/await}\r\n\t</main>\r\n</div>\r\n\r\n<style>\r\n\t#missing {\r\n\t\twidth: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\t}\r\n\t#missing div {\r\n\t\tmargin: auto;\r\n    font-size: 50px;\r\n    color: var(--main-bg-color);\r\n    font-family: 'Comfortaa', cursive;\r\n    font-weight: 700;\r\n  }\r\n\t#main {\r\n\t\toverflow: auto;\r\n\t\tflex: 1;\r\n\t\tbackground-color: var(--main-complement);\r\n\t\tdisplay: flex;\r\n\t}\r\n\t#top {\r\n\t\twidth: 100%; \r\n\t\theight: 25px; \r\n\t}\r\n\t#pane-divider {\r\n\t\tcursor: ew-resize;\r\n\t\theight: 100%;\r\n\t\twidth: 10px;\r\n\t\tbackground-color: var(--main-bg-color);\r\n\t}\r\n\t#bottom {\r\n\t\tflex: 1;\r\n\t}\r\n\t.logo {\r\n\t\tcolor: var(--main-dark);\r\n\t\tfont-size: 60px !important;\r\n\t\tuser-select: none;\r\n\t\tmargin-top: 13px;\r\n\t}\r\n\t#link {\r\n\t\theight: 90px;\r\n\t\ttext-align: center;\r\n\t\tmargin: 5px;\r\n\t\tpadding: 0px;\r\n\t\ttransition: 0.06s all ease-in;\r\n\t}\r\n\t#link:not(.active):hover {\r\n\t\tbackground-color: var(--main-bg-second);\r\n\t\tborder-radius: 20px;\r\n\t}\r\n\t.active {\r\n\t\tborder-radius: 20px 0 0 20px !important;\r\n\t\tmargin-right: 0px !important;\r\n\t\tpadding-right: 5px !important;\r\n\t\tbackground-color: var(--main-complement) !important;\r\n\t\ttransition: 0.1s all ease-in !important;\r\n\t}\r\n\t#sidebar {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100px;\r\n\t\theight: 100vh;\r\n\t\tbackground: var(--main-bg-color);\r\n\t}\r\n\t#body {\r\n\t\tdisplay: flex;\r\n\t}\r\n</style>","import App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body,\r\n    props: {\r\n        name: 'world'\r\n    }\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","removeProperty","setProperty","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","createEventDispatcher","type","detail","cancelable","callbacks","bubbles","e","createEvent","initCustomEvent","custom_event","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","subscribe","invalidate","size","encodeParams","c_params","x","Router","currentPath","getPath","match","window","location","href","getFullPath","split","decodeURI","getParams","parsed","str","pair","goto","dest","params","origin","setParam","param","old_params","c_path","replace","router","updatePath","isExtraCharacter","isPunctuation","span","t0","t0_value","t2_value","_id","t5_value","title","each_value","content","main","div4","div0","div3","div1","div2","span0","span1","t2","t5","punctuationRegex","extraCharacterRegex","word","test","dispatch","sentence","highlight","pinned","copySentence","navigator","clipboard","writeText","join","checkPin","_pinned","localStorage","getItem","undefined","Navigation","setTimeout","lemma","j","$$invalidate","currentWord","queryWord","corpusList","corpusEnabled","sentence_changes","each_blocks","results","pinSentence","sent","pinnedIds","setItem","removeItem","JSON","stringify","div0_class_value","enabled","v","Navigate","div","create_if_block_1","create_if_block_2","form","input","button","queryInput","searching","highlightLookup","query","async","checkQuery","q","alert","trim","corpus","lookupQuery","response","fetch","method","headers","body","json","_q","toLowerCase","findIndex","f","fp","$$value","Dictionary","loaded","db","wordList","synonymList","fetchWordList","wl","writeWordList","fetchSynonymList","writeSynonymList","shift","correct","alternatives","initDb","request","indexedDB","open","upgradeNeeded","onupgradeneeded","result","createObjectStore","keyPath","proceed","onerror","console","error","onsuccess","errorCode","fetchDb","objectStore","get","writeDb","put","writeDictionary","raw","catch","err","transaction","oncomplete","log","t","def","Buf","buf","s","pos","current_symbol","parse","etymology","getTypeName","matchParts","bestMatch","longest","realLongest","fix","matching","last","getQuestion","Math","floor","random","getCompound","w","compounds","remaining","lookup","finish","div6","create_if_block_4","div5","button0","button1","if_block","t_value","each_value_2","details","summary","english","t4","t4_value","each_value_3","create_if_block_3","each_value_1","hr","create_if_block","compound","searchWord","openDictionary","_def","c_word","onactive","id","button_class_value","question","answered","fetchRandom","handleAnswer","getRandom","path","active","slot_ctx","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","merged","len","max","to","div_class_value","current","Home","Search","Saved","Quiz","Synonym","promise","info","token","resolved","child_ctx","needs_flush","blocks","mount","hasCatch","pending","resizer","leftSide","rightSide","leftSideWidth","leftWidth","mouseMoveHandler","cursor","dx","clientX","newLeftWidth","min","getBoundingClientRect","width","userSelect","pointerEvents","mouseUpHandler","isNaN","Number","previousElementSibling","nextElementSibling"],"mappings":"gCAAA,SAASA,IAAU,CAgBnB,SAASC,EAAIC,GACT,OAAOA,GACX,CACA,SAASC,IACL,OAAOC,OAAOC,OAAO,KACzB,CACA,SAASC,EAAQC,GACbA,EAAIC,QAAQP,EAChB,CACA,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,CAClB,CACA,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,CAChF,CAyCA,SAASE,EAAiBC,EAAYC,EAAKC,EAASf,GAChD,OAAOa,EAAW,IAAMb,EAtE5B,SAAgBgB,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,CACX,CAkEUG,CAAOJ,EAAQD,IAAIM,QAASP,EAAW,GAAGb,EAAGc,KAC7CC,EAAQD,GAClB,CAuEA,SAASO,EAAcC,GACnB,OAAgB,MAATA,EAAgB,GAAKA,CAChC,CA+JA,SAASC,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,EACvB,CAmDA,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,KACxC,CASA,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,EAChC,CACA,SAASQ,EAAaC,EAAYC,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,GAAK,EACpCF,EAAWE,IACXF,EAAWE,GAAGE,EAAEH,EAE5B,CACA,SAASI,EAAQC,GACb,OAAOC,SAASC,cAAcF,EAClC,CAmBA,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,EACnC,CACA,SAASE,IACL,OAAOH,EAAK,IAChB,CACA,SAASI,IACL,OAAOJ,EAAK,GAChB,CACA,SAASK,EAAOvB,EAAMwB,EAAOC,EAASC,GAElC,OADA1B,EAAK2B,iBAAiBH,EAAOC,EAASC,GAC/B,IAAM1B,EAAK4B,oBAAoBJ,EAAOC,EAASC,EAC1D,CACA,SAASG,EAAgBtD,GACrB,OAAO,SAAUiD,GAGb,OAFAA,EAAMM,iBAECvD,EAAGwD,KAAKC,KAAMR,EAC7B,CACA,CAsBA,SAASS,EAAKjC,EAAMkC,EAAWrC,GACd,MAATA,EACAG,EAAKmC,gBAAgBD,GAChBlC,EAAKoC,aAAaF,KAAerC,GACtCG,EAAKqC,aAAaH,EAAWrC,EACrC,CAoLA,SAASyC,EAASpB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKqB,YAAcpB,IACnBD,EAAKC,KAAOA,EACpB,CAYA,SAASqB,EAAUxC,EAAMyC,EAAK5C,EAAO6C,GACnB,OAAV7C,EACAG,EAAK2C,MAAMC,eAAeH,GAG1BzC,EAAK2C,MAAME,YAAYJ,EAAK5C,EAAO6C,EAAY,YAAc,GAErE,CAwSA,IAAII,EACJ,SAASC,EAAsBC,GAC3BF,EAAoBE,CACxB,CACA,SAASC,IACL,IAAKH,EACD,MAAM,IAAII,MAAM,oDACpB,OAAOJ,CACX,CAIA,SAASK,EAAQ5E,GACb0E,IAAwBG,GAAGC,SAASC,KAAK/E,EAC7C,CAOA,SAASgF,IACL,MAAMP,EAAYC,IAClB,MAAO,CAACO,EAAMC,GAAUC,cAAa,GAAU,MAC3C,MAAMC,EAAYX,EAAUI,GAAGO,UAAUH,GACzC,GAAIG,EAAW,CAGX,MAAMnC,EApPlB,SAAsBgC,EAAMC,GAAQG,QAAEA,GAAU,EAAKF,WAAEA,GAAa,GAAU,IAC1E,MAAMG,EAAI7C,SAAS8C,YAAY,eAE/B,OADAD,EAAEE,gBAAgBP,EAAMI,EAASF,EAAYD,GACtCI,CACX,CAgP0BG,CAAaR,EAAMC,EAAQ,CAAEC,eAI3C,OAHAC,EAAUhE,QAAQd,SAAQN,IACtBA,EAAGwD,KAAKiB,EAAWxB,EAAM,KAErBA,EAAMyC,gBACjB,CACD,OAAO,CAAI,CAEnB,CAyBA,MAAMC,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoBnG,GACzB6F,EAAiBd,KAAK/E,EAC1B,CAsBA,MAAMoG,EAAiB,IAAIC,IAC3B,IAAIC,EAAW,EACf,SAASC,IACL,MAAMC,EAAkBjC,EACxB,EAAG,CAGC,KAAO+B,EAAWX,EAAiBtD,QAAQ,CACvC,MAAMoC,EAAYkB,EAAiBW,GACnCA,IACA9B,EAAsBC,GACtBgC,EAAOhC,EAAUI,GACpB,CAID,IAHAL,EAAsB,MACtBmB,EAAiBtD,OAAS,EAC1BiE,EAAW,EACJV,EAAkBvD,QACrBuD,EAAkBc,KAAlBd,GAIJ,IAAK,IAAIxD,EAAI,EAAGA,EAAIyD,EAAiBxD,OAAQD,GAAK,EAAG,CACjD,MAAMuE,EAAWd,EAAiBzD,GAC7BgE,EAAeQ,IAAID,KAEpBP,EAAeS,IAAIF,GACnBA,IAEP,CACDd,EAAiBxD,OAAS,CAClC,OAAasD,EAAiBtD,QAC1B,KAAOyD,EAAgBzD,QACnByD,EAAgBY,KAAhBZ,GAEJI,GAAmB,EACnBE,EAAeU,QACftC,EAAsBgC,EAC1B,CACA,SAASC,EAAO5B,GACZ,GAAoB,OAAhBA,EAAGkC,SAAmB,CACtBlC,EAAG4B,SACHrG,EAAQyE,EAAGmC,eACX,MAAMC,EAAQpC,EAAGoC,MACjBpC,EAAGoC,MAAQ,EAAE,GACbpC,EAAGkC,UAAYlC,EAAGkC,SAASG,EAAErC,EAAG/D,IAAKmG,GACrCpC,EAAGsC,aAAa7G,QAAQ6F,EAC3B,CACL,CAeA,MAAMiB,EAAW,IAAIf,IACrB,IAAIgB,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHC,EAAG,GACHN,EAAGG,EAEX,CACA,SAASI,IACAJ,EAAOE,GACRnH,EAAQiH,EAAOG,GAEnBH,EAASA,EAAOH,CACpB,CACA,SAASQ,EAAcC,EAAOC,GACtBD,GAASA,EAAMvF,IACfgF,EAASS,OAAOF,GAChBA,EAAMvF,EAAEwF,GAEhB,CACA,SAASE,EAAeH,EAAOC,EAAO9F,EAAQ6E,GAC1C,GAAIgB,GAASA,EAAMI,EAAG,CAClB,GAAIX,EAASR,IAAIe,GACb,OACJP,EAASP,IAAIc,GACbN,EAAOG,EAAEzC,MAAK,KACVqC,EAASS,OAAOF,GACZhB,IACI7E,GACA6F,EAAMrF,EAAE,GACZqE,IACH,IAELgB,EAAMI,EAAEH,EACX,MACQjB,GACLA,GAER,CA6pBA,SAASqB,EAAiBL,GACtBA,GAASA,EAAMH,GACnB,CAIA,SAASS,EAAgBxD,EAAWjD,EAAQI,EAAQsG,GAChD,MAAMnB,SAAEA,EAAQjC,SAAEA,EAAQqD,WAAEA,EAAUhB,aAAEA,GAAiB1C,EAAUI,GACnEkC,GAAYA,EAASqB,EAAE5G,EAAQI,GAC1BsG,GAED/B,GAAoB,KAChB,MAAMkC,EAAiBvD,EAASwD,IAAIvI,GAAKwI,OAAOhI,GAC5C4H,EACAA,EAAWpD,QAAQsD,GAKnBjI,EAAQiI,GAEZ5D,EAAUI,GAAGC,SAAW,EAAE,IAGlCqC,EAAa7G,QAAQ6F,EACzB,CACA,SAASqC,EAAkB/D,EAAWtC,GAClC,MAAM0C,EAAKJ,EAAUI,GACD,OAAhBA,EAAGkC,WACH3G,EAAQyE,EAAGsD,YACXtD,EAAGkC,UAAYlC,EAAGkC,SAASzE,EAAEH,GAG7B0C,EAAGsD,WAAatD,EAAGkC,SAAW,KAC9BlC,EAAG/D,IAAM,GAEjB,CACA,SAAS2H,EAAWhE,EAAWrC,IACI,IAA3BqC,EAAUI,GAAGoC,MAAM,KACnBtB,EAAiBZ,KAAKN,GA10BrByB,IACDA,GAAmB,EACnBH,EAAiB2C,KAAKnC,IA00BtB9B,EAAUI,GAAGoC,MAAM0B,KAAK,IAE5BlE,EAAUI,GAAGoC,MAAO7E,EAAI,GAAM,IAAO,GAAMA,EAAI,EACnD,CACA,SAASwG,EAAKnE,EAAWtB,EAAS0F,EAAUC,EAAiBC,EAAWC,EAAOC,EAAehC,EAAQ,EAAE,IACpG,MAAMiC,EAAmB3E,EACzBC,EAAsBC,GACtB,MAAMI,EAAKJ,EAAUI,GAAK,CACtBkC,SAAU,KACVjG,IAAK,KAELkI,QACAvC,OAAQ3G,EACRiJ,YACAI,MAAOlJ,IAEP6E,SAAU,GACVqD,WAAY,GACZiB,cAAe,GACfpC,cAAe,GACfG,aAAc,GACdkC,QAAS,IAAIC,IAAInG,EAAQkG,UAAYH,EAAmBA,EAAiBrE,GAAGwE,QAAU,KAEtFjE,UAAWnF,IACXgH,QACAsC,YAAY,EACZC,KAAMrG,EAAQ3B,QAAU0H,EAAiBrE,GAAG2E,MAEhDP,GAAiBA,EAAcpE,EAAG2E,MAClC,IAAIC,GAAQ,EAkBZ,GAjBA5E,EAAG/D,IAAM+H,EACHA,EAASpE,EAAWtB,EAAQ6F,OAAS,CAAE,GAAE,CAAC5G,EAAGsH,KAAQC,KACnD,MAAMrI,EAAQqI,EAAKtH,OAASsH,EAAK,GAAKD,EAOtC,OANI7E,EAAG/D,KAAOiI,EAAUlE,EAAG/D,IAAIsB,GAAIyC,EAAG/D,IAAIsB,GAAKd,MACtCuD,EAAG0E,YAAc1E,EAAGsE,MAAM/G,IAC3ByC,EAAGsE,MAAM/G,GAAGd,GACZmI,GACAhB,EAAWhE,EAAWrC,IAEvBsH,CAAG,IAEZ,GACN7E,EAAG4B,SACHgD,GAAQ,EACRrJ,EAAQyE,EAAGmC,eAEXnC,EAAGkC,WAAW+B,GAAkBA,EAAgBjE,EAAG/D,KAC/CqC,EAAQ3B,OAAQ,CAChB,GAAI2B,EAAQyG,QAAS,CAEjB,MAAMC,EA33ClB,SAAkBtH,GACd,OAAOuH,MAAMC,KAAKxH,EAAQyH,WAC9B,CAy3C0BC,CAAS9G,EAAQ3B,QAE/BqD,EAAGkC,UAAYlC,EAAGkC,SAASmD,EAAEL,GAC7BA,EAAMvJ,QAAQwB,EACjB,MAGG+C,EAAGkC,UAAYlC,EAAGkC,SAASS,IAE3BrE,EAAQgH,OACRzC,EAAcjD,EAAUI,GAAGkC,UAC/BkB,EAAgBxD,EAAWtB,EAAQ3B,OAAQ2B,EAAQvB,OAAQuB,EAAQ+E,eAEnE3B,GACH,CACD/B,EAAsB0E,EAC1B,CAiDA,MAAMkB,EACFC,WACI7B,EAAkB/E,KAAM,GACxBA,KAAK4G,SAAWvK,CACnB,CACDwK,IAAIrF,EAAM0B,GACN,MAAMvB,EAAa3B,KAAKoB,GAAGO,UAAUH,KAAUxB,KAAKoB,GAAGO,UAAUH,GAAQ,IAEzE,OADAG,EAAUL,KAAK4B,GACR,KACH,MAAM4D,EAAQnF,EAAUoF,QAAQ7D,IACjB,IAAX4D,GACAnF,EAAUqF,OAAOF,EAAO,EAAE,CAErC,CACDG,KAAKC,GA15DT,IAAkBC,EA25DNnH,KAAKoH,QA35DCD,EA25DkBD,EA15DG,IAA5BzK,OAAO4K,KAAKF,GAAKvI,UA25DhBoB,KAAKoB,GAAG0E,YAAa,EACrB9F,KAAKoH,MAAMF,GACXlH,KAAKoB,GAAG0E,YAAa,EAE5B,ECv8DL,MAAMwB,EAAmB,GAgBzB,SAASC,EAAS1J,EAAO2J,EAAQnL,GAC7B,IAAIoL,EACJ,MAAMC,EAAc,IAAI9E,IACxB,SAAS+E,EAAIC,GACT,GAAI5K,EAAea,EAAO+J,KACtB/J,EAAQ+J,EACJH,GAAM,CACN,MAAMI,GAAaP,EAAiB1I,OACpC,IAAK,MAAMkJ,KAAcJ,EACrBI,EAAW,KACXR,EAAiBhG,KAAKwG,EAAYjK,GAEtC,GAAIgK,EAAW,CACX,IAAK,IAAIlJ,EAAI,EAAGA,EAAI2I,EAAiB1I,OAAQD,GAAK,EAC9C2I,EAAiB3I,GAAG,GAAG2I,EAAiB3I,EAAI,IAEhD2I,EAAiB1I,OAAS,CAC7B,CACJ,CAER,CAmBD,MAAO,CAAE+I,MAAK3E,OAlBd,SAAgBzG,GACZoL,EAAIpL,EAAGsB,GACV,EAgBqBkK,UAftB,SAAmBzL,EAAK0L,EAAa3L,GACjC,MAAMyL,EAAa,CAACxL,EAAK0L,GAMzB,OALAN,EAAYtE,IAAI0E,GACS,IAArBJ,EAAYO,OACZR,EAAOD,EAAMG,IAAQtL,GAEzBC,EAAIuB,GACG,KACH6J,EAAYtD,OAAO0D,GACM,IAArBJ,EAAYO,OACZR,IACAA,EAAO,KACV,CAER,EAEL,CCzDA,SAASS,EAAazE,GACpB,IAAI0E,EAAW,IACf,MAAMd,EAAO5K,OAAO4K,KAAK5D,GAMzB,OALI4D,GACFA,EAAKxK,SAASuL,IACZD,GAAYC,EAAI,IAAM3E,EAAE2E,GAAK,GAAG,IAG7BD,EAASxK,MAAM,EAAGwK,EAASvJ,OAAS,EAC7C,CAEA,MAAMyJ,EAAS,CACbC,YAAaf,EAAS,KACtBgB,QAAS,WAEP,IAAIC,GADMC,OAAOC,SAASC,KAAO,KACnBH,MAAM,kBACpB,OAAQA,GAASA,EAAM5J,OAAS,GAAM4J,EAAM,GAAKA,EAAM,GAAW,EACnE,EACDI,YAAa,WAEX,IAAIJ,GADMC,OAAOC,SAASC,KAAO,KACnBH,MAAM,cACpB,OAAOA,EAAQA,EAAM,GAAGK,MAAM,KAAKhE,KAAIuD,GAAKU,UAAUV,KAAM,EAC7D,EACDW,UAAW,WACT,IAAIC,EAAS,CAAA,EAEb,IAAIR,EADMC,OAAOC,SAASC,KACZH,MAAM,UACpB,MAAMS,EAAOT,EAAQA,EAAM,GAAK,GAChC,OAAKS,GACLA,EAAIJ,MAAM,KAAKhM,SAAQuL,IACrB,MAAMc,EAAOd,EAAES,MAAM,KACrBG,EAAOE,EAAK,IAAMA,EAAK,EAAE,IAEpBF,GALU,EAMlB,EACDG,KAAM,SAASC,EAAMC,EAAS,GACd,GAAVA,IACFA,EAASrJ,KAAK+I,aAEhB,IAAIZ,EAAWD,EAAamB,GAC5BZ,OAAOC,SAASC,KAAOF,OAAOC,SAASY,OAAS,KAAOF,EAAOjB,CAC/D,EACDoB,SAAU,SAASC,EAAO3L,GACxB,IAAI4L,EAAazJ,KAAK+I,YAEtBU,EAAWD,GAAS3L,EAEpB,IAAIsK,EAAWD,EAAauB,GAExBC,EAAS1J,KAAKuI,UACJ,IAAVmB,GAA0B,KAAVA,IAIpBjB,OAAOC,SAASC,KAAOF,OAAOC,SAASC,KAAKgB,QAAQ,UAAW,IAAMxB,EACtE,EACDhD,KAAM,WACJ,IAAIyE,EAAS5J,KACb,SAAS6J,IACP,IAAIH,EAASE,EAAOrB,UACpBqB,EAAOtB,YAAYX,IAAI+B,EACxB,CAUD,OATAjB,OAAO9I,iBAAiB,YAAY,KAClCkK,GAAY,IAGQ,IAAlB7J,KAAKuI,UACPvI,KAAKmJ,KAAK,IAEVU,IAEK,CACR,oGCdQxM,EAAI,IAAA,+GADqJyM,GAAiBzM,EAAQ,KAAA,YAAc,KAAS0M,GAAc1M,EAAI,KAAI,wBAA0B,KAASA,EAAS,IAAIA,EAAI,IAAA,YAAc,KAAE,0BAAtSa,EAEOH,EAAAiM,EAAA7L,wDAFgGd,EAAW,qBAAmBA,EAAW,mCAC7IA,EAAI,IAAA,KAAAiD,EAAA2J,EAAAC,kBADqJJ,GAAiBzM,EAAQ,KAAA,YAAc,KAAS0M,GAAc1M,EAAI,KAAI,wBAA0B,KAASA,EAAS,IAAIA,EAAI,IAAA,YAAc,KAAE,uHAMtR8M,EAAA9M,KAAS+M,IAAG,GACNC,EAAAhN,KAASiN,MAAK,GAR/BC,EAAAlN,KAASmN,6BAAd5L,OAAID,GAAA,sIAOO,oCACI,uCAEkJ,0PAA/CtB,EAAM,GAAG,gBAAkB,mBAAiB,+KAdtKa,EAiBOH,EAAA0M,EAAAtM,GAhBLL,EAeM2M,EAAAC,GAdJ5M,EAOM4M,EAAAC,qDACN7M,EAGM4M,EAAAE,GAFJ9M,EAAqC8M,EAAAC,wBACrC/M,EAA6C8M,EAAAE,wBAE/ChN,EAAoL4M,EAAAK,iBACtLjN,EAAmH4M,EAAAM,kFAXxGT,EAAAlN,KAASmN,gBAAd5L,OAAID,GAAA,EAAA,kHAAJC,OAOgB,EAAA4E,GAAA2G,KAAAA,EAAA9M,KAAS+M,IAAG,KAAA9J,EAAA2K,EAAAd,GACN,EAAA3G,GAAA6G,KAAAA,EAAAhN,KAASiN,MAAK,KAAAhK,EAAA4K,EAAAb,uDAE8EhN,EAAM,GAAG,gBAAkB,mBAAiB,2EA/D/J,MAAA8N,GAAmB,iBACnBC,GAAsB,mCAYnB,SAAArB,GAAcsB,UACfF,GAAiBG,KAAKD,GAGrB,SAAAvB,GAAiBuB,UAClBD,GAAoBE,KAAKD,sBApB1B,MAAAE,EAAWhK,iBAKNiK,EAAwBC,UAAEA,GAAS,GAAKvE,EAChDwE,GAAc,WAyBTC,IACRC,UAAUC,UAAUC,UAAUN,EAAShB,QAAQuB,KAAK,eAG5CC,UACFC,EAAUxD,OAAOyD,aAAaC,QAAQX,EAASpB,SACrDsB,EAAoBU,MAAXH,GAGVI,EAAW/D,YAAYP,WAAS,KAC/BuE,iBACCN,GAAQ,GACN,MAGJ7K,GAAO,KACN6K,GAAQ,uGAxBC,SAAYnK,GACnB0J,EAAS,YAAa1J,EAAE9D,SAGjB,SAAY8D,GACnB0J,EAAS,YAAa,aA4BeA,EAAS,aAAeC,EAASe,MAAMC,IAAMnB,QAS1DE,EAAS,gBAAiBkB,EAAA,EAAAf,GAAU,EAAC,OACvCC,GAAY,yFCnE/B,MAAMe,GAAcnF,GAAU,GACxBoF,GAAYpF,EAAS,IAC3B,IAAIqF,GAAa,CAAC,YAAa,UAAW,eACtCC,GAAgBtF,EAAS,0HCgDqDlK,EAAG,GAAaoO,UAAApO,KAAUA,EAAC,gFAAlDA,EAAW,wFAAYA,EAAG,IAAa,EAAAmG,IAAAsJ,EAAArB,UAAApO,KAAUA,EAAC,wHAD5GA,EAAO,wBAAZuB,OAAID,GAAA,+JADPT,EAIOH,EAAA0M,EAAAtM,kFAHCd,EAAO,WAAZuB,OAAID,GAAA,EAAA,2GAAJC,OAAID,EAAAoO,EAAAnO,OAAAD,GAAA,yCAAJC,OAAID,GAAA,yIArCKqO,EAAO,IAAA9F,aACPuE,EAAS,IAAAvE,EASX,SAAA+F,EAAYtO,SACduO,EAAOF,EAAQrO,GAEjB,IAAAwO,EAAY1E,OAAOyD,aAAaC,QAAQ,gBAExCgB,EAAS,CACR,IAAAlQ,EAAIkQ,EAAUtE,MAAM,MAEd,GADF5L,EAAE8J,QAAQmG,EAAK9C,MAEtB3B,OAAOyD,aAAakB,QAAQ,YAAanQ,EAAE6H,QAAOsD,GAAKA,GAAK8E,EAAK9C,MAAK2B,KAAK,MAC3EtD,OAAOyD,aAAamB,WAAWH,EAAK9C,OAEpC3B,OAAOyD,aAAakB,QAAQ,YAAaD,EAAY,IAAMD,EAAK9C,KAChE3B,OAAOyD,aAAakB,QAAQF,EAAK9C,IAAKkD,KAAKC,UAAUL,UAGtDzE,OAAOyD,aAAakB,QAAQ,YAAaF,EAAK9C,KAC9C3B,OAAOyD,aAAakB,QAAQF,EAAK9C,IAAKkD,KAAKC,UAAUL,IAIvD/L,GAAO,sGA5BE,SAAYU,GAIpB6K,GAAY/E,IAAI9F,EAAEJ,WA+Be9C,GAAAsO,EAAYtO,+LCtCxCtB,EAAC,GAAA,mHADqD4C,EAAA0K,EAAA,QAAA6C,EAAA5P,EAAAP,EAAW,IAAAA,EAAI,GAAA,UAAY,IAAE,oFADtFa,EAGMH,EAAA+M,EAAA3M,GAFJL,EAAwIgN,EAAAD,GAAxG/M,EAAkG+M,EAAAF,+DAA3E,EAAAnH,GAAAgK,KAAAA,EAAA5P,EAAAP,EAAW,IAAAA,EAAI,GAAA,UAAY,IAAE,mFAFjFuP,wBAALhO,OAAID,GAAA,yFADRT,EAOOH,EAAA0M,EAAAtM,4EANEyO,WAALhO,OAAID,GAAA,EAAA,mHAAJC,0DARE,IAAA6O,GAAW,EACfZ,GAAc9E,WAAU2F,IACtBjB,EAAA,EAAAgB,EAAUC,GACVC,EAASpE,SAAS,SAAUkE,EAAO,iBAOuEZ,GAAclF,IAAIhJ,EAAC,4HC8G5GtB,EAAO,aAAaA,EAAe,iGADtDa,EAEMH,EAAA6P,EAAAzP,uDADad,EAAO,sBAAaA,EAAe,yIAPjD,OAAa,GAAbA,KAAcwQ,GAEI,GAAbxQ,KAAcyQ,QAAd,gYACT5P,EAAiFH,EAAA6P,EAAAzP,8LAFjFD,EAAwDH,EAAA8M,EAAA1M,4HAFpD,OAAAd,KAAQuB,SAAM,uHAbuE,mHAAzEvB,EAAS,GAAG,WAAa,sQAL5Ca,EA6BOH,EAAA0M,EAAAtM,GA5BNL,EAgBO2M,EAAAsD,GAfNjQ,EAcMiQ,EAAAjD,GAbLhN,EAKMgN,EAAAH,GAJL7M,EAAkE6M,EAAAqD,kBAClElQ,EAES6M,EAAAsD,iBAMVnQ,EAEMgN,EAAAD,6DAX8CxN,EAAa,4DACjDA,EAAS,GAAG,WAAa,2SA3FvC,IAYA6Q,EAZAT,GAAW,EACdZ,GAAc9E,WAAU2F,IACtBD,EAAUC,CAAC,IAWV,IAAAS,EAAoB,EAGpBnB,EAAO,GACPoB,EAAe,GAEfC,EAAgB,GAYLC,eAAAC,EAAWC,MACrBA,EAAE5P,OAAS,eACd6P,MAAM,qBAGH,GAAK,IAALD,EAAO,OACX/B,EAAA,EAAAyB,EAAWrQ,MAAK4O,EAAA,EAAG4B,EAAQG,EAAEE,QAAIR,GACjCP,EAASxE,KAAK,UAAYkF,EAAK,CAC9BM,OAAQlB,IAEThB,EAAA,EAAA0B,EAAY,OACZnB,EAAO,IAED,MAAA4B,EAAcP,EAEdQ,QAAiBC,MAzDD,kEAyDqB,CAC1CC,OAAQ,OACRC,QAAO,CACN,eAAgB,oBAEjBC,KAAM3B,KAAKC,UAAS,CACnBlC,KAAMuD,EACND,OAAQlB,MAEPxI,MAAMnB,GAAMA,EAAEoL,SAEb,IAAAlC,EAAQpO,OAAR,CAEA,GAAAiQ,EAASjQ,OAAM,OACZuQ,EAAKd,EAAMe,cAEjBP,EAAShS,SAAS,CAAAgF,EAAmBlD,aAC3BA,EAAI,EAAGA,EAAIkD,EAAE2I,QAAQ5L,OAAQD,IACjB,SAAhBkD,EAAE2I,QAAQ7L,KAAekD,EAAE2I,QAAQ7L,GAAK,KAEvC,MAAAmI,EAAQjF,EAAE2I,QAAQ6E,WAAUC,GAAKA,EAAEF,eAAiBD,IAC1D1C,EAAA,EAAA2B,EAAgBzP,IAAiB,GAAVmI,EAAeA,EAAQjF,EAAE0K,MAAM8C,WAAUC,GAAKA,GAAKH,IAAEf,EAAA,IAI9E3B,EAAA,EAAAO,EAAU6B,GACVpC,EAAA,EAAA0B,EAAY,EAfM,EApCnBxB,GAAU5E,WAAUlK,IACN,IAATA,GACJ0Q,EAAW1Q,EAAK,IAoDjBsD,GAAO,WACAoO,EAAK5B,EAAS/E,kBAChB4F,EAAIe,EAAG,GAENf,GAAc,UAATe,EAAG,KAEE5B,EAAS5E,YACxBwF,EAAWC,GAAC,qBAxDJ,SAAc3M,GACtBA,EAAE/B,iBACF2M,EAAA,EAAA4B,EAAQxM,EAAE9D,OAAOF,MAAQgE,EAAE9D,OAAOF,MAAM8L,QAAQ,MAAO,gDA8DxBuE,EAAUsB,kBAHe,GAAbrB,GAAwBI,EAAWF,EAAK,yNCnGrFnQ,EAEOH,EAAA0M,EAAAtM,iGCFP,MAsBMsR,GAAa,CACjBC,OAAQ,EACRC,GAAI,CAAE,EACNC,SAAU,GACVC,YAAa,GACbC,cAAe,WACb,IAAIC,EAAK7D,aAAaC,QAAQ,YAE9B,IAAK4D,EAEH,YADA/P,KAAKgQ,gBAIMD,EAAGpG,QAAQ,KAAM,IAAId,MAAM,MACnChM,SAAQuL,IACXpI,KAAK4P,SAAStO,KAAK8G,EAAES,MAAM,KAAK,GAEnC,EACDoH,iBAAkB,WAChB,IAAIF,EAAK7D,aAAaC,QAAQ,gBAE9B,IAAK4D,EAEH,YADA/P,KAAKkQ,mBAIMH,EAAGlH,MAAM,MACjBhM,SAAQuL,IACX,IAAIvJ,EAAIuJ,EAAES,MAAM,KAChB7I,KAAK6P,YAAYvO,KAAK,CACpB+J,KAAMxM,EAAEsR,QACRC,QAASvR,EAAEsR,QACXE,aAAcxR,GACd,GAEL,EACDyR,OAAQhC,iBACN,MAAMiC,EAAUC,UAAUC,KAAK,UAC/B,IAAIC,EAAgB,EAapB,OAXAH,EAAQI,gBAAmBnR,IACzBkR,EAAgB,EAELlR,EAAMzB,OAAO6S,OAEDC,kBAAkB,aAAc,CAAEC,QAAS,QAAU,QAMjE,IAAIvO,SAASwO,IACxBR,EAAQS,QAAWnP,IACjBoP,QAAQC,MAAM,mBAAmB,EAEnCX,EAAQY,UAAa3R,IACnBQ,KAAK2P,GAAKnQ,EAAMzB,OAAO6S,OACvB5Q,KAAK2P,GAAGqB,QAAWxR,IACjByR,QAAQC,MAAM,mBAAmB1R,EAAMzB,OAAOqT,YAAY,EAE5DL,EAAQL,EAAc,CACvB,GAEJ,EACDW,QAAS/C,eAAgBgD,EAAa7Q,EAAKyC,GACzC,aAAa,IAAIX,SAASkB,IACxB,MAAM8M,EAAUe,EAAYC,IAAI9Q,GAChC8P,EAAQY,UAAY7C,gBACZpL,EAASqN,EAAQK,QACvBnN,GAAG,CACJ,GAEJ,EACD+N,QAASlD,eAAgBgD,EAAazT,GACpC,aAAa,IAAI0E,SAASkB,IACxB,MAAM8M,EAAUe,EAAYG,IAAI5T,GAChC0S,EAAQY,UAAY,KAClB1N,GAAG,EAEL8M,EAAQS,QAAWnP,IACjBoP,QAAQC,MAAMrP,EAAE,CACjB,GAEJ,EACD6P,gBAAiBpD,iBACf,IAAIqD,EAAM,SAEJ7C,MA7GM,gBA8GT7J,MAAK4J,GAAYA,EAAS3P,SAC1B+F,MAAM4J,IACH8C,EAAM9C,CAAQ,IAEjB+C,OAAMC,GAAOpD,MAAM,iCAAmCoD,KAEzD,MAAMC,EAAc9R,KAAK2P,GAAGmC,YAAY,aAAc,aAChDR,EAAcQ,EAAYR,YAAY,cAE5CQ,EAAYC,WAAa,KACvBd,QAAQe,IAAI,sBAAsB,EAGpC,IAAIC,EAAI,EACJC,EAAM,GACV,MAAMC,EAAM,CACVC,IAAK,CAAC,GAAI,GAAI,IACd/O,MAAO,WACLrD,KAAKoS,IAAM,CAAC,GAAI,GAAI,IACpBF,EAAM,EACP,EACD9O,IAAK,SAAS6O,EAAGI,GACfrS,KAAKoS,IAAIH,IAAMI,CAChB,EACDd,IAAK,SAASU,GACZ,OAAOjS,KAAKoS,IAAIH,EACjB,GAGH,IAAI,IAAIK,EAAM,EAAGA,EAAMX,EAAI/S,OAAQ0T,IAAO,CACxC,MAAMC,EAAiBZ,EAAIW,GAC3B,GAAsB,KAAlBC,EAAuB,CACzB,OAAQN,GACN,KAAK,EACH,MACF,KAAK,EACH,IACEC,EAAM5E,KAAKkF,MAAML,EAAIZ,IAAI,GAG1B,CAFC,MAAM1P,GACNoP,QAAQe,IAAInQ,EACb,EAGLoQ,GACR,MAAa,GAAsB,MAAlBM,EAAwB,CACjC,MAAM9R,EAAM0R,EAAIZ,IAAI,GACpB,GAAW,IAAP9Q,EAAW,eAETT,KAAKwR,QAAQF,EAAa,CAC9BjG,KAAM5K,EACNgS,UAAWN,EAAIZ,IAAI,GACnBW,IAAKA,IAGPD,EAAI,EACJE,EAAI9O,OACZ,MACQ8O,EAAI/O,IAAI6O,EAAGM,EAEd,CACF,EACDvC,cAAe1B,iBAQb,aAPMQ,MA3KU,gBA4Kb7J,MAAK4J,GAAYA,EAAS3P,SAC1B+F,MAAM4J,IACH3C,aAAakB,QAAQ,WAAYyB,GACjC7O,KAAK8P,eAAe,IAEvB8B,OAAMC,GAAOpD,MAAM,+BAAiCoD,KAChD,CACR,EACD3B,iBAAkB5B,iBAQhB,aAPMQ,MApLS,sBAqLZ7J,MAAK4J,GAAYA,EAAS3P,SAC1B+F,MAAM4J,IACH3C,aAAakB,QAAQ,eAAgByB,GACrC7O,KAAKiQ,kBAAkB,IAE1B2B,OAAMC,GAAOpD,MAAM,mCAAqCoD,KACpD,CACR,EACD1M,KAAMmJ,iBAaJ,aAZoBtO,KAAKsQ,UAGvBW,QAAQe,IAAI,yBACNhS,KAAK0R,wBACL1R,KAAKgQ,sBACLhQ,KAAKkQ,qBAEXlQ,KAAK8P,gBACL9P,KAAKiQ,oBAGA,CACR,EACDyC,YAAYT,GACV,OAAQA,GACN,IAAK,OACH,MAAO,aACT,IAAK,OACH,MAAO,OACT,IAAK,MACH,MAAO,WACT,IAAK,OACH,MAAO,eACT,IAAK,OACH,MAAO,cACT,IAAK,MACH,MAAO,UACT,IAAK,OACH,MAAO,WACT,IAAK,MACH,MAAO,SACT,IAAK,OACH,MAAO,OACT,IAAK,MACH,MAAO,SACT,QACE,OAAOA,EAEZ,EACDU,WAAY,SAASzT,GACnB,IAAI0T,EAAY,CAAC1T,EAAK,GAAI,GACtB2T,EAAU,EACVC,EAAc,EAElB,IAAK,IAAInU,EAAI,EAAGA,EAAIqB,KAAK4P,SAAShR,OAAQD,IACxC,IAAK,IAAI6N,EAAI,EAAGA,EAAIxM,KAAK4P,SAASjR,GAAGC,OAAQ4N,IAAK,CAChD,IAAIzI,EAAI/D,KAAK4P,SAASjR,GAAG6N,GACzB,MAAMuG,EAAOhP,EAAEnF,OAAS,IAAc,KAARmF,EAAE,IAAgC,KAAnBA,EAAEA,EAAEnF,OAAS,IAK1D,GAJImU,IACFhP,EAAIA,EAAE4F,QAAQ,IAAK,KAGjB5F,EAAEnF,OAASM,EAAKN,OAAQ,SAC5B,IAAIoU,EAAW,MACb,IAAIvV,EAAI,EACR,KAAOA,EAAIsG,EAAEnF,QAAQ,CACnB,GAAImF,EAAEtG,IAAMyB,EAAKzB,GAAI,CACnB,GAAIA,EAAI,EACN,MAEA,OAAO,CAEV,CACDA,GACD,CACD,OAAOA,CACR,EAbc,GAef,GAAIuV,EAAWH,GAAYG,GAAYH,IAAYE,GAAY,MAALhP,GAAa,CACrE8O,EAAUG,EACVF,EAAcD,EACdD,EAAY,CAAC5S,KAAK4P,SAASjR,GAAG6N,GAAIxM,KAAK4P,SAASjR,GAAG,IAEnD,MAAMsU,EAAOlP,EAAEA,EAAEnF,OAAS,GACrB4N,EAAI,IAAMuG,IAAgB,KAARE,GAAuB,KAARA,IAAgBlP,EAAEnF,OAAS,IAC/DkU,EAAcD,EAAU,EACxBD,EAAY,CAAC5S,KAAK4P,SAASjR,GAAG,GAAIqB,KAAK4P,SAASjR,GAAG,OAE7B,GAApBoF,EAAEgD,QAAQ,MAAmB,MAALhD,GAAmB,MAALA,GAAagP,KACrDF,GAAW,EAEd,CACF,CAGH,MAAO,CAACC,EAAaF,EACtB,EACDM,YAAa,WACX,OAAOlT,KAAK6P,YAAYsD,KAAKC,MAAMD,KAAKE,SAAWrT,KAAK6P,YAAYjR,QACrE,EACD0U,YAAa,SAASC,GACpB,IAAuB,GAAnBA,EAAExM,QAAQ,KAAY,OAAOwM,EAAE1K,MAAM,KAEzC,IAAI2K,EAAY,GAEZC,EAAYF,EAEhB,KAAME,EAAU7U,QAAQ,CACtB,IAAIgU,EAAY5S,KAAK2S,WAAWc,GAChC,MAAM1P,EAAI6O,EAAU,GAAG,GAEvB,GAAIa,GAAaF,EAAG,CAClB,GAAIxP,EAAEnF,QAAU,EACd,MAAO,GAET,GAAIgU,EAAU,IAAMW,EAAE3U,OACpB,MAAO,CAACgU,EAAU,GAAG,GAExB,CAEDa,EAAYA,EAAU9V,MAAMiV,EAAU,IAElC7O,EAAEnF,QAAU,GACd4U,EAAUlS,KAAKyC,EAElB,CAED,OAAIyP,EAAU5U,OAAS,GAAwB,KAAnB4U,EAAU,GAAG,GAAkB,GAEpDA,CACR,EACDE,OAAQ,SAASH,GACf,MACMjC,EADctR,KAAK2P,GAAGmC,YAAY,aAAc,aACtBR,YAAY,cAE5C,OAAO,IAAI/O,SAASoR,IAClB3T,KAAKqR,QAAQC,EAAaiC,GAAI3C,IACvBA,GAAQ+C,EAAO,GACpBA,EAAO/C,EAAO,GACd,GAEL,uzBCrNC1S,EAUMH,EAAA6V,EAAAzV,sFA3DG,OAAc,GAAdd,KAAewQ,GAoCTxQ,KAASuB,UAAMiV,2FAxCNxW,EAAI,geAJ5Ba,EAuDMH,EAAA+V,EAAA3V,GAtDJL,EAqDMgW,EAAApJ,GApDJ5M,EAKM4M,EAAAE,GAJJ9M,EAEM8M,EAAAC,GADJ/M,EAA2B+M,EAAAF,iBAE7B7M,EAAyG8M,EAAAE,GAA9EhN,EAAwEgN,EAAAiJ,6BA+CrGjW,EAAyE4M,EAAAsJ,sEAjDrD3W,EAAI,wHA6CfA,EAAQ,wBAAbuB,OAAID,GAAA,gKAACtB,EAAQ,WAAbuB,OAAID,GAAA,EAAA,2HAAJC,8LAJFV,EAEMH,EAAA8M,EAAA1M,8CAtCCoM,EAAAlN,KAAW6U,yBAAhBtT,OAAID,GAAA,qBA2BD,IAAAsV,EAAA5W,KAAWoV,WAAS3E,GAAAzQ,gLA3BlBkN,EAAAlN,KAAW6U,YAAhBtT,OAAID,GAAA,EAAA,2HAAJC,OA2BGvB,KAAWoV,kJAc+CpV,EAAM,IAAA,0HAAnEa,EAA0EH,EAAA6P,EAAAzP,6DAAbd,EAAM,IAAA,KAAAiD,EAAA2R,EAAAiC,qDAjCxD7W,EAAK,IAAA,6FADRa,EAEMH,EAAA6P,EAAAzP,8BADHd,EAAK,IAAA,KAAAiD,EAAA2R,EAAAiC,4CAMCC,EAAA9W,MAAIwE,uBAATjD,OAAID,GAAA,mMAFRT,EASUH,EAAAqW,EAAAjW,GARRL,EAA0BsW,EAAAC,+EACnBF,EAAA9W,MAAIwE,UAATjD,OAAID,GAAA,EAAA,mHAAJC,kEAGQuL,EAAA9M,MAAG6B,KAAI,MACyB7B,EAAE,IAACiX,SAAW,IAAE,6OAHxDpW,EAAuBH,EAAAiM,EAAA7L,YACvBD,EAGMH,EAAA+M,EAAA3M,GAFJL,EAAoBgN,EAAAH,iBACpB7M,EAA6DgN,EAAAD,kBADvD,EAAArH,GAAA2G,KAAAA,EAAA9M,MAAG6B,KAAI,KAAAoB,EAAA2K,EAAAd,gBACyB9M,EAAE,IAACiX,SAAW,IAAE,KAAAhU,EAAAiU,EAAAC,0DAZvDC,EAAApX,MAAIyG,uBAATlF,OAAID,GAAA,qBAKD,IAAAsV,EAAA5W,MAAIwE,GAAC6S,GAAArX,yIANZa,EAkBMH,EAAA6P,EAAAzP,8FAjBGsW,EAAApX,MAAIyG,UAATlF,OAAID,GAAA,EAAA,gHAAJC,OAKGvB,MAAIwE,yHATZqI,EAAAuF,GAAWiD,YAAYrV,KAAS4U,GAAC,GAE3B0C,EAAAtX,KAASgV,uBAAdzT,OAAID,GAAA,4KAHRT,EAwBMH,EAAA6P,EAAAzP,iBAtBJL,EAAI8P,EAAAgH,gEADH,EAAApR,GAAA0G,KAAAA,EAAAuF,GAAWiD,YAAYrV,KAAS4U,GAAC,KAAA3R,EAAA2J,EAAAC,kBAE3ByK,EAAAtX,KAASgV,UAAdzT,OAAID,GAAA,EAAA,mHAAJC,4DA2BCuL,EAAA9M,KAAWoV,UAAS,4OAHzBvU,EAKUH,EAAAqW,EAAAjW,GAJRL,EAA2BsW,EAAAC,UAC3BvW,EAEMsW,EAAAxG,kBADH,EAAApK,GAAA2G,KAAAA,EAAA9M,KAAWoV,UAAS,KAAAnS,EAAA2K,EAAAd,wDAzC9B,OAAS,GAAT9M,KAAUwX,2GADjB3W,EAuEOH,EAAA0M,EAAAtM,0IApHD,IAAAkN,GAAqB,EACrByJ,EAAQ,GAIR1X,EAaA,EAEK,SAAA2X,EAAWxB,GAClB5G,GAAUhF,IAAI4L,YAmBPyB,IACPvM,OAAOgI,KAAoC,+BAAApF,IAAQ,UAjBrDqB,GAAY3E,WAASuG,aACrB7B,EAAA,EAAApB,EAAQxN,GACFwN,IAAiB,GAATA,EAAU,CACd,MAAA4J,QAAaxF,GAAWiE,OAAOrI,GAChC4J,OAIHH,EAAQ,IACRrI,EAAA,EAAArP,EAAa6X,KAJbxI,EAAA,EAAAqI,EAAWrF,GAAW6D,YAAYjI,IAClCoB,EAAA,EAAArP,EAAa,SAMfqP,EAAA,EAAApB,GAAQ,2BAiB6D2J,OA4C5BtI,GAAY/E,IAAIuN,GAGnB,IAAAH,EAAW1J,6HCvDlChO,EAAO,iGAD1Ba,EAEMH,EAAA6P,EAAAzP,uDADad,EAAO,uJAHxBa,EAAWH,EAAA6P,EAAAzP,8MAFbD,EAA4DH,EAAA8M,EAAA1M,6GADvDd,EAAO,GAACuB,QAAUvB,EAAI,GAAA,EAEhBA,EAAI,KAAA,8JAJjBa,EAWOH,EAAA0M,EAAAtM,GAVLL,EAAuB2M,EAAAmD,2QAvCbuH,GAAQjO,EAYd/B,EAAO,EACR6H,EAAO,UAEXmI,EAASjS,SAAQ,SAChB8J,EAAO,IAED,MAAAtB,EAASjD,OAAOyD,aAAaC,QAAQ,gBAErCT,EAAM,CACGA,EAAO7C,MAAM,KACnBhM,SAASuY,IACN,MAAAlI,EAAOzE,OAAOyD,aAAaC,QAAQiJ,GACpClI,GAAM+D,QAAQC,MAAM,kCACzBlE,EAAQ1L,KAAKgM,KAAKkF,MAAMtF,GAAI,WAKhCT,EAAA,EAAAtH,EAAO,EAAC,EAGXhE,GAAO,KACNgU,EAASjS,UAAQ,sOCamEgH,EAAA7M,KAASgO,KAAI,GAExFd,EAAAlN,KAASgT,kCAAdzR,OAAID,GAAA,4QAHRT,EAiBMH,EAAA+M,EAAA3M,GAhBLL,EAAuGgN,EAAAH,iBACvG7M,EAcMgN,EAAAD,uFAf6E,EAAArH,GAAA0G,KAAAA,EAAA7M,KAASgO,KAAI,KAAA/K,EAAA2J,EAAAC,mBAExFK,EAAAlN,KAASgT,qBAAdzR,OAAID,GAAA,EAAA,mHAAJC,2FALFV,EAAWH,EAAA6P,EAAAzP,kEAQPd,EAAG,GAAA,mKADW4C,EAAAgO,EAAA,QAAAoH,EAAAzX,GAAAP,EAAY,IAAAA,EAAK,KAAAA,KAAU,GAAK,QAAU,KAAOA,EAAQ,IAAIA,EAAK,KAAAA,KAAU,GAAK,QAAU,KAAE,qNAD9Ga,EAUMH,EAAA6P,EAAAzP,GATLL,EAES8P,EAAAK,iBACTnQ,EAEO8P,EAAA7C,UACPjN,EAEO8P,EAAA5C,6DAPL3N,EAAG,GAAA,KAAAiD,EAAA2J,EAAAC,GADW,GAAA1G,GAAA6R,KAAAA,EAAAzX,GAAAP,EAAY,IAAAA,EAAK,KAAAA,KAAU,GAAK,QAAU,KAAOA,EAAQ,IAAIA,EAAK,KAAAA,KAAU,GAAK,QAAU,KAAE,gHAR3GA,EAAI,MAAAwX,mVAVZ3W,EAgCOH,EAAA0M,EAAAtM,GA/BLL,EAQM2M,EAAAsD,4LA3CF,IACDuH,EADCnQ,EAAO,EAERoQ,EAAW,EACX9J,EAAS,EAAK,GAAI,YAEb+J,IACR/I,EAAA,EAAA8I,EAAW,OACX9J,EAAS,EAAK,GAAI,QAClB6J,EAAW7F,GAAWyD,eAEpBzG,EAAA,EAAAtH,EAAO,GAGD,SAAAsQ,EAAa9W,GACjB4W,EACH7I,GAAY/E,IAAI2N,EAASjF,aAAa1R,KAInCA,GAAK2W,EAASlF,QACjB3D,EAAA,EAAAhB,EAAa,CAAA6J,EAASlF,SAAU,IAEhC3D,EAAA,EAAAhB,EAAa,CAAA6J,EAASlF,QAASzR,IAGhC+N,GAAY/E,IAAI2N,EAASjK,MACzBoB,EAAA,EAAA8I,EAAW,IAGZpU,GAAO,KACNqU,GAAW,4BAK6BA,GAAW,OAabD,GAAU7I,GAAY/E,IAAI2N,EAASjK,KAAI,EAIuD1M,GAAA8W,EAAa9W,6HCa9HtB,EAAO,iGAD1Ba,EAEMH,EAAA6P,EAAAzP,uDADad,EAAO,ySAH1Ba,EAAiFH,EAAA6P,EAAAzP,oIAD5E,OAAAd,KAAQuB,SAAM,oGATuE,+EAAzEvB,EAAS,GAAG,WAAa,sQAJ5Ca,EAoBOH,EAAA0M,EAAAtM,GAnBNL,EAWO2M,EAAAsD,GAVNjQ,EASMiQ,EAAAjD,GARLhN,EAIMgN,EAAAH,GAHL7M,EAES6M,EAAAsD,iBAEVnQ,EAEMgN,EAAAD,uGANUxN,EAAS,GAAG,WAAa,+RA7CvC,IAAAoQ,GAAW,EACdZ,GAAc9E,WAAU2F,IACtBD,EAAUC,CAAC,IAUV,IAAAS,EAAoB,EAEpBnB,EAAO,kBAEI0I,IACdjJ,EAAA,EAAA0B,EAAY,OACZnB,EAAO,UAED6B,QAAiBC,MA7BD,mEA6BqB,CAC1CC,OAAQ,OACRC,QAAO,CACN,eAAgB,oBAEjBC,KAAM3B,KAAKC,UACV,CAAAoB,OAAQlB,MAEPxI,MAAMnB,GAAMA,EAAEoL,SAEblC,EAAQpO,SAEZ6N,EAAA,EAAAO,EAAU6B,GACVpC,EAAA,EAAA0B,EAAY,IAGZhN,GAAO,KACPuU,GAAS,sBAK+C,GAAbvH,GAAwBuH,GAAS,oGClCpDrY,EAAS,wCAAYA,EAAM,oFADxC,IAAMA,EAAI,IAAIA,EAAM,GAAG,SAAW,IAAE,2BAAjDa,EAEOH,EAAA0M,EAAAtM,2CADmBd,EAAS,IAAA,yJADtB,IAAMA,EAAI,IAAIA,EAAM,GAAG,SAAW,IAAE,sJAjBpC,IAAAsY,KAAAA,EAAI3U,UAAEA,GAASkG,EAEtB0O,EAAM,CACR1S,SAAQ,QAGNwG,EAAS,UAEdiE,EAASrF,YAAYP,WAAUlK,IAC9B4O,EAAA,EAAA/C,EAAS7L,GAEH,IAAM8X,GAAQjM,GAChBkM,EAAO1S,uOdmDb,SAAqB9F,EAAYC,EAAKC,EAASf,GAC3C,GAAIa,EAAY,CACZ,MAAMyY,EAAW1Y,EAAiBC,EAAYC,EAAKC,EAASf,GAC5D,OAAOa,EAAW,GAAGyY,EACxB,CACL,sFe7DA3X,EAEOH,EAAA0M,EAAAtM,6CAFad,EAAW,uCfqF/B,SAA0ByY,EAAMC,EAAiB1Y,EAAKC,EAAS0Y,EAAcC,GACzE,GAAID,EAAc,CACd,MAAME,EAAe/Y,EAAiB4Y,EAAiB1Y,EAAKC,EAAS2Y,GACrEH,EAAKrS,EAAEyS,EAAcF,EACxB,CACL,eAvBA,SAA0B5Y,EAAYE,EAASkG,EAAOjH,GAClD,GAAIa,EAAW,IAAMb,EAAI,CACrB,MAAM4Z,EAAO/Y,EAAW,GAAGb,EAAGiH,IAC9B,QAAsB4I,IAAlB9O,EAAQkG,MACR,OAAO2S,EAEX,GAAoB,iBAATA,EAAmB,CAC1B,MAAMC,EAAS,GACTC,EAAMlD,KAAKmD,IAAIhZ,EAAQkG,MAAM5E,OAAQuX,EAAKvX,QAChD,IAAK,IAAID,EAAI,EAAGA,EAAI0X,EAAK1X,GAAK,EAC1ByX,EAAOzX,GAAKrB,EAAQkG,MAAM7E,GAAKwX,EAAKxX,GAExC,OAAOyX,CACV,CACD,OAAO9Y,EAAQkG,MAAQ2S,CAC1B,CACD,OAAO7Y,EAAQkG,KACnB,iBAWA,SAAkClG,GAC9B,GAAIA,EAAQD,IAAIuB,OAAS,GAAI,CACzB,MAAM4E,EAAQ,GACR5E,EAAStB,EAAQD,IAAIuB,OAAS,GACpC,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,IACxB6E,EAAM7E,IAAM,EAEhB,OAAO6E,CACV,CACD,OAAQ,CACZ,+IehHa+S,GAAUrP,wFAGnByG,EAASxE,KAAKoN,+JCgGmHrC,EAAA7W,MAAM,GAAC,sGAArDa,EAA8DH,EAAAiM,EAAA7L,iFAAxEoY,GAAAlZ,MAAM,+FAA1D4C,EAAA2N,EAAA,QAAA4I,EAAA5Y,EAAAP,EAAS,IAAA,IAAMA,MAAM,GAAM,SAAW,IAAE,2BAA9Da,EAA+JH,EAAA6P,EAAAzP,wFAAzIsY,GAAA,EAAAjT,GAAAgT,KAAAA,EAAA5Y,EAAAP,EAAS,IAAA,IAAMA,MAAM,GAAM,SAAW,IAAE,0QAanCqZ,+CACMC,8CACDC,6CACDC,gDACGC,+MALdzZ,EAAa,GAAA,oFAAjCa,EAMMH,EAAA4M,EAAAxM,oGAEND,EAAuDH,EAAA8M,EAAA1M,YAEvDD,EAEMH,EAAA+M,EAAA3M,0CAJ+Bd,EAAU,yCAR3BA,EAAa,GAAA,0fANjCa,EAIMH,EAAA8M,EAAA1M,sEAXAd,EAAM,wBAAXuB,OAAID,GAAA,gKhB4vCR,SAAwBoY,EAASC,GAC7B,MAAMC,EAAQD,EAAKC,MAAQ,GAC3B,SAASjU,EAAOxB,EAAMsF,EAAOrG,EAAK5C,GAC9B,GAAImZ,EAAKC,QAAUA,EACf,OACJD,EAAKE,SAAWrZ,EAChB,IAAIsZ,EAAYH,EAAK3Z,SACT+O,IAAR3L,IACA0W,EAAYA,EAAUxZ,QACtBwZ,EAAU1W,GAAO5C,GAErB,MAAMqG,EAAQ1C,IAASwV,EAAKP,QAAUjV,GAAM2V,GAC5C,IAAIC,GAAc,EACdJ,EAAK9S,QACD8S,EAAKK,OACLL,EAAKK,OAAOxa,SAAQ,CAACqH,EAAOvF,KACpBA,IAAMmI,GAAS5C,IACfL,IACAQ,EAAeH,EAAO,EAAG,GAAG,KACpB8S,EAAKK,OAAO1Y,KAAOuF,IACnB8S,EAAKK,OAAO1Y,GAAK,KACpB,IAELqF,IACH,IAILgT,EAAK9S,MAAMrF,EAAE,GAEjBqF,EAAMH,IACNE,EAAcC,EAAO,GACrBA,EAAMS,EAAEqS,EAAKM,QAASN,EAAK7Y,QAC3BiZ,GAAc,GAElBJ,EAAK9S,MAAQA,EACT8S,EAAKK,SACLL,EAAKK,OAAOvQ,GAAS5C,GACrBkT,GACAtU,GAEP,CACD,IAl4CgBjF,EAk4CDkZ,IAj4CkB,iBAAVlZ,GAA4C,mBAAfA,EAAMoH,KAi4CjC,CACrB,MAAMnE,EAAoBG,IAc1B,GAbA8V,EAAQ9R,MAAKpH,IACTkD,EAAsBD,GACtBkC,EAAOgU,EAAK/R,KAAM,EAAG+R,EAAKnZ,MAAOA,GACjCkD,EAAsB,KAAK,IAC5BmQ,IAIC,GAHAnQ,EAAsBD,GACtBkC,EAAOgU,EAAKpF,MAAO,EAAGoF,EAAK9F,MAAOA,GAClCnQ,EAAsB,OACjBiW,EAAKO,SACN,MAAMrG,CACT,IAGD8F,EAAKP,UAAYO,EAAKQ,QAEtB,OADAxU,EAAOgU,EAAKQ,QAAS,IACd,CAEd,KACI,CACD,GAAIR,EAAKP,UAAYO,EAAK/R,KAEtB,OADAjC,EAAOgU,EAAK/R,KAAM,EAAG+R,EAAKnZ,MAAOkZ,IAC1B,EAEXC,EAAKE,SAAWH,CACnB,CA55CL,IAAoBlZ,CA65CpB,EgB3zCUR,EAAI,GAAA2Z,0XATd9Y,EA+BMH,EAAA6M,EAAAzM,GA9BLL,EAMM8M,EAAAE,GALLhN,EAAoBgN,EAAAH,4DAIpB7M,EAAuBgN,EAAAD,UAExB/M,EAsBO8M,EAAAH,iGA3BCpN,EAAM,WAAXuB,OAAID,GAAA,EAAA,wGAAJC,OAAID,EAAAoO,EAAAnO,OAAAD,GAAA,YhBk0CR,SAAmCqY,EAAM3Z,EAAKmG,GAC1C,MAAM2T,EAAY9Z,EAAIM,SAChBuZ,SAAEA,GAAaF,EACjBA,EAAKP,UAAYO,EAAK/R,OACtBkS,EAAUH,EAAKnZ,OAASqZ,GAExBF,EAAKP,UAAYO,EAAKpF,QACtBuF,EAAUH,EAAK9F,OAASgG,GAE5BF,EAAK9S,MAAMT,EAAE0T,EAAW3T,EAC5B,sCgB50CI5E,OAAID,GAAA,6MArFF8J,OAAO+H,WACX/B,MAAM,+DAYH,IAAAkH,EAAO,GACXhI,EAASrF,YAAYP,WAAUlK,IAC9B4O,EAAA,EAAAkJ,EAAO9X,EAAK,QAKT4Z,EACAC,EACAC,EAJAxS,EAAOsK,GAAWtK,OAMlBiD,EAAI,EAEJwP,EAAgB,GAChBC,EAAY,EAeV,MAAAC,WAA4BjW,GACjC4V,EAAQ9W,MAAMoX,OAAS,aACvB/Y,SAASiQ,KAAKtO,MAAMoX,OAAS,aAEvB,MAAAC,EAAKnW,EAAEoW,QAAU7P,EAEjB8P,EAAe/E,KAAKmD,IAAI,GAAInD,KAAKgF,IAAI,GAAwB,KAAlBN,EAAYG,GAAaP,EAAQnZ,WAAW8Z,wBAAwBC,QACrH5L,EAAA,EAAAmL,EAAgBM,GAEhBR,EAAS/W,MAAM2X,WAAa,OAC1BZ,EAAS/W,MAAM4X,cAAgB,OAE/BZ,EAAUhX,MAAM2X,WAAa,OAC7BX,EAAUhX,MAAM4X,cAAgB,QAG7BC,EAAc,WACnBf,EAAQ9W,MAAMC,eAAe,UAC3B5B,SAASiQ,KAAKtO,MAAMC,eAAe,UAEnC8W,EAAS/W,MAAMC,eAAe,eAC9B8W,EAAS/W,MAAMC,eAAe,kBAE9B+W,EAAUhX,MAAMC,eAAe,eAC/B+W,EAAUhX,MAAMC,eAAe,kBAE/B5B,SAASY,oBAAoB,YAAakY,GAC1C9Y,SAASY,oBAAoB,UAAW4Y,WAG3CrX,GAAO,KACNwM,EAASxI,aACHkE,EAASsE,EAAS5E,YAEHqD,MAAjB/C,EAAOsF,QAAwB8J,MAAMC,OAAOrP,EAAOsF,UACtD9B,GAAclF,IAAI+Q,OAAOrP,EAAOsF,iBAzEtB,CACV,CAAA,GAAI,QACJ,CAAA,SAAU,iBACV,CAAA,QAAS,eACT,CAAA,SAAU,WACV,CAAA,OAAQ,QACR,CAAA,UAAW,gCAmBJ,SAAW9M,GACnB4V,EAAU5V,EAAE9D,OACZ2Z,EAAWD,EAAQkB,uBACnBhB,EAAYF,EAAQmB,mBAEpBxQ,EAAIvG,EAAEoW,QACJJ,EAAYH,EAASU,wBAAwBC,MAG7CrZ,SAASW,iBAAiB,YAAamY,GACvC9Y,SAASW,iBAAiB,UAAW6Y,YCrD7B,kEAAQ,CAChBza,OAAQiB,SAASiQ,KACjB1J,MAAO,CACHxG,KAAM"}